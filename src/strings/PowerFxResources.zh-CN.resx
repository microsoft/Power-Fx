<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ListItemSingleQuotedFormat" xml:space="preserve">
    <value>'{0}'</value>
    
  </data>
  <data name="AboutIf" xml:space="preserve">
    <value>检查是否满足指定条件中的任何一个，并返回对应值。如果不满足任何条件，则函数返回指定默认值。</value>
    
  </data>
  <data name="IfArgCond" xml:space="preserve">
    <value>逻辑测试</value>
    
  </data>
  <data name="IfArgTrueValue" xml:space="preserve">
    <value>true_值</value>
    
  </data>
  <data name="IfArgElseValue" xml:space="preserve">
    <value>else_值</value>
    
  </data>
  <data name="AboutIf_logical_test" xml:space="preserve">
    <value>生成布尔值的条件。</value>
  </data>
  <data name="AboutIf_true_value" xml:space="preserve">
    <value>在条件为 true 时提供 If 的结果的表达式。</value>
    
  </data>
  <data name="AboutIf_else_value" xml:space="preserve">
    <value>在所有指定条件都是 false 时提供 If 的结果的表达式。</value>
    
  </data>
  <data name="AboutSwitch" xml:space="preserve">
    <value>使用一系列值匹配公式的结果。当找到匹配项时，将计算并返回相应的公式。如果没有找到匹配项，则计算并返回上一个默认公式。</value>
    
  </data>
  <data name="SwitchExpression" xml:space="preserve">
    <value>开关值</value>
    
  </data>
  <data name="SwitchDefaultReturn" xml:space="preserve">
    <value>默认结果</value>
    
  </data>
  <data name="SwitchCaseExpr" xml:space="preserve">
    <value>匹配值</value>
    
  </data>
  <data name="SwitchCaseArg" xml:space="preserve">
    <value>匹配结果</value>
    
  </data>
  <data name="AboutSwitch_switch_value" xml:space="preserve">
    <value>用于与每个匹配值进行比较的值。</value>
    
  </data>
  <data name="AboutSwitch_match_value" xml:space="preserve">
    <value>用于匹配开关值的值。</value>
    
  </data>
  <data name="AboutSwitch_match_result" xml:space="preserve">
    <value>找到匹配项时所计算并返回的公式。</value>
  </data>
  <data name="AboutSwitch_default_result" xml:space="preserve">
    <value>找不到匹配项时所计算并返回的公式。</value>
  </data>
  <data name="AboutAnd" xml:space="preserve">
    <value>检查所有参数是否均为 true，如果所有参数都是 true，则返回 true。</value>
    
  </data>
  <data name="AboutOr" xml:space="preserve">
    <value>检查是否有任何参数为 true，并返回 true 或 false。仅当所有参数都是 false 时才返回 false。</value>
    
  </data>
  <data name="AboutNot" xml:space="preserve">
    <value>将 false 更改为 true，并将 true 更改为 false。</value>
    
  </data>
  <data name="LogicalFuncParam" xml:space="preserve">
    <value>逻辑</value>
    
  </data>
  <data name="AboutAnd_logical" xml:space="preserve">
    <value>作为 And 运算的系数的逻辑表达式。</value>
  </data>
  <data name="AboutOr_logical" xml:space="preserve">
    <value>作为 Or 运算的系数的逻辑表达式。</value>
  </data>
  <data name="AboutNot_logical" xml:space="preserve">
    <value>要求反的逻辑表达式。</value>
  </data>
  <data name="AboutCount" xml:space="preserve">
    <value>对指定列中的数值进行计数。</value>
    
  </data>
  <data name="AboutCountA" xml:space="preserve">
    <value>对列中不为空的行数进行计数。</value>
    
  </data>
  <data name="AboutCountRows" xml:space="preserve">
    <value>对输入表或集合中的行数进行计数。</value>
    
  </data>
  <data name="CountArg1" xml:space="preserve">
    <value>源</value>
    
  </data>
  <data name="AboutCount_source" xml:space="preserve">
    <value>要进行计数的值组成的列。</value>
  </data>
  <data name="AboutCountA_source" xml:space="preserve">
    <value>要进行计数的值组成的列。</value>
  </data>
  <data name="AboutCountRows_source" xml:space="preserve">
    <value>将对其中的行进行计数的表。</value>
  </data>
  <data name="AboutCountIf" xml:space="preserve">
    <value>对满足给定条件的行数进行计数。</value>
    
  </data>
  <data name="CountIfArg1" xml:space="preserve">
    <value>源</value>
    
  </data>
  <data name="CountIfArg2" xml:space="preserve">
    <value>条件</value>
    
  </data>
  <data name="AboutCountIf_source" xml:space="preserve">
    <value>将在其中对满足特定条件的行进行计数的表。</value>
  </data>
  <data name="AboutCountIf_condition" xml:space="preserve">
    <value>为每行计算的表达式，指定是否应对行进行计数。</value>
  </data>
  <data name="AboutSumT" xml:space="preserve">
    <value>返回表达式要在表上下文中计算的数字的总和。</value>
    
  </data>
  <data name="AboutMaxT" xml:space="preserve">
    <value>返回表达式要在表上下文中计算的最大值。</value>
    
  </data>
  <data name="AboutMinT" xml:space="preserve">
    <value>返回表达式要在表上下文中计算的最小值。</value>
    
  </data>
  <data name="AboutAverageT" xml:space="preserve">
    <value>返回表达式在表的上下文中计算的数字的平均值(算术平均值)。</value>
    
  </data>
  <data name="StatisticalTArg1" xml:space="preserve">
    <value>源</value>
    
  </data>
  <data name="StatisticalTArg2" xml:space="preserve">
    <value>表达式</value>
    
  </data>
  <data name="AboutMin_source" xml:space="preserve">
    <value>将对其计算此最小值运算的表。</value>
  </data>
  <data name="AboutMin_expression" xml:space="preserve">
    <value>对输入表中每行计算的表达式，为此最小值运算提供数值。</value>
  </data>
  <data name="AboutMax_source" xml:space="preserve">
    <value>将对其计算此最大运算的表。</value>
  </data>
  <data name="AboutMax_expression" xml:space="preserve">
    <value>对输入表中每行计算的表达式，为此最大运算提供数值。</value>
  </data>
  <data name="AboutAverage_source" xml:space="preserve">
    <value>对其计算此平均值运算的表。</value>
  </data>
  <data name="AboutAverage_expression" xml:space="preserve">
    <value>对输入表中的每行计算的表达式，为此平均值运算提供数值。</value>
  </data>
  <data name="AboutSum_source" xml:space="preserve">
    <value>将对其计算此总和运算的表。</value>
  </data>
  <data name="AboutSum_expression" xml:space="preserve">
    <value>对输入表中每行计算的表达式，为此总和运算提供数值。</value>
  </data>
  <data name="AboutSum" xml:space="preserve">
    <value>返回其参数的总和。</value>
    
  </data>
  <data name="AboutMax" xml:space="preserve">
    <value>返回值集中的最大值。忽略逻辑值和文本。</value>
    
  </data>
  <data name="AboutMin" xml:space="preserve">
    <value>返回值集中的最小值。忽略逻辑值和文本。</value>
    
  </data>
  <data name="AboutAverage" xml:space="preserve">
    <value>返回参数的平均值(算术平均值)。</value>
    
  </data>
  <data name="StatisticalArg" xml:space="preserve">
    <value>数字</value>
    
  </data>
  <data name="AboutSum_number" xml:space="preserve">
    <value>用于此总和运算的数值。</value>
  </data>
  <data name="AboutMin_number" xml:space="preserve">
    <value>用于此最小值运算的数值。</value>
  </data>
  <data name="AboutMax_number" xml:space="preserve">
    <value>用于此最大值运算的数值。</value>
  </data>
  <data name="AboutAverage_number" xml:space="preserve">
    <value>用于此平均值运算的数值。</value>
  </data>
  <data name="AboutAddColumns" xml:space="preserve">
    <value>返回一个表，其中包含通过对“源”计算所有“表达式”而计算出的新列。</value>
    
  </data>
  <data name="AddColumnsArg1" xml:space="preserve">
    <value>源</value>
    
  </data>
  <data name="AddColumnsArg2" xml:space="preserve">
    <value>列</value>
    
  </data>
  <data name="AddColumnsArg3" xml:space="preserve">
    <value>表达式</value>
    
  </data>
  <data name="AboutAddColumns_source" xml:space="preserve">
    <value>要向其中添加列的表或记录。</value>
    
  </data>
  <data name="AboutAddColumns_column" xml:space="preserve">
    <value>唯一的列名。</value>
    
  </data>
  <data name="AboutAddColumns_expression" xml:space="preserve">
    <value>为新列提供值的表达式。</value>
    
  </data>
  <data name="AboutDropColumns" xml:space="preserve">
    <value>返回通过从 "source" 表删除一个或多个指定 "columns" 得到的表。</value>
    
  </data>
  <data name="DropColumnsArg1" xml:space="preserve">
    <value>源</value>
    
  </data>
  <data name="DropColumnsArg2" xml:space="preserve">
    <value>列名</value>
    
  </data>
  <data name="AboutDropColumns_source" xml:space="preserve">
    <value>要从中删除列的表或记录值。</value>
  </data>
  <data name="AboutDropColumns_column_name" xml:space="preserve">
    <value>要删除的列的名称。</value>
  </data>
  <data name="AboutRenameColumns" xml:space="preserve">
    <value>返回指定 "source" 表的副本，将 "old_column" 列重命名为 "new_column"。</value>
    
  </data>
  <data name="RenameColumnsArg1" xml:space="preserve">
    <value>源</value>
    
  </data>
  <data name="RenameColumnsArg2" xml:space="preserve">
    <value>旧列</value>
    
  </data>
  <data name="RenameColumnsArg3" xml:space="preserve">
    <value>新列</value>
    
  </data>
  <data name="AboutRenameColumns_source" xml:space="preserve">
    <value>要处理的表值。</value>
  </data>
  <data name="AboutRenameColumns_old_column" xml:space="preserve">
    <value>要重命名的列的名称。</value>
  </data>
  <data name="AboutRenameColumns_new_column" xml:space="preserve">
    <value>新的列名称。</value>
  </data>
  <data name="ErrColRenamedTwice_Name" xml:space="preserve">
    <value>不能将指定的列“{0}”重命名两次。</value>
    
  </data>
  <data name="AboutFilter" xml:space="preserve">
    <value>从表中返回所有指定条件都是 true 的行。</value>
    
  </data>
  <data name="FilterArg1" xml:space="preserve">
    <value>源</value>
    
  </data>
  <data name="FilterArg2" xml:space="preserve">
    <value>逻辑测试</value>
    
  </data>
  <data name="AboutFilter_source" xml:space="preserve">
    <value>要筛选的表。</value>
  </data>
  <data name="AboutFilter_logical_test" xml:space="preserve">
    <value>要为每行计算的逻辑测试。只有通过此测试的行才会包含在 Filter 的结果中。</value>
  </data>
  <data name="AboutFirst" xml:space="preserve">
    <value>返回 "source" 的第一行。</value>
    
  </data>
  <data name="AboutLast" xml:space="preserve">
    <value>返回 "source" 的最后一行。</value>
    
  </data>
  <data name="FirstLastArg1" xml:space="preserve">
    <value>源</value>
    
  </data>
  <data name="AboutFirst_source" xml:space="preserve">
    <value>将返回其中第一行的表。</value>
  </data>
  <data name="AboutLast_source" xml:space="preserve">
    <value>将返回其中最后一行的表。</value>
  </data>
  <data name="AboutFirstN" xml:space="preserve">
    <value>返回 "source" 的前 "count" 行。</value>
    
  </data>
  <data name="AboutLastN" xml:space="preserve">
    <value>返回 "source" 的最后 "count" 行。</value>
    
  </data>
  <data name="FirstLastNArg1" xml:space="preserve">
    <value>源</value>
    
  </data>
  <data name="FirstLastNArg2" xml:space="preserve">
    <value>计数</value>
    
  </data>
  <data name="AboutFirstN_source" xml:space="preserve">
    <value>将返回其中的行的表。</value>
  </data>
  <data name="AboutFirstN_count" xml:space="preserve">
    <value>要返回的行数。</value>
  </data>
  <data name="AboutLastN_source" xml:space="preserve">
    <value>将返回其中的行的表。</value>
  </data>
  <data name="AboutLastN_count" xml:space="preserve">
    <value>要返回的行数。</value>
  </data>
  <data name="AboutText" xml:space="preserve">
    <value>将“值”转换为以特定数值“格式文本”表示的文本。</value>
    
  </data>
  <data name="TextArg1" xml:space="preserve">
    <value>值</value>
    
  </data>
  <data name="TextArg2" xml:space="preserve">
    <value>格式文本</value>
    
  </data>
  <data name="TextArg3" xml:space="preserve">
    <value>语言</value>
    
  </data>
  <data name="AboutText_value" xml:space="preserve">
    <value>要设置为文本格式的值。</value>
  </data>
  <data name="AboutText_format_text" xml:space="preserve">
    <value>指定用于设置 "value" 格式的方式的文本值。</value>
    
  </data>
  <data name="AboutText_language" xml:space="preserve">
    <value>在转换为文本时要使用的语言代码。</value>
    
  </data>
  <data name="AboutValue" xml:space="preserve">
    <value>将表示数字的 "text" 转换为数值。</value>
    
  </data>
  <data name="ValueArg1" xml:space="preserve">
    <value>文本</value>
    
  </data>
  <data name="ValueArg2" xml:space="preserve">
    <value>语言</value>
    
  </data>
  <data name="AboutValue_text" xml:space="preserve">
    <value>要转换为数值的文本值。</value>
  </data>
  <data name="AboutValue_language" xml:space="preserve">
    <value>在转换值时要使用的语言代码。</value>
    
  </data>
  <data name="AboutBoolean" xml:space="preserve">
    <value>将表示布尔值的“文本”转换为布尔值。</value>
    
  </data>
  <data name="BooleanArg1" xml:space="preserve">
    <value>文本</value>
    
  </data>
  <data name="AboutBoolean_text" xml:space="preserve">
    <value>要转换为布尔值的文本值。</value>
  </data>
  <data name="AboutBooleanT" xml:space="preserve">
    <value>将文本值列转换为布尔值列。</value>
    
  </data>
  <data name="BooleanTArg1" xml:space="preserve">
    <value>输入</value>
    
  </data>
  <data name="AboutBooleanT_input" xml:space="preserve">
    <value>要处理的文本值组成的列。</value>
  </data>
  <data name="AboutBooleanN" xml:space="preserve">
    <value>将“数值”转换为布尔值。</value>
    
  </data>
  <data name="BooleanNArg1" xml:space="preserve">
    <value>数字</value>
    
  </data>
  <data name="AboutBooleanN_number" xml:space="preserve">
    <value>要转换为布尔值的数字值。</value>
  </data>
  <data name="AboutBooleanNT" xml:space="preserve">
    <value>将数值列转换为布尔值列。</value>
    
  </data>
  <data name="BooleanNTArg1" xml:space="preserve">
    <value>输入</value>
    
  </data>
  <data name="AboutBooleanNT_input" xml:space="preserve">
    <value>要处理的数值组成的列。</value>
  </data>
  <data name="AboutBooleanB" xml:space="preserve">
    <value>将“布尔型”转换为布尔值。</value>
    
  </data>
  <data name="BooleanBArg1" xml:space="preserve">
    <value>布尔</value>
    
  </data>
  <data name="AboutBooleanB_boolean" xml:space="preserve">
    <value>要转换为布尔值的布尔值。</value>
  </data>
  <data name="AboutBooleanBT" xml:space="preserve">
    <value>将布尔值列转换为布尔值列。</value>
    
  </data>
  <data name="BooleanBTArg1" xml:space="preserve">
    <value>输入</value>
    
  </data>
  <data name="AboutBooleanBT_input" xml:space="preserve">
    <value>要处理的布尔值列。</value>
  </data>
  <data name="AboutBooleanW" xml:space="preserve">
    <value>将十进制数转换为布尔值。</value>
    
  </data>
  <data name="BooleanWArg1" xml:space="preserve">
    <value>数字</value>
    
  </data>
  <data name="AboutBooleanW_number" xml:space="preserve">
    <value>要转换为布尔值的十进制数值。</value>
  </data>
  <data name="AboutBooleanWT" xml:space="preserve">
    <value>将十进制数值列转换为布尔值列。</value>
    
  </data>
  <data name="BooleanWTArg1" xml:space="preserve">
    <value>输入</value>
    
  </data>
  <data name="AboutBooleanWT_input" xml:space="preserve">
    <value>要处理的数值组成的列。</value>
  </data>
  <data name="AboutBooleanL" xml:space="preserve">
    <value>将布尔值支持的选择值转换为布尔值。</value>
    
  </data>
  <data name="BooleanLArg1" xml:space="preserve">
    <value>单选</value>
    
  </data>
  <data name="AboutBooleanL_choice" xml:space="preserve">
    <value>要转换为布尔值的选择。</value>
  </data>
  <data name="AboutBooleanLT" xml:space="preserve">
    <value>将布尔值支持的选择值列转换为布尔值列。</value>
    
  </data>
  <data name="BooleanLTArg1" xml:space="preserve">
    <value>输入</value>
    
  </data>
  <data name="AboutBooleanLT_input" xml:space="preserve">
    <value>要处理的选择值列。</value>
  </data>
  <data name="AboutCoalesce" xml:space="preserve">
    <value>返回第一个非空白参数</value>
    
  </data>
  <data name="CoalesceArg1" xml:space="preserve">
    <value>值</value>
    
  </data>
  <data name="AboutCoalesce_value" xml:space="preserve">
    <value>要返回的参数(如果为第一个非空白参数)。</value>
  </data>
  <data name="AboutConcatenate" xml:space="preserve">
    <value>将多个文本值联接为一个文本值。</value>
    
  </data>
  <data name="AboutDecimal" xml:space="preserve">
    <value>将表示数字的“文本”转换为数值。</value>
  </data>
  <data name="AboutDecimal_language" xml:space="preserve">
    <value>在转换值时要使用的语言代码。</value>
  </data>
  <data name="AboutDecimal_text" xml:space="preserve">
    <value>要转换为数值的文本值。</value>
  </data>
  <data name="ErrDecimalNeedsPowerFxV1" xml:space="preserve">
    <value>只有在启用“Power Fx 1.0 兼容性”功能时，才能使用 "Decimal" 函数。</value>
    
  </data>
  <data name="AboutFloat" xml:space="preserve">
    <value>将表示数字的“文本”转换为浮点值。</value>
  </data>
  <data name="AboutFloat_language" xml:space="preserve">
    <value>在转换值时要使用的语言代码。</value>
  </data>
  <data name="AboutFloat_text" xml:space="preserve">
    <value>要转换为浮点值的文本值。</value>
  </data>
  <data name="ConcatenateArg1" xml:space="preserve">
    <value>文本</value>
    
  </data>
  <data name="AboutConcatenate_text" xml:space="preserve">
    <value>要与其余参数串联的文本值。</value>
  </data>
  <data name="AboutConcatenateT" xml:space="preserve">
    <value>将多个文本值或表联接为一列文本值。</value>
    
  </data>
  <data name="ConcatenateTArg1" xml:space="preserve">
    <value>值</value>
    
  </data>
  <data name="AboutConcatenate_value" xml:space="preserve">
    <value>要与其余参数串联的文本值或一列文本值。</value>
  </data>
  <data name="AboutConcat" xml:space="preserve">
    <value>将通过对给定表计算给定表达式生成的所有文本值加入一个文本值中。</value>
    
  </data>
  <data name="ConcatArg1" xml:space="preserve">
    <value>表</value>
    
  </data>
  <data name="ConcatArg2" xml:space="preserve">
    <value>表达式</value>
    
  </data>
  <data name="ConcatArg3" xml:space="preserve">
    <value>分隔符</value>
    
  </data>
  <data name="AboutConcat_table" xml:space="preserve">
    <value>一个表值，将对该表值计算第二个参数提供的表达式。</value>
  </data>
  <data name="AboutConcat_expression" xml:space="preserve">
    <value>为给定表中的每行计算的文本生成的表达式。</value>
  </data>
  <data name="AboutConcat_separator" xml:space="preserve">
    <value>要在表的连接行之间插入的文本值。</value>
    
  </data>
  <data name="AboutLen" xml:space="preserve">
    <value>返回文本值中的字符数。</value>
    
  </data>
  <data name="AboutLen_text" xml:space="preserve">
    <value>将返回其字符长度的文本值。</value>
  </data>
  <data name="AboutLenT" xml:space="preserve">
    <value>返回对指定表或集合中每行计算的文本值中的字符数。</value>
    
  </data>
  <data name="AboutLen_text_column" xml:space="preserve">
    <value>将返回其字符长度的文本值组成的列(作为新列)。</value>
  </data>
  <data name="LenArg1" xml:space="preserve">
    <value>文本</value>
    
  </data>
  <data name="LenTArg1" xml:space="preserve">
    <value>文本列</value>
    
  </data>
  <data name="AboutUpper" xml:space="preserve">
    <value>将文本值全部转换为大写字母。</value>
    
  </data>
  <data name="AboutUpperT" xml:space="preserve">
    <value>将对指定表或集合中每行计算的文本值中的所有字母转换为大写。</value>
    
  </data>
  <data name="AboutUpper_text" xml:space="preserve">
    <value>要转换为大写的文本值。</value>
  </data>
  <data name="AboutUpper_text_column" xml:space="preserve">
    <value>文本值组成的列，要转换为大写文本值组成的列。</value>
  </data>
  <data name="AboutLower" xml:space="preserve">
    <value>将文本值中的所有字母转换为小写。</value>
    
  </data>
  <data name="AboutLowerT" xml:space="preserve">
    <value>将对指定表或集合中每行计算的文本值中的所有字母转换为小写。</value>
    
  </data>
  <data name="AboutLower_text" xml:space="preserve">
    <value>要转换为小写的文本值。</value>
  </data>
  <data name="AboutLower_text_column" xml:space="preserve">
    <value>文本值组成的列，要转换为小写文本值组成的列。</value>
  </data>
  <data name="AboutProper" xml:space="preserve">
    <value>将文本值转换为正确的大小写；每个单词中的第一个字母为大写，所有其他字母为小写。</value>
    
  </data>
  <data name="AboutProperT" xml:space="preserve">
    <value>将对指定表或集合中每行计算的文本值转换为正确的大小写; 每个单词中第一个字母为大写，所有其他字母为小写。</value>
    
  </data>
  <data name="AboutProper_text" xml:space="preserve">
    <value>要转换为正确大小写的文本值。</value>
  </data>
  <data name="AboutProper_text_column" xml:space="preserve">
    <value>文本值组成的列，要转换为正确大小写文本值组成的列。</value>
  </data>
  <data name="AboutTrim" xml:space="preserve">
    <value>从文本值中删除所有空格(除了各个单词之间的单个空格)。</value>
    
  </data>
  <data name="AboutTrim_text" xml:space="preserve">
    <value>要转换进行剪裁的文本值。</value>
  </data>
  <data name="AboutTrim_text_column" xml:space="preserve">
    <value>要剪裁的文本值组成的列。</value>
  </data>
  <data name="AboutTrimEnds" xml:space="preserve">
    <value>删除文本值中所有前导空格和尾随空格。</value>
    
  </data>
  <data name="AboutTrimEnds_text" xml:space="preserve">
    <value>剪裁尾随空格和前导空格的文本值。</value>
  </data>
  <data name="AboutTrimEnds_text_column" xml:space="preserve">
    <value>剪裁尾随空格和前导空格的文本值组成的列。</value>
  </data>
  <data name="AboutMid" xml:space="preserve">
    <value>在提供开始位置和长度的情况下，从文本值中间返回字符。</value>
    
  </data>
  <data name="AboutMidT" xml:space="preserve">
    <value>在提供开始位置和长度的情况下，从对指定表或集合中每行计算的文本值中间返回字符。</value>
    
  </data>
  <data name="AboutMid_text" xml:space="preserve">
    <value>将从中提取字符的文本值。</value>
  </data>
  <data name="AboutMid_text_column" xml:space="preserve">
    <value>将其中字符提取到新列中的文本值组成的列。</value>
  </data>
  <data name="AboutMid_start_num" xml:space="preserve">
    <value>要提取字符的开始位置。</value>
  </data>
  <data name="AboutMid_num_chars" xml:space="preserve">
    <value>要提取的字符数。</value>
  </data>
  <data name="StringFuncArg1" xml:space="preserve">
    <value>文本</value>
    
  </data>
  <data name="StringTFuncArg1" xml:space="preserve">
    <value>文本列</value>
    
  </data>
  <data name="StringFuncArg2" xml:space="preserve">
    <value>起始编号</value>
    
  </data>
  <data name="StringFuncArg3" xml:space="preserve">
    <value>字符数</value>
    
  </data>
  <data name="AboutReplace" xml:space="preserve">
    <value>将文本值的一部分替换为不同的文本值。</value>
    
  </data>
  <data name="AboutReplaceT" xml:space="preserve">
    <value>将文本值的一部分替换为对指定表或集合中每行计算的不同文本值。</value>
    
  </data>
  <data name="ReplaceFuncArg1" xml:space="preserve">
    <value>旧文本</value>
    
  </data>
  <data name="ReplaceFuncArg4" xml:space="preserve">
    <value>新文本</value>
    
  </data>
  <data name="AboutReplace_old_text" xml:space="preserve">
    <value>要处理的文本值。</value>
  </data>
  <data name="AboutReplace_start_num" xml:space="preserve">
    <value>将要进行替换的开始位置。</value>
  </data>
  <data name="AboutReplace_num_chars" xml:space="preserve">
    <value>要替换的字符数。</value>
  </data>
  <data name="AboutReplace_new_text" xml:space="preserve">
    <value>替换文本值。</value>
  </data>
  <data name="AboutReplace_text_column" xml:space="preserve">
    <value>要处理的文本值组成的列。</value>
  </data>
  <data name="AboutError" xml:space="preserve">
    <value>使用自定义值生成错误。</value>
    
  </data>
  <data name="AboutError_error_information" xml:space="preserve">
    <value>包含所产生错误的自定义值的记录。</value>
    
  </data>
  <data name="ErrorArg1" xml:space="preserve">
    <value>错误信息</value>
    
  </data>
  <data name="ErrErrorIrrelevantField" xml:space="preserve">
    <value>Error 函数仅使用字段 "Kind"、"Message"、"Notify"、"Control" 和 "Property"。</value>
    
  </data>
  <data name="AboutIfError" xml:space="preserve">
    <value>计算并返回第一个非错误参数。</value>
    
  </data>
  <data name="IfErrorArg1" xml:space="preserve">
    <value>值</value>
    
  </data>
  <data name="AboutIfError_value" xml:space="preserve">
    <value>当它不是错误时返回的值。</value>
    
  </data>
  <data name="IfErrorArg2" xml:space="preserve">
    <value>回退</value>
    
  </data>
  <data name="AboutIfError_fallback" xml:space="preserve">
    <value>前一个参数出错时返回的值。</value>
    
  </data>
  <data name="AboutSubstitute" xml:space="preserve">
    <value>在文本值中将现有文本替换为新文本。</value>
    
  </data>
  <data name="AboutSubstituteT" xml:space="preserve">
    <value>在对指定表或集合中每行计算的文本值中将现有文本替换为新文本。</value>
    
  </data>
  <data name="SubstituteFuncArg1" xml:space="preserve">
    <value>文本</value>
    
  </data>
  <data name="SubstituteTFuncArg1" xml:space="preserve">
    <value>文本列</value>
    
  </data>
  <data name="SubstituteFuncArg2" xml:space="preserve">
    <value>旧文本</value>
    
  </data>
  <data name="SubstituteFuncArg3" xml:space="preserve">
    <value>新文本</value>
    
  </data>
  <data name="SubstituteFuncArg4" xml:space="preserve">
    <value>实例数</value>
    
  </data>
  <data name="AboutSubstitute_text" xml:space="preserve">
    <value>要处理的文本值。</value>
  </data>
  <data name="AboutSubstitute_old_text" xml:space="preserve">
    <value>要替换的文本。</value>
  </data>
  <data name="AboutSubstitute_new_text" xml:space="preserve">
    <value>替换文本。</value>
  </data>
  <data name="AboutSubstitute_instance_num" xml:space="preserve">
    <value>指定要替换的文本匹配项。</value>
  </data>
  <data name="AboutSubstitute_text_column" xml:space="preserve">
    <value>要处理的文本值组成的列。</value>
  </data>
  <data name="AboutSort" xml:space="preserve">
    <value>基于为每行计算的 "expression" 的结果对 "source" 排序(可以选择指定排序 "order")。</value>
    
  </data>
  <data name="SortArg1" xml:space="preserve">
    <value>源</value>
    
  </data>
  <data name="SortArg2" xml:space="preserve">
    <value>表达式</value>
    
  </data>
  <data name="SortArg3" xml:space="preserve">
    <value>顺序</value>
    
  </data>
  <data name="AboutSort_source" xml:space="preserve">
    <value>要排序的表。</value>
  </data>
  <data name="AboutSort_expression" xml:space="preserve">
    <value>对 "source" 中的行计算并为排序提供值的表达式。</value>
  </data>
  <data name="AboutSort_order" xml:space="preserve">
    <value>SortOrder.Ascending 或 SortOrder.Descending</value>
    
  </data>
  <data name="AboutSortByColumns" xml:space="preserve">
    <value>基于列对 "source" 排序(可以选择指定排序 "order")。</value>
    
  </data>
  <data name="SortByColumnsArg1" xml:space="preserve">
    <value>源</value>
    
  </data>
  <data name="SortByColumnsArg2" xml:space="preserve">
    <value>列</value>
    
  </data>
  <data name="SortByColumnsArg3" xml:space="preserve">
    <value>顺序</value>
    
  </data>
  <data name="AboutSortByColumns_source" xml:space="preserve">
    <value>要排序的表。</value>
  </data>
  <data name="AboutSortByColumns_column" xml:space="preserve">
    <value>唯一的列名。</value>
  </data>
  <data name="AboutSortByColumns_order" xml:space="preserve">
    <value>SortOrder.Ascending 或 SortOrder.Descending</value>
    
  </data>
  <data name="SortByColumnsWithOrderValuesArg3" xml:space="preserve">
    <value>值</value>
    
  </data>
  <data name="AboutSortByColumns_values" xml:space="preserve">
    <value>用于排序的值组成的列。不是按照升序/降序进行排序，而是基于列中匹配值的索引排序</value>
  </data>
  <data name="AboutRand" xml:space="preserve">
    <value>返回大于或等于 0 并且小于 1 的随机数字(平均分布)。</value>
    
  </data>
  <data name="AboutRandBetween" xml:space="preserve">
    <value>返回介于最小值和最大值之间的随机数(均匀分布)。</value>
    
  </data>
  <data name="AboutRandBetween_bottom" xml:space="preserve">
    <value>函数可返回的最小整数。</value>
  </data>
  <data name="AboutRandBetween_top" xml:space="preserve">
    <value>函数可返回的最大整数。必须等于或大于最小值。</value>
  </data>
  <data name="RandBetweenArg1" xml:space="preserve">
    <value>底部</value>
    
  </data>
  <data name="RandBetweenArg2" xml:space="preserve">
    <value>顶部</value>
    
  </data>
  <data name="AboutGUID" xml:space="preserve">
    <value>从字符串创建 GUID，或者如果未提供参数，则返回随机生成的 GUID。</value>
    
  </data>
  <data name="GUIDArg" xml:space="preserve">
    <value>GUID_字符串</value>
    
  </data>
  <data name="AboutGUID_GUID_string" xml:space="preserve">
    <value>要转换为 GUID 的字符串</value>
    
  </data>
  <data name="AboutNow" xml:space="preserve">
    <value>返回当前日期和时间。</value>
    
  </data>
  <data name="AboutUTCNow" xml:space="preserve">
    <value>返回当前日期和时间(UTC 时间)。</value>
    
  </data>
  <data name="AboutTimeZoneOffset" xml:space="preserve">
    <value>返回 UTC 时间和本地时间之间的时差(分钟)。例如，如果时区为 UTC+2，将返回 -120。</value>
    
  </data>
  <data name="TimeZoneOffsetArg1" xml:space="preserve">
    <value>日期</value>
    
  </data>
  <data name="AboutTimeZoneOffset_date" xml:space="preserve">
    <value>计算 "TimeZoneOffset" 的日期。</value>
    
  </data>
  <data name="AboutToday" xml:space="preserve">
    <value>返回当前日期。</value>
    
  </data>
  <data name="AboutUTCToday" xml:space="preserve">
    <value>返回当前日期(UTC 时间)。</value>
    
  </data>
  <data name="AboutWeekNum" xml:space="preserve">
    <value>返回给定日期的周编号。</value>
    
  </data>
  <data name="WeekNumArg1" xml:space="preserve">
    <value>日期</value>
    
  </data>
  <data name="WeekNumArg2" xml:space="preserve">
    <value>周开始</value>
    
  </data>
  <data name="AboutWeekNum_date" xml:space="preserve">
    <value>将针对其计算周编号的日期值。</value>
  </data>
  <data name="AboutWeekNum_start_of_week" xml:space="preserve">
    <value>指示应如何对一周中的天数编号的 StartOfWeek 枚举值或相应 Excel 函数中的数字。</value>
    
  </data>
  <data name="AboutISOWeekNum" xml:space="preserve">
    <value>根据给定日期的 ISO 规则返回周编号。</value>
    
  </data>
  <data name="ISOWeekNumArg1" xml:space="preserve">
    <value>日期</value>
    
  </data>
  <data name="AboutISOWeekNum_date" xml:space="preserve">
    <value>将针对其计算 ISO 周编号的日期值。</value>
  </data>
  <data name="AboutEDate" xml:space="preserve">
    <value>返回按月数调整的日期。月中的日期仍然相同，但因新月份中的天数而受限制。</value>
    
  </data>
  <data name="EDateArg1" xml:space="preserve">
    <value>日期</value>
    
  </data>
  <data name="EDateArg2" xml:space="preserve">
    <value>月</value>
    
  </data>
  <data name="AboutEDate_date" xml:space="preserve">
    <value>要按指定的月数调整的日期值。</value>
    
  </data>
  <data name="AboutEDate_months" xml:space="preserve">
    <value>日期的更改月数。正值产生将来日期，负值产生过去日期，零将不会更改该月。</value>
    
  </data>
  <data name="AboutEOMonth" xml:space="preserve">
    <value>返回指定日期中月份的最后一天(已按月数进行了调整)。</value>
    
  </data>
  <data name="EOMonthArg1" xml:space="preserve">
    <value>日期</value>
    
  </data>
  <data name="EOMonthArg2" xml:space="preserve">
    <value>月</value>
    
  </data>
  <data name="AboutEOMonth_date" xml:space="preserve">
    <value>要按指定的月数调整的日期值。</value>
    
  </data>
  <data name="AboutEOMonth_months" xml:space="preserve">
    <value>日期的更改月数。正值产生将来日期，负值产生过去日期，零将不会更改该月。</value>
    
  </data>
  <data name="AboutInt" xml:space="preserve">
    <value>通过向负无穷大舍入来截断“数字”。</value>
    
  </data>
  <data name="AboutIntT" xml:space="preserve">
    <value>通过向负无穷大舍入来截断一列数字中的值。</value>
    
  </data>
  <data name="AboutInt_number" xml:space="preserve">
    <value>要处理的数值。</value>
  </data>
  <data name="AboutInt_input" xml:space="preserve">
    <value>要处理的数值组成的列。</value>
  </data>
  <data name="AboutTrunc" xml:space="preserve">
    <value>通过向零舍入来截断“数字”。</value>
    
  </data>
  <data name="AboutTrunc_number" xml:space="preserve">
    <value>要截断的数字。</value>
  </data>
  <data name="AboutTrunc_source" xml:space="preserve">
    <value>要截断的数字组成的列。</value>
  </data>
  <data name="AboutTrunc_num_digits" xml:space="preserve">
    <value>要用于截断的小数位数。</value>
  </data>
  <data name="AboutTruncT" xml:space="preserve">
    <value>通过向零舍入来截断“来源”中的所有数字。</value>
    
  </data>
  <data name="TruncArg1" xml:space="preserve">
    <value>数字</value>
    
  </data>
  <data name="TruncArg2" xml:space="preserve">
    <value>位数</value>
    
  </data>
  <data name="TruncTArg1" xml:space="preserve">
    <value>源</value>
    
  </data>
  <data name="TruncTArg2" xml:space="preserve">
    <value>位数</value>
    
  </data>
  <data name="AboutRound" xml:space="preserve">
    <value>将 "number" 四舍五入为指定位数。</value>
    
  </data>
  <data name="AboutRoundUp" xml:space="preserve">
    <value>将 "number" 背离零向上四舍五入。</value>
    
  </data>
  <data name="AboutRoundDown" xml:space="preserve">
    <value>将 "number" 朝零向下四舍五入。</value>
    
  </data>
  <data name="RoundArg1" xml:space="preserve">
    <value>数字</value>
    
  </data>
  <data name="RoundArg2" xml:space="preserve">
    <value>位数</value>
    
  </data>
  <data name="AboutRound_number" xml:space="preserve">
    <value>要四舍五入的数字。</value>
  </data>
  <data name="AboutRound_source" xml:space="preserve">
    <value>要四舍五入的数字组成的列。</value>
  </data>
  <data name="AboutRound_num_digits" xml:space="preserve">
    <value>要用于四舍五入的小数位数。</value>
  </data>
  <data name="AboutRoundUp_number" xml:space="preserve">
    <value>要四舍五入的数字。</value>
  </data>
  <data name="AboutRoundUp_source" xml:space="preserve">
    <value>要四舍五入的数字组成的列。</value>
  </data>
  <data name="AboutRoundUp_num_digits" xml:space="preserve">
    <value>要用于四舍五入的小数位数。</value>
  </data>
  <data name="AboutRoundDown_number" xml:space="preserve">
    <value>要四舍五入的数字。</value>
  </data>
  <data name="AboutRoundDown_source" xml:space="preserve">
    <value>要四舍五入的数字组成的列。</value>
  </data>
  <data name="AboutRoundDown_num_digits" xml:space="preserve">
    <value>要用于四舍五入的小数位数。</value>
  </data>
  <data name="AboutRoundT" xml:space="preserve">
    <value>将 "source" 中的所有数字四舍五入为指定位数。</value>
    
  </data>
  <data name="AboutRoundUpT" xml:space="preserve">
    <value>将 "source" 中的所有数字背离零向上四舍五入。</value>
    
  </data>
  <data name="AboutRoundDownT" xml:space="preserve">
    <value>将 "source" 中的所有数字朝零向下四舍五入。</value>
    
  </data>
  <data name="RoundTArg1" xml:space="preserve">
    <value>源</value>
    
  </data>
  <data name="RoundTArg2" xml:space="preserve">
    <value>位数</value>
    
  </data>
  <data name="AboutRGBA" xml:space="preserve">
    <value>对于颜色的红色、绿色、蓝色和 Alpha 部分接受数值并生成特定颜色。R、G、B 是介于 0 到 255 之间的数值。Alpha 是介于 0 到 1 之间的小数。</value>
    
  </data>
  <data name="RGBAArg1" xml:space="preserve">
    <value>红色值</value>
    
  </data>
  <data name="RGBAArg2" xml:space="preserve">
    <value>绿色值</value>
    
  </data>
  <data name="RGBAArg3" xml:space="preserve">
    <value>蓝色值</value>
    
  </data>
  <data name="RGBAArg4" xml:space="preserve">
    <value>alpha_值</value>
    
  </data>
  <data name="AboutRGBA_red_value" xml:space="preserve">
    <value>红色部分，0 到 255。</value>
  </data>
  <data name="AboutRGBA_green_value" xml:space="preserve">
    <value>绿色部分，0 到 255。</value>
  </data>
  <data name="AboutRGBA_blue_value" xml:space="preserve">
    <value>蓝色部分，0 到 255。</value>
  </data>
  <data name="AboutRGBA_alpha_value" xml:space="preserve">
    <value>Alpha 部分，0 到 1 (或百分比，如 49%)。</value>
  </data>
  <data name="AboutColorFade" xml:space="preserve">
    <value>基于指定 "fade" 百分比生成具有指定 "color" 的新底纹。</value>
    
  </data>
  <data name="ColorFadeArg1" xml:space="preserve">
    <value>颜色</value>
    
  </data>
  <data name="ColorFadeArg2" xml:space="preserve">
    <value>淡化</value>
    
  </data>
  <data name="AboutColorFade_color" xml:space="preserve">
    <value>要淡化的颜色。</value>
  </data>
  <data name="AboutColorFade_fade" xml:space="preserve">
    <value>颜色进行淡化的百分比。负百分比生成较深的底纹。正百分比生成较浅的底纹。</value>
  </data>
  <data name="AboutColorFadeT" xml:space="preserve">
    <value>基于指定 "fade" 百分比值生成具有指定 "color" 值的新底纹。</value>
  </data>
  <data name="ColorFadeTArg1" xml:space="preserve">
    <value>颜色或列</value>
    
  </data>
  <data name="ColorFadeTArg2" xml:space="preserve">
    <value>淡化或列</value>
    
  </data>
  <data name="AboutColorFade_color_or_column" xml:space="preserve">
    <value>要淡化的颜色(或颜色值组成的列)。</value>
  </data>
  <data name="AboutColorFade_fade_or_column" xml:space="preserve">
    <value>颜色(或颜色值组成的列)进行淡化的百分比(或百分比值组成的列)。负百分比生成较深的底纹。正百分比生成较浅的底纹。</value>
  </data>
  <data name="AboutAbs" xml:space="preserve">
    <value>返回数字的绝对值(不带符号的数字)。</value>
    
  </data>
  <data name="AboutAbsT" xml:space="preserve">
    <value>返回数字组成的列的绝对值(不带符号的数字)。</value>
    
  </data>
  <data name="AboutAbs_number" xml:space="preserve">
    <value>要处理的数值。</value>
  </data>
  <data name="AboutAbs_input" xml:space="preserve">
    <value>要处理的数值组成的列。</value>
  </data>
  <data name="AboutSin_number" xml:space="preserve">
    <value>要处理的数值(以弧度为单位)。</value>
  </data>
  <data name="AboutSin_input" xml:space="preserve">
    <value>要处理的数值组成的列(以弧度为单位)。</value>
  </data>
  <data name="AboutSin" xml:space="preserve">
    <value>返回某数值的正弦值。</value>
    
  </data>
  <data name="AboutSinT" xml:space="preserve">
    <value>返回数值组成的列的正弦值。</value>
    
  </data>
  <data name="AboutAsin_number" xml:space="preserve">
    <value>要处理的数值。</value>
  </data>
  <data name="AboutAsin_input" xml:space="preserve">
    <value>要处理的数值组成的列。</value>
  </data>
  <data name="AboutAsin" xml:space="preserve">
    <value>返回某数值的反正弦值(以弧度为单位)。</value>
    
  </data>
  <data name="AboutAsinT" xml:space="preserve">
    <value>返回数值组成的列的反正弦值(以弧度为单位)。</value>
    
  </data>
  <data name="AboutCos" xml:space="preserve">
    <value>返回某数值的余弦值。</value>
    
  </data>
  <data name="AboutCosT" xml:space="preserve">
    <value>返回数值组成的列的余弦值。</value>
    
  </data>
  <data name="AboutCos_number" xml:space="preserve">
    <value>要处理的数值(以弧度为单位)。</value>
  </data>
  <data name="AboutCos_input" xml:space="preserve">
    <value>要处理的数值组成的列(以弧度为单位)。</value>
  </data>
  <data name="AboutAcos" xml:space="preserve">
    <value>返回某数值的反余弦值(以弧度为单位)。</value>
    
  </data>
  <data name="AboutAcos_number" xml:space="preserve">
    <value>要处理的数值。</value>
  </data>
  <data name="AboutAcosT" xml:space="preserve">
    <value>返回数值组成的列的反余弦值(以弧度为单位)。</value>
    
  </data>
  <data name="AboutAcos_input" xml:space="preserve">
    <value>要处理的数值组成的列。</value>
  </data>
  <data name="AboutAcot_number" xml:space="preserve">
    <value>要处理的数值。</value>
  </data>
  <data name="AboutAcot_input" xml:space="preserve">
    <value>要处理的数值组成的列。</value>
  </data>
  <data name="AboutAcot" xml:space="preserve">
    <value>返回某数值的反余切值(以弧度为单位)。</value>
    
  </data>
  <data name="AboutAcotT" xml:space="preserve">
    <value>返回数值组成的列的反余切值(以弧度为单位)。</value>
    
  </data>
  <data name="AboutTan" xml:space="preserve">
    <value>返回某数值的正切值。</value>
    
  </data>
  <data name="AboutTanT" xml:space="preserve">
    <value>返回数值组成的列的正切值。</value>
    
  </data>
  <data name="AboutTan_number" xml:space="preserve">
    <value>要处理的数值(以弧度为单位)。</value>
  </data>
  <data name="AboutTan_input" xml:space="preserve">
    <value>要处理的数值组成的列(以弧度为单位)。</value>
  </data>
  <data name="AboutAtan" xml:space="preserve">
    <value>返回某数值的反正切值(以弧度为单位)。</value>
    
  </data>
  <data name="AboutAtanT" xml:space="preserve">
    <value>返回数值组成的列的反正切值(以弧度为单位)。</value>
    
  </data>
  <data name="AboutAtan_number" xml:space="preserve">
    <value>要处理的数值。</value>
  </data>
  <data name="AboutAtan_input" xml:space="preserve">
    <value>要处理的数值组成的列。</value>
  </data>
  <data name="AboutCot" xml:space="preserve">
    <value>返回某数值的余切值。</value>
    
  </data>
  <data name="AboutCotT" xml:space="preserve">
    <value>返回数值组成的列的余切值。</value>
    
  </data>
  <data name="AboutCot_number" xml:space="preserve">
    <value>要处理的数值(以弧度为单位)。</value>
  </data>
  <data name="AboutCot_input" xml:space="preserve">
    <value>要处理的数值组成的列(以弧度为单位)。</value>
  </data>
  <data name="AboutLn" xml:space="preserve">
    <value>返回某数值的自然对数(以 E 为底)。</value>
    
  </data>
  <data name="AboutLnT" xml:space="preserve">
    <value>返回数值组成的列的自然对象值(以 E 为底)。</value>
    
  </data>
  <data name="AboutLn_number" xml:space="preserve">
    <value>要处理的数值。</value>
  </data>
  <data name="AboutLn_input" xml:space="preserve">
    <value>要处理的数值组成的列。</value>
  </data>
  <data name="AboutLog" xml:space="preserve">
    <value>返回给定基数的对数。默认基数为 10。</value>
    
  </data>
  <data name="AboutLogT" xml:space="preserve">
    <value>返回给定基数的对数值或按给定的基数列返回几列数字的对数值。默认基数为 10。</value>
    
  </data>
  <data name="AboutLog_number" xml:space="preserve">
    <value>要处理的数值。</value>
  </data>
  <data name="AboutLog_input" xml:space="preserve">
    <value>要处理的数值组成的列。</value>
  </data>
  <data name="LogBase" xml:space="preserve">
    <value>基数</value>
    
  </data>
  <data name="AboutLog_base" xml:space="preserve">
    <value>对数的基数。</value>
  </data>
  <data name="AboutExp" xml:space="preserve">
    <value>返回 E 的某数值的乘幂。若要计算以其他数字为底的幂，请使用求幂运算符(^)。</value>
    
  </data>
  <data name="AboutExpT" xml:space="preserve">
    <value>返回一列，其中包含 E 的数值组成的列中每个相应数字的乘幂。若要计算以其他数字为底的幂，请使用求幂运算符(^)。</value>
    
  </data>
  <data name="AboutExp_number" xml:space="preserve">
    <value>要处理的数值。</value>
  </data>
  <data name="AboutExp_input" xml:space="preserve">
    <value>要处理的数值组成的列。</value>
  </data>
  <data name="AboutPi" xml:space="preserve">
    <value>返回 PI 的值。</value>
  </data>
  <data name="AboutRadians" xml:space="preserve">
    <value>返回某数值的弧度值。</value>
    
  </data>
  <data name="AboutRadiansT" xml:space="preserve">
    <value>返回数值组成的列的弧度值。</value>
    
  </data>
  <data name="AboutRadians_number" xml:space="preserve">
    <value>要处理的数值(以度为单位)。</value>
  </data>
  <data name="AboutRadians_input" xml:space="preserve">
    <value>要处理的数值组成的列(以度为单位)。</value>
  </data>
  <data name="AboutDegrees" xml:space="preserve">
    <value>返回某数值的度数值。</value>
    
  </data>
  <data name="AboutDegreesT" xml:space="preserve">
    <value>返回数值组成的列的度数值。</value>
    
  </data>
  <data name="AboutDegrees_number" xml:space="preserve">
    <value>要处理的数值(以弧度为单位)。</value>
  </data>
  <data name="AboutDegrees_input" xml:space="preserve">
    <value>要处理的数值组成的列(以弧度为单位)。</value>
  </data>
  <data name="AboutDistinct" xml:space="preserve">
    <value>对表的一列或多列计算表达式，并返回由一组列组成的表，其中包含计算的表达式的非重复(唯一)值。</value>
  </data>
  <data name="DistinctArg1" xml:space="preserve">
    <value>源</value>
    
  </data>
  <data name="DistinctArg2" xml:space="preserve">
    <value>表达式</value>
    
  </data>
  <data name="AboutDistinct_source" xml:space="preserve">
    <value>将从中提取非重复值的表。</value>
  </data>
  <data name="AboutDistinct_expression" xml:space="preserve">
    <value>对输入表中的每行进行计算并为 Distinct 运算提供值的表达式。</value>
  </data>
  <data name="AboutAtan2" xml:space="preserve">
    <value>返回指定 x 和 y 坐标的反正切(以弧度为单位)。</value>
  </data>
  <data name="AboutAtan2Arg1" xml:space="preserve">
    <value>x_坐标</value>
    
  </data>
  <data name="AboutAtan2Arg2" xml:space="preserve">
    <value>y_坐标</value>
    
  </data>
  <data name="AboutAtan2_x_coordinate" xml:space="preserve">
    <value>x 坐标。</value>
  </data>
  <data name="AboutAtan2_y_coordinate" xml:space="preserve">
    <value>y 坐标。</value>
  </data>
  <data name="AboutSqrt" xml:space="preserve">
    <value>返回数字的平方根。</value>
    
  </data>
  <data name="AboutSqrtT" xml:space="preserve">
    <value>返回数字组成的列的平方根。</value>
    
  </data>
  <data name="AboutSqrt_number" xml:space="preserve">
    <value>要处理的数值。</value>
  </data>
  <data name="AboutSqrt_input" xml:space="preserve">
    <value>要处理的数值组成的列。</value>
  </data>
  <data name="MathFuncArg1" xml:space="preserve">
    <value>数字</value>
    
  </data>
  <data name="MathTFuncArg1" xml:space="preserve">
    <value>输入</value>
    
  </data>
  <data name="MathFuncArg2" xml:space="preserve">
    <value>修改者</value>
    
  </data>
  <data name="MathTFuncArg2" xml:space="preserve">
    <value>修改者</value>
    
  </data>
  <data name="AboutLeft" xml:space="preserve">
    <value>从文本值开头返回指定数量的字符。</value>
    
  </data>
  <data name="AboutLeftT" xml:space="preserve">
    <value>返回一列，其中包含从指定表或集合中每行计算的文本值开头算起的指定数量字符。</value>
    
  </data>
  <data name="AboutLeft_text" xml:space="preserve">
    <value>要从中提取字符的文本值。</value>
  </data>
  <data name="AboutLeft_num_chars" xml:space="preserve">
    <value>要提取的字符数。</value>
  </data>
  <data name="AboutLeft_text_column" xml:space="preserve">
    <value>要从中提取字符的文本值组成的列。</value>
  </data>
  <data name="AboutRight" xml:space="preserve">
    <value>从文本值结尾返回指定数量的字符。</value>
    
  </data>
  <data name="AboutRightT" xml:space="preserve">
    <value>返回一列，其中包含从对指定表或集合中每行计算的文本值结尾算起的指定数量字符。</value>
    
  </data>
  <data name="AboutRight_text" xml:space="preserve">
    <value>要从中提取字符的文本值。</value>
  </data>
  <data name="AboutRight_num_chars" xml:space="preserve">
    <value>要提取的字符数。</value>
  </data>
  <data name="AboutRight_text_column" xml:space="preserve">
    <value>要从中提取字符的文本值组成的列。</value>
  </data>
  <data name="LeftRightArg1" xml:space="preserve">
    <value>文本</value>
    
  </data>
  <data name="LeftRightTArg1" xml:space="preserve">
    <value>文本列</value>
    
  </data>
  <data name="LeftRightArg2" xml:space="preserve">
    <value>字符数</value>
    
  </data>
  <data name="AboutIsBlank" xml:space="preserve">
    <value>检查表达式是否生成空，并返回 true 或 false。</value>
    
  </data>
  <data name="IsBlankArg1" xml:space="preserve">
    <value>表达式</value>
    
  </data>
  <data name="AboutIsBlank_expression" xml:space="preserve">
    <value>要进行测试的表达式。</value>
  </data>
  <data name="AboutIsBlankOrError" xml:space="preserve">
    <value>检查表达式是否生成空白结果或错误，并返回 true 或 false。</value>
    
  </data>
  <data name="IsBlankOrErrorArg1" xml:space="preserve">
    <value>表达式</value>
    
  </data>
  <data name="AboutIsBlankOrError_expression" xml:space="preserve">
    <value>要进行测试的表达式。</value>
    
  </data>
  <data name="AboutIsEmpty" xml:space="preserve">
    <value>检查集合是否为空并返回 true 或 false。</value>
    
  </data>
  <data name="IsEmptyArg1" xml:space="preserve">
    <value>源</value>
    
  </data>
  <data name="AboutIsEmpty_source" xml:space="preserve">
    <value>要进行测试的表。</value>
  </data>
  <data name="AboutShuffle" xml:space="preserve">
    <value>返回输入 "source" 表的随机选择副本。</value>
    
  </data>
  <data name="ShuffleArg1" xml:space="preserve">
    <value>源</value>
    
  </data>
  <data name="AboutShuffle_source" xml:space="preserve">
    <value>要随机选择的表。</value>
  </data>
  <data name="AboutLookUp" xml:space="preserve">
    <value>如果提供一个表达式和整行，则查找指定条件计算结果为 true 的第一行，并返回在该行上下文中计算的表达式的结果。</value>
    
  </data>
  <data name="LookUpArg1" xml:space="preserve">
    <value>源</value>
    
  </data>
  <data name="LookUpArg2" xml:space="preserve">
    <value>条件</value>
    
  </data>
  <data name="LookUpArg3" xml:space="preserve">
    <value>结果</value>
    
  </data>
  <data name="AboutLookUp_source" xml:space="preserve">
    <value>将在其中查找值的表。</value>
  </data>
  <data name="AboutLookUp_condition" xml:space="preserve">
    <value>要为指定输入中的行计算的条件。</value>
  </data>
  <data name="AboutLookUp_result" xml:space="preserve">
    <value>要对匹配指定条件的行计算的表达式，将提供结果。</value>
  </data>
  <data name="AboutStdevP" xml:space="preserve">
    <value>基于作为参数提供的整个填充内容计算标准偏差(忽略逻辑值和文本)。</value>
    
  </data>
  <data name="AboutStdevP_number" xml:space="preserve">
    <value>作为标准偏差计算的系数的数字。</value>
  </data>
  <data name="AboutStdevP_source" xml:space="preserve">
    <value>为标准偏差计算指定填充内容的表。</value>
  </data>
  <data name="AboutStdevP_expression" xml:space="preserve">
    <value>对输入中的行计算的表达式，为标准偏差计算指定值。</value>
  </data>
  <data name="AboutStdevPT" xml:space="preserve">
    <value>基于作为列提供的整个填充内容计算标准偏差(忽略列中的逻辑值和文本)。</value>
    
  </data>
  <data name="AboutVarP" xml:space="preserve">
    <value>基于整个样本总体计算方差(忽略填充内容中的逻辑值和文本)。</value>
    
  </data>
  <data name="AboutVarP_number" xml:space="preserve">
    <value>作为方差计算的系数的数字。</value>
  </data>
  <data name="AboutVarP_source" xml:space="preserve">
    <value>为方差计算指定样本总体的表。</value>
  </data>
  <data name="AboutVarP_expression" xml:space="preserve">
    <value>对输入中的行计算的表达式，为方差计算指定值。</value>
  </data>
  <data name="AboutVarPT" xml:space="preserve">
    <value>基于作为列指定的整个样本总体计算方差(忽略列中的逻辑值和文本)。</value>
    
  </data>
  <data name="SetArg1" xml:space="preserve">
    <value>变量</value>
    
  </data>
  <data name="AboutSplit" xml:space="preserve">
    <value>使用分隔符将字符串拆分为子字符串。</value>
    
  </data>
  <data name="AboutSplit_text" xml:space="preserve">
    <value>要拆分为子字符串的文本。</value>
    
  </data>
  <data name="AboutSplit_separator" xml:space="preserve">
    <value>用于将输入文本拆分为子字符串的分隔符文本。</value>
    
  </data>
  <data name="SplitArg1" xml:space="preserve">
    <value>文本</value>
    
  </data>
  <data name="SplitArg2" xml:space="preserve">
    <value>分隔符</value>
    
  </data>
  <data name="AboutColumnNames" xml:space="preserve">
    <value>枚举并返回非类型化记录的列名。</value>
    
  </data>
  <data name="ColumnNamesArg1" xml:space="preserve">
    <value>记录</value>
    
  </data>
  <data name="AboutColumnNames_record" xml:space="preserve">
    <value>用于枚举记录列的记录。</value>
    
  </data>
  <data name="AboutColumn" xml:space="preserve">
    <value>返回非类型化记录的属性的值(给定列名称)。</value>
    
  </data>
  <data name="ColumnArg1" xml:space="preserve">
    <value>记录</value>
    
  </data>
  <data name="ColumnArg2" xml:space="preserve">
    <value>列名</value>
    
  </data>
  <data name="AboutColumn_record" xml:space="preserve">
    <value>用于检索列值的记录。</value>
    
  </data>
  <data name="AboutColumn_column_name" xml:space="preserve">
    <value>用于检索的记录的列名称。</value>
    
  </data>
  <data name="AboutIsType" xml:space="preserve">
    <value>如果所提供的值属于给定的类型，则返回 true。</value>
    
  </data>
  <data name="IsTypeArg1" xml:space="preserve">
    <value>值</value>
    
  </data>
  <data name="IsTypeArg2" xml:space="preserve">
    <value>typeTable</value>
    
  </data>
  <data name="AboutAsType" xml:space="preserve">
    <value>将所提供的值用作给定类型。</value>
    
  </data>
  <data name="AsTypeArg1" xml:space="preserve">
    <value>值</value>
    
  </data>
  <data name="AsTypeArg2" xml:space="preserve">
    <value>typeTable</value>
    
  </data>
  <data name="AboutAsType_value" xml:space="preserve">
    <value>要转换为新类型的多态记录。</value>
  </data>
  <data name="AboutAsType_typeTable" xml:space="preserve">
    <value>表示我们希望将此值用作的实体表。</value>
  </data>
  <data name="AboutWith" xml:space="preserve">
    <value>使用第一个参数提供的范围来执行作为第二个参数提供的公式。</value>
    
  </data>
  <data name="WithArg1" xml:space="preserve">
    <value>范围</value>
    
  </data>
  <data name="WithArg2" xml:space="preserve">
    <value>公式</value>
    
  </data>
  <data name="AboutWith_scope" xml:space="preserve">
    <value>用于调用第二个参数定义的公式的范围。</value>
    
  </data>
  <data name="AboutWith_formula" xml:space="preserve">
    <value>要使用第一个参数提供的范围进行调用的公式。</value>
    
  </data>
  <data name="AboutSequence" xml:space="preserve">
    <value>生成序列号表</value>
    
  </data>
  <data name="SequenceArg1" xml:space="preserve">
    <value>记录</value>
    
  </data>
  <data name="AboutSequence_records" xml:space="preserve">
    <value>单列表中名称为“值”的记录数。最大值为 50,000。</value>
    
  </data>
  <data name="SequenceArg2" xml:space="preserve">
    <value>开始</value>
    
  </data>
  <data name="AboutSequence_start" xml:space="preserve">
    <value>可选。序列中的第一个数字。默认为 1。</value>
    
  </data>
  <data name="SequenceArg3" xml:space="preserve">
    <value>步骤</value>
    
  </data>
  <data name="AboutSequence_step" xml:space="preserve">
    <value>可选。表中每个后续值的递增量。默认为 1。</value>
    
  </data>
  <data name="ErrInvalidDot" xml:space="preserve">
    <value>使用 "." 无效</value>
    
  </data>
  <data name="ErrUnknownFunction" xml:space="preserve">
    <value>'{0}' 为未知或不支持的函数。</value>
    
  </data>
  <data name="ErrUnknownNamespaceFunction" xml:space="preserve">
    <value>'{0}' 为命名空间 '{1}' 中未知或不支持的函数。</value>
    
  </data>
  <data name="ErrUnSupportedComponentBehaviorInvocation" xml:space="preserve">
    <value>只能从组件内调用组件行为。</value>
    
  </data>
  <data name="ErrUnSupportedComponentDataPropertyAccess" xml:space="preserve">
    <value>只能从组件内或从组件输出属性访问组件功能属性或参数。</value>
    
  </data>
  <data name="ErrUnSupportedComponentFunctionPropertyReferenceNonFunctionPropertyAccess" xml:space="preserve">
    <value>组件函数属性或参数只能引用其他函数属性。</value>
    
  </data>
  <data name="ErrBadArity" xml:space="preserve">
    <value>参数数目无效: 收到 {0} 个，应为 {1} 个。</value>
    
  </data>
  <data name="ErrBadArityEven" xml:space="preserve">
    <value>参数数目无效: 收到 {0} 个，应为偶数个。</value>
    
  </data>
  <data name="ErrBadArityOdd" xml:space="preserve">
    <value>参数数目无效: 收到 {0}个，应为奇数个。</value>
    
  </data>
  <data name="ErrBadType" xml:space="preserve">
    <value>参数类型无效。</value>
    
  </data>
  <data name="ErrBadType_Type" xml:space="preserve">
    <value>参数类型无效。不能在此上下文中使用 {0} 值。</value>
    
  </data>
  <data name="ErrBadOperatorTypes" xml:space="preserve">
    <value>此操作对于以下类型无效: {0}、{1}。</value>
    
  </data>
  <data name="ErrGuidStrictComparison" xml:space="preserve">
    <value>GUID 值只能与其他 GUID 值比较。</value>
    
  </data>
  <data name="ErrBadRecordFieldType_FieldName_ExpectedType" xml:space="preserve">
    <value>字段 '{0}' 的类型无效。应为 '{1}' 类型的字段。</value>
    
  </data>
  <data name="ErrBadType_ExpectedType" xml:space="preserve">
    <value>参数类型无效。需要一个 {0} 值。</value>
    
  </data>
  <data name="ErrBadType_ExpectedType_ProvidedType" xml:space="preserve">
    <value>参数类型({1})无效。需要一个 {0} 值。</value>
    
  </data>
  <data name="ErrBadType_VoidExpression" xml:space="preserve">
    <value>在此上下文中不能使用无效表达式。</value>
    
  </data>
  <data name="ErrBadSchema_ExpectedType" xml:space="preserve">
    <value>参数类型无效。需要 {0} 值，但属于不同的架构。</value>
    
  </data>
  <data name="ErrBadType_ExpectedTypesCSV" xml:space="preserve">
    <value>参数类型无效。需要以下之一: {0}。</value>
    
  </data>
  <data name="ErrInvalidArgs_Func" xml:space="preserve">
    <value>函数 '{0}' 具有一些无效参数。</value>
    
  </data>
  <data name="ErrNeedTable_Func" xml:space="preserve">
    <value>'{0}' 的第一个参数应是表。</value>
    
  </data>
  <data name="ErrInvalidPropertyAccess" xml:space="preserve">
    <value>属性需要一个必需的参数。请使用括号传递此必需的参数。</value>
    
  </data>
  <data name="ErrNeedTableCol_Func" xml:space="preserve">
    <value>'{0}' 的第一个参数应是由一列组成的表。</value>
    
  </data>
  <data name="ErrInvalidSchemaNeedTypeCol_Col" xml:space="preserve">
    <value>架构无效，需要 '{1}' 的 {0} 值组成的列。</value>
    
  </data>
  <data name="ErrInvalidSchemaNeedCol" xml:space="preserve">
    <value>架构无效，需要包含由一列组成的表。</value>
    
  </data>
  <data name="ErrNeedRecord" xml:space="preserve">
    <value>无法在此上下文中使用非记录值。</value>
    
  </data>
  <data name="ErrNeedRecord_Arg" xml:space="preserve">
    <value>无法在此上下文中使用非记录值:“{0}”。</value>
    
  </data>
  <data name="ErrNeedRecordOrTable" xml:space="preserve">
    <value>在此上下文中只能使用记录或表值。</value>
    
  </data>
  <data name="ErrIncompatibleRecord" xml:space="preserve">
    <value>无法使用此记录。它可能包含类型不兼容的冲突字段。</value>
    
  </data>
  <data name="ErrNeedRecord_Func" xml:space="preserve">
    <value>'{0}' 的第一个参数应是记录。</value>
    
  </data>
  <data name="ErrNeedEntity_EntityName" xml:space="preserve">
    <value>以枚举值的形式或在 Choices 功能中使用此选项设置将要求把“{0}”实体添加为数据源。若要添加，请使用“视图”菜单，然后选择“数据源”。</value>
    
  </data>
  <data name="ErrNotAccessibleInCurrentContext" xml:space="preserve">
    <value>在此上下文中无法访问指定属性。</value>
    
  </data>
  <data name="ErrInternalControlInInputProperty" xml:space="preserve">
    <value>不能在同一组件的输入属性中引用组件内的控件。</value>
    
  </data>
  <data name="ErrColumnNotAccessibleInCurrentContext" xml:space="preserve">
    <value>此上下文中无法访问指定列。</value>
    
  </data>
  <data name="WrnRowScopeOneToNExpandNumberOfCalls" xml:space="preserve">
    <value>在该函数的记录范围中引用了一对多或多对多关系。这可能会导致大量调用数据源，从而影响性能。</value>
    
  </data>
  <data name="ErrNumberTooLarge" xml:space="preserve">
    <value>数值太大。</value>
    
  </data>
  <data name="ErrReservedKeyword" xml:space="preserve">
    <value>使用当前不支持的保留词。</value>
    
  </data>
  <data name="ErrTextTooLarge" xml:space="preserve">
    <value>表达式不能超过 {0} 个字符。该表达式包含 {1} 个字符。</value>
    
  </data>
  <data name="ErrTextFormatTooLarge" xml:space="preserve">
    <value>格式字符串大小不能超过 {0} 个字符。</value>
    
  </data>
  <data name="ErrTextInvalidFormat" xml:space="preserve">
    <value>格式无效。</value>
    
  </data>
  <data name="ErrTextInvalidArgDateTime" xml:space="preserve">
    <value>变量未表示有效的日期或时间值。</value>
    
  </data>
  <data name="ErrInvalidDataSource" xml:space="preserve">
    <value>此数据源无效。请通过单击“内容 -&gt; 数据源”或“查看 -&gt; 选项”来修复“数据源”窗格中的错误</value>
    
  </data>
  <data name="ErrExpectedDataSourceRestriction" xml:space="preserve">
    <value>应为限制内联记录的数据源标识符。</value>
    
  </data>
  <data name="ErrIncompatibleTypes" xml:space="preserve">
    <value>给定类型不兼容。</value>
    
  </data>
  <data name="ErrTypeError_Ex1_Ex2_Found" xml:space="preserve">
    <value>此参数 '{2}' 的类型与所需类型 '{0}' 或 '{1}' 之一不匹配。</value>
    
  </data>
  <data name="ErrTypeError_Arg_Expected_Found" xml:space="preserve">
    <value>此参数 '{0}' 的类型与所需类型 '{1}' 不匹配。找到类型 '{2}'。</value>
    
  </data>
  <data name="ErrTypeError_WrongType" xml:space="preserve">
    <value>此表达式的类型与所需类型 '{0}' 不匹配。找到类型 '{1}'。</value>
    
  </data>
  <data name="ErrTypeErrorRecordIncompatibleWithSource" xml:space="preserve">
    <value>记录的类型与源不兼容。</value>
    
  </data>
  <data name="ErrExpectedStringLiteralArg_Name" xml:space="preserve">
    <value>参数 '{0}' 无效，应为文本。</value>
    
  </data>
  <data name="ErrArgNotAValidIdentifier_Name" xml:space="preserve">
    <value>参数 '{0}' 不是有效的标识符。</value>
    
  </data>
  <data name="ErrColExists_Name" xml:space="preserve">
    <value>名为 '{0}' 的列已存在。</value>
    
  </data>
  <data name="ErrColConflict_Name" xml:space="preserve">
    <value>'{0}' 的列名冲突。</value>
    
  </data>
  <data name="ErrColDNE_Name" xml:space="preserve">
    <value>指定列 '{0}' 不存在。</value>
    
  </data>
  <data name="ErrColumnDoesNotExist_Name_Similar" xml:space="preserve">
    <value>指定的列 '{0}' 不存在。名称最相似的列是 '{1}'。</value>
    
  </data>
  <data name="ErrSortIncorrectOrder" xml:space="preserve">
    <value>表达式类型的排序顺序不正确。</value>
    
  </data>
  <data name="ErrSortWrongType" xml:space="preserve">
    <value>无法对表达式类型进行排序。</value>
    
  </data>
  <data name="ErrDistinctWrongType" xml:space="preserve">
    <value>无法对表达式类型应用 Distinct。</value>
    
  </data>
  <data name="ErrFunctionDoesNotAcceptThisType_Function_Expected" xml:space="preserve">
    <value>类型错误: {0} 应为 {1} 或 {1} 类型的表格列。</value>
    
  </data>
  <data name="ErrIncorrectFormat_Func" xml:space="preserve">
    <value>为 '{0}' 指定的格式不正确。</value>
    
  </data>
  <data name="ErrAsyncLambda" xml:space="preserve">
    <value>无法在条件和值函数中使用异步调用。</value>
    
  </data>
  <data name="ErrValueMustBeFullyQualified" xml:space="preserve">
    <value>这是命名空间，您可以使用 "." 运算符访问其成员。</value>
    
  </data>
  <data name="ErrScopeModificationLambda" xml:space="preserve">
    <value>此函数不能在 {0} 中使用的相同数据源上进行操作。</value>
    
  </data>
  <data name="ErrFunctionDisallowedWithinNondeterministicOperationOrder" xml:space="preserve">
    <value>不能在 {0} 中调用此函数。</value>
    
  </data>
  <data name="ErrAsTypeAndIsTypeExpectConnectedDataSource" xml:space="preserve">
    <value>参数错误。该公式需要表来自已连接的数据源。AsType 和 IsType 函数需使用已连接的数据源。</value>
    
  </data>
  <data name="InfoMessage" xml:space="preserve">
    <value>消息:</value>
    
  </data>
  <data name="InfoNode_Node" xml:space="preserve">
    <value>节点: {0}</value>
    
  </data>
  <data name="InfoTok_Tok" xml:space="preserve">
    <value>标记: {0}</value>
    
  </data>
  <data name="FormatSpan_Min_Lim" xml:space="preserve">
    <value>({0},{1}) </value>
    
  </data>
  <data name="FormatErrorSeparator" xml:space="preserve">
    <value>、</value>
    
  </data>
  <data name="AboutDate" xml:space="preserve">
    <value>返回采用 Power Apps 日期时间代码表示日期的数字。</value>
    
  </data>
  <data name="DateArg1" xml:space="preserve">
    <value>年</value>
    
  </data>
  <data name="DateArg2" xml:space="preserve">
    <value>月</value>
    
  </data>
  <data name="DateArg3" xml:space="preserve">
    <value>天</value>
    
  </data>
  <data name="AboutDate_year" xml:space="preserve">
    <value>年。</value>
  </data>
  <data name="AboutDate_month" xml:space="preserve">
    <value>月。</value>
  </data>
  <data name="AboutDate_day" xml:space="preserve">
    <value>日。</value>
  </data>
  <data name="AboutTime" xml:space="preserve">
    <value>将小时、分钟和秒转换为小数数字。</value>
    
  </data>
  <data name="TimeArg1" xml:space="preserve">
    <value>小时</value>
    
  </data>
  <data name="TimeArg2" xml:space="preserve">
    <value>分钟</value>
    
  </data>
  <data name="TimeArg3" xml:space="preserve">
    <value>秒</value>
    
  </data>
  <data name="TimeArg4" xml:space="preserve">
    <value>毫秒</value>
    
  </data>
  <data name="AboutTime_hour" xml:space="preserve">
    <value>小时部分。</value>
  </data>
  <data name="AboutTime_minute" xml:space="preserve">
    <value>分钟部分。</value>
  </data>
  <data name="AboutTime_second" xml:space="preserve">
    <value>秒部分。</value>
  </data>
  <data name="AboutTime_millisecond" xml:space="preserve">
    <value>毫秒部分。</value>
  </data>
  <data name="AboutDateTime" xml:space="preserve">
    <value>创建一个以某天的日期和时间来表示瞬间的值。</value>
    
  </data>
  <data name="AboutDateTime_year" xml:space="preserve">
    <value>年。</value>
    
  </data>
  <data name="AboutDateTime_month" xml:space="preserve">
    <value>月。</value>
    
  </data>
  <data name="AboutDateTime_day" xml:space="preserve">
    <value>日。</value>
    
  </data>
  <data name="AboutDateTime_hour" xml:space="preserve">
    <value>小时。</value>
    
  </data>
  <data name="AboutDateTime_minute" xml:space="preserve">
    <value>分钟。</value>
    
  </data>
  <data name="AboutDateTime_second" xml:space="preserve">
    <value>秒。</value>
    
  </data>
  <data name="AboutDateTime_millisecond" xml:space="preserve">
    <value>毫秒。</value>
    
  </data>
  <data name="AboutYear" xml:space="preserve">
    <value>Year 返回给定日期的年份。</value>
    
  </data>
  <data name="YearArg1" xml:space="preserve">
    <value>日期时间</value>
    
  </data>
  <data name="AboutYear_date_time" xml:space="preserve">
    <value>将从中提取年份部分的日期值。</value>
  </data>
  <data name="AboutMonth" xml:space="preserve">
    <value>返回月份，从 1 (一月)到 12 (十二月)的数字。</value>
    
  </data>
  <data name="MonthArg1" xml:space="preserve">
    <value>日期时间</value>
    
  </data>
  <data name="AboutMonth_date_time" xml:space="preserve">
    <value>将从中提取月份部分的日期值。</value>
  </data>
  <data name="AboutDay" xml:space="preserve">
    <value>Day 返回一月中的日期，1 到 31 的数字。</value>
    
  </data>
  <data name="DayArg1" xml:space="preserve">
    <value>日期时间</value>
    
  </data>
  <data name="AboutDay_date_time" xml:space="preserve">
    <value>将从中提取星期几部分的日期值。</value>
  </data>
  <data name="AboutHour" xml:space="preserve">
    <value>Hour 以介于 0 (凌晨 12:00:00)与 23 (晚上 11:00:00)之间的数字形式返回小时。</value>
    
  </data>
  <data name="HourArg1" xml:space="preserve">
    <value>日期时间</value>
    
  </data>
  <data name="AboutHour_date_time" xml:space="preserve">
    <value>从中提取该部分的日期或时间值。</value>
  </data>
  <data name="AboutMinute" xml:space="preserve">
    <value>返回分钟，从 0 到 59 的数字。</value>
    
  </data>
  <data name="MinuteArg1" xml:space="preserve">
    <value>日期时间</value>
    
  </data>
  <data name="AboutMinute_date_time" xml:space="preserve">
    <value>将从中提取分钟部分的日期或时间值。</value>
  </data>
  <data name="AboutSecond" xml:space="preserve">
    <value>返回秒，从 0 到 59 的数字。</value>
    
  </data>
  <data name="SecondArg1" xml:space="preserve">
    <value>日期时间</value>
    
  </data>
  <data name="AboutSecond_date_time" xml:space="preserve">
    <value>将从中提取秒部分的日期和时间值。</value>
  </data>
  <data name="AboutWeekday" xml:space="preserve">
    <value>返回日期时间值的工作日。默认情况下，结果范围从 1 (星期日)到 7 (星期六)。你可以通过 StartOfWeek 枚举值或 Microsoft Excel Weekday 函数代码指定其他范围。</value>
    
  </data>
  <data name="WeekdayArg1" xml:space="preserve">
    <value>日期</value>
    
  </data>
  <data name="WeekdayArg2" xml:space="preserve">
    <value>星期开始值</value>
    
  </data>
  <data name="AboutWeekday_date" xml:space="preserve">
    <value>将针对其计算星期几的日期值。</value>
  </data>
  <data name="AboutWeekday_start_of_week" xml:space="preserve">
    <value>指示应如何对一周中的天数编号的 StartOfWeek 枚举值或相应 Excel 函数中的数字。</value>
    
  </data>
  <data name="AboutCalendar__MonthsLong" xml:space="preserve">
    <value>返回包含每月完整名称的单列表。</value>
    
  </data>
  <data name="AboutCalendar__MonthsShort" xml:space="preserve">
    <value>返回包含每月速记名称的单列表。</value>
    
  </data>
  <data name="AboutCalendar__WeekdaysLong" xml:space="preserve">
    <value>返回包含一周每天完整名称的单列表。</value>
    
  </data>
  <data name="AboutCalendar__WeekdaysShort" xml:space="preserve">
    <value>返回包含一周每天速记名称的单列表。</value>
    
  </data>
  <data name="AboutClock__AmPm" xml:space="preserve">
    <value>返回包含上午和下午大写标志的单列表。</value>
    
  </data>
  <data name="AboutClock__AmPmShort" xml:space="preserve">
    <value>返回包含上午和下午缩写大写标志的单列表。</value>
    
  </data>
  <data name="AboutClock__IsClock24" xml:space="preserve">
    <value>返回一个布尔值，该值指示时钟是否使用 24 小时时间。</value>
    
  </data>
  <data name="AboutDateValue" xml:space="preserve">
    <value>将文本形式的日期转换为采用 Power Apps 日期时间代码表示日期的数字。</value>
    
  </data>
  <data name="DateValueArg1" xml:space="preserve">
    <value>日期文本</value>
    
  </data>
  <data name="DateValueArg2" xml:space="preserve">
    <value>语言代码</value>
    
  </data>
  <data name="AboutDateValue_date_text" xml:space="preserve">
    <value>日期/时间戳的文本表示形式(采用平台支持的格式)。</value>
  </data>
  <data name="AboutDateValue_language_code" xml:space="preserve">
    <value>所提供文本的语言代码。</value>
  </data>
  <data name="AboutTimeValue" xml:space="preserve">
    <value>将文本形式的时间转换为采用 Microsoft Power Apps 日期时间代码表示日期的数字，忽略任何日期部分。</value>
    
  </data>
  <data name="TimeValueArg1" xml:space="preserve">
    <value>时间文本</value>
    
  </data>
  <data name="TimeValueArg2" xml:space="preserve">
    <value>语言代码</value>
    
  </data>
  <data name="AboutTimeValue_time_text" xml:space="preserve">
    <value>日期/时间戳的文本表示形式(采用平台支持的格式)。</value>
  </data>
  <data name="AboutTimeValue_language_code" xml:space="preserve">
    <value>所提供文本的语言代码。</value>
  </data>
  <data name="ErrAutoRefreshNotAllowed" xml:space="preserve">
    <value>无法在操作规则中使用自动刷新服务函数。</value>
    
  </data>
  <data name="ErrMultipleValuesForField_Name" xml:space="preserve">
    <value>此记录中多次指定了名为 '{0}' 的字段。</value>
    
  </data>
  <data name="WarnColumnNameSpecifiedMultipleTimes_Name" xml:space="preserve">
    <value>多次指定了名为 '{0}' 的列。</value>
    
  </data>
  <data name="WarnLiteralPredicate" xml:space="preserve">
    <value>警告: 此谓词是文字值，不引用输入表。</value>
    
  </data>
  <data name="WarnDynamicMetadata" xml:space="preserve">
    <value>警告: 在展开的编辑栏底部选择“捕获架构”，以设置和刷新此方法的结果架构。否则，此方法将不返回任何结果。</value>
    
  </data>
  <data name="FindArg1" xml:space="preserve">
    <value>查找文本</value>
    
  </data>
  <data name="FindArg2" xml:space="preserve">
    <value>文本中</value>
    
  </data>
  <data name="FindArg3" xml:space="preserve">
    <value>起始编号</value>
    
  </data>
  <data name="AboutFind_find_text" xml:space="preserve">
    <value>要查找的文本值。</value>
  </data>
  <data name="AboutFind_within_text" xml:space="preserve">
    <value>要在其中进行查找的文本值。</value>
  </data>
  <data name="AboutFind_start_num" xml:space="preserve">
    <value>可选的开始位置。</value>
  </data>
  <data name="AboutFind" xml:space="preserve">
    <value>返回一个文本值在另一个文本值中的开始位置。Find 区分大小写。</value>
    
  </data>
  <data name="AboutFindT" xml:space="preserve">
    <value>返回一个文本值(或字符串组成的列)在另一个文本值(或字符串组成的列)中的开始位置组成的列。Find 区分大小写。</value>
    
  </data>
  <data name="FindTArg1" xml:space="preserve">
    <value>查找文本或列</value>
    
  </data>
  <data name="FindTArg2" xml:space="preserve">
    <value>文本或列中</value>
    
  </data>
  <data name="FindTArg3" xml:space="preserve">
    <value>起始编号</value>
    
  </data>
  <data name="AboutFind_find_text_or_column" xml:space="preserve">
    <value>要查找的文本值(或文本值组成的列)。</value>
  </data>
  <data name="AboutFind_within_text_or_column" xml:space="preserve">
    <value>要在其中进行查找的文本值(或文本值组成的列)。</value>
  </data>
  <data name="AboutColorValue" xml:space="preserve">
    <value>返回与给定颜色字符串对应的颜色。</value>
    
  </data>
  <data name="ColorValueArg1" xml:space="preserve">
    <value>颜色文本</value>
    
  </data>
  <data name="AboutColorValue_color_text" xml:space="preserve">
    <value>由“蓝色”等名称指定，或使用标准 6 位十六进制表示法 #rrggbb 表示的颜色。</value>
  </data>
  <data name="ErrInvalidJsonPointer" xml:space="preserve">
    <value>JSON 指针无效。</value>
    
  </data>
  <data name="None" xml:space="preserve">
    <value>无</value>
    
  </data>
  <data name="Text" xml:space="preserve">
    <value>文本</value>
    
  </data>
  <data name="Logical" xml:space="preserve">
    <value>逻辑</value>
    
  </data>
  <data name="Table" xml:space="preserve">
    <value>表</value>
    
  </data>
  <data name="Behavior" xml:space="preserve">
    <value>行为</value>
    
  </data>
  <data name="DateTime" xml:space="preserve">
    <value>日期和时间</value>
    
  </data>
  <data name="MathAndStat" xml:space="preserve">
    <value>数学和统计</value>
    
  </data>
  <data name="UserDefined" xml:space="preserve">
    <value>由用户定义</value>
    
  </data>
  <data name="Information" xml:space="preserve">
    <value>信息</value>
    
  </data>
  <data name="Color" xml:space="preserve">
    <value>颜色</value>
    
  </data>
  <data name="REST" xml:space="preserve">
    <value>服务</value>
    
  </data>
  <data name="Component" xml:space="preserve">
    <value>组件</value>
    
  </data>
  <data name="InvalidXml_ElementMissingAttribute_ElemName_AttrName" xml:space="preserve">
    <value>元素 '{0}' 缺少属性 '{1}'。</value>
    
  </data>
  <data name="InvalidXml_AttributeCannotBeEmpty_AttrName" xml:space="preserve">
    <value>属性 '{0}' 不能为空字符串。</value>
    
  </data>
  <data name="InvalidXml_AttributeValueInvalidGuid_AttrName_Value" xml:space="preserve">
    <value>属性 '{0}' 具有无效的 GUID 值 '{1}'。</value>
    
  </data>
  <data name="InvalidJson_MissingRequiredNamedValue_PropName" xml:space="preserve">
    <value>缺少属性 '{0}'。</value>
    
  </data>
  <data name="InvalidJson_NamedValueTypeNotCorrect_PropName_ExpectedType_ActualType" xml:space="preserve">
    <value>属性 '{0}' 具有无效类型值: {2}。需要类型值: {1}。</value>
    
  </data>
  <data name="InvalidJson_NamedValueCannotBeEmpty_PropName" xml:space="preserve">
    <value>属性 '{0}' 不能为空。</value>
    
  </data>
  <data name="InvalidJson_NamedEnumStringInvalid_PropName_ActualValue" xml:space="preserve">
    <value>枚举 '{0}' 应具有一个有效值，但其值 {1} 不在枚举范围内。</value>
    
  </data>
  <data name="InvalidJson_NamedIntegerOverflow_PropName_ActualValue" xml:space="preserve">
    <value>属性 '{0}' 应具有一个整数值，但其值 {1} 不在范围内。</value>
    
  </data>
  <data name="InvalidJson_IndexedValueTypeNotCorrect_Index_ExpectedType_ActualType" xml:space="preserve">
    <value>索引 {0} 处的项具有无效的类型值: {2}。需要类型值: {1}。</value>
  </data>
  <data name="InvalidJson_IndexedValueMustBeNonEmpty_Index" xml:space="preserve">
    <value>索引 {0} 处的项必须为非空字符串。</value>
  </data>
  <data name="AboutDateAdd" xml:space="preserve">
    <value>向日期添加指定数量的单位。</value>
    
  </data>
  <data name="AboutDateDiff" xml:space="preserve">
    <value>计算两个日期之差。</value>
    
  </data>
  <data name="DateAddArg1" xml:space="preserve">
    <value>日期</value>
    
  </data>
  <data name="DateAddArg2" xml:space="preserve">
    <value>单位数量</value>
    
  </data>
  <data name="DateAddArg3" xml:space="preserve">
    <value>单位</value>
    
  </data>
  <data name="AboutDateAdd_date" xml:space="preserve">
    <value>引用日期值。</value>
  </data>
  <data name="AboutDateAdd_number_of_units" xml:space="preserve">
    <value>要添加的单位数。该数字可以是负数。</value>
  </data>
  <data name="AboutDateAdd_unit" xml:space="preserve">
    <value>要使用的单位，可以是 TimeUnit.Years、TimeUnit.Quarters、TimeUnit.Months、TimeUnit.Days、TimeUnit.Hours、TimeUnit.Minutes、TimeUnit.Seconds、TimeUnit.Milliseconds 之一。</value>
    
  </data>
  <data name="DateDiffArg1" xml:space="preserve">
    <value>开始日期</value>
    
  </data>
  <data name="DateDiffArg2" xml:space="preserve">
    <value>结束日期</value>
    
  </data>
  <data name="DateDiffArg3" xml:space="preserve">
    <value>单位</value>
    
  </data>
  <data name="AboutDateDiff_start_date" xml:space="preserve">
    <value>用于差值运算的开始日期。</value>
  </data>
  <data name="AboutDateDiff_end_date" xml:space="preserve">
    <value>用于差值运算的结束日期。</value>
  </data>
  <data name="AboutDateDiff_unit" xml:space="preserve">
    <value>用于表示结果的单位，可以是 TimeUnit.Years、TimeUnit.Quarters、TimeUnit.Months、TimeUnit.Days、TimeUnit.Hours、TimeUnit.Minutes、TimeUnit.Seconds、TimeUnit.Milliseconds 之一。</value>
    
  </data>
  <data name="AboutDateAddT" xml:space="preserve">
    <value>向日期组成的列添加指定数量的单位。</value>
    
  </data>
  <data name="AboutDateDiffT" xml:space="preserve">
    <value>计算日期组成的两列之间的差值。</value>
    
  </data>
  <data name="DateAddTArg1" xml:space="preserve">
    <value>日期列</value>
    
  </data>
  <data name="DateAddTArg2" xml:space="preserve">
    <value>单位数量</value>
    
  </data>
  <data name="DateAddTArg3" xml:space="preserve">
    <value>单位</value>
    
  </data>
  <data name="AboutDateAdd_date_column" xml:space="preserve">
    <value>日期值组成的列。</value>
  </data>
  <data name="DateDiffTArg1" xml:space="preserve">
    <value>开始日期列</value>
    
  </data>
  <data name="DateDiffTArg2" xml:space="preserve">
    <value>结束日期列</value>
    
  </data>
  <data name="DateDiffTArg3" xml:space="preserve">
    <value>单位</value>
    
  </data>
  <data name="AboutDateDiff_start_date_column" xml:space="preserve">
    <value>用于差值运算的开始日期组成的列。</value>
  </data>
  <data name="AboutDateDiff_end_date_column" xml:space="preserve">
    <value>用于差值运算的结束日期组成的列。</value>
  </data>
  <data name="AboutChar" xml:space="preserve">
    <value>返回平台上字符集中的代码编号指定的字符。</value>
    
  </data>
  <data name="CharArg1" xml:space="preserve">
    <value>数字</value>
    
  </data>
  <data name="AboutChar_number" xml:space="preserve">
    <value>平台上字符集中的代码编号。</value>
  </data>
  <data name="AboutCharT" xml:space="preserve">
    <value>返回平台上字符集中的代码编号指定的字符组成的表。</value>
    
  </data>
  <data name="CharTArg1" xml:space="preserve">
    <value>数字组成的列</value>
    
  </data>
  <data name="AboutChar_column_of_numbers" xml:space="preserve">
    <value>平台上字符集中的代码编号组成的列。</value>
  </data>
  <data name="AboutParseJSON" xml:space="preserve">
    <value>将 JSON 字符串转换为对象。</value>
    
  </data>
  <data name="ParseJSONArg1" xml:space="preserve">
    <value>输入</value>
    
  </data>
  <data name="AboutParseJSON_input" xml:space="preserve">
    <value>要处理的 JSON 字符串。</value>
  </data>
  <data name="AboutIndex" xml:space="preserve">
    <value>返回表中给定索引处的记录。</value>
    
  </data>
  <data name="IndexArg1" xml:space="preserve">
    <value>表</value>
    
  </data>
  <data name="IndexArg2" xml:space="preserve">
    <value>索引</value>
    
  </data>
  <data name="AboutIndex_table" xml:space="preserve">
    <value>一个表。</value>
  </data>
  <data name="AboutIndex_index" xml:space="preserve">
    <value>要检索的记录的索引。</value>
    
  </data>
  <data name="Screen_Name_DisplayName" xml:space="preserve">
    <value>名称</value>
    
  </data>
  <data name="Screen_Printing_DisplayName" xml:space="preserve">
    <value>正在打印</value>
    
  </data>
  <data name="Screen_ImagePosition_DisplayName" xml:space="preserve">
    <value>图像位置</value>
    
  </data>
  <data name="Screen_Size_DisplayName" xml:space="preserve">
    <value>大小</value>
    
  </data>
  <data name="barcode_Type_DisplayName" xml:space="preserve">
    <value>条形码类型</value>
    
  </data>
  <data name="camera_Contrast_DisplayName" xml:space="preserve">
    <value>对比度</value>
    
  </data>
  <data name="camera_Zoom_DisplayName" xml:space="preserve">
    <value>缩放</value>
    
  </data>
  <data name="camera_Camera_DisplayName" xml:space="preserve">
    <value>相机</value>
    
  </data>
  <data name="export_Data_DisplayName" xml:space="preserve">
    <value>数据</value>
    
  </data>
  <data name="Edit" xml:space="preserve">
    <value>编辑</value>
    
  </data>
  <data name="Dust" xml:space="preserve">
    <value>灰尘</value>
    
  </data>
  <data name="image_Image_DisplayName" xml:space="preserve">
    <value>图像</value>
    
  </data>
  <data name="icon_Icon_DisplayName" xml:space="preserve">
    <value>图标</value>
    
  </data>
  <data name="icon_Rotation_DisplayName" xml:space="preserve">
    <value>旋转</value>
    
  </data>
  <data name="image_ImagePosition_DisplayName" xml:space="preserve">
    <value>图像位置</value>
    
  </data>
  <data name="image_ImageRotation_DisplayName" xml:space="preserve">
    <value>旋转</value>
    
  </data>
  <data name="label_Live_DisplayName" xml:space="preserve">
    <value>实时</value>
    
  </data>
  <data name="label_Overflow_DisplayName" xml:space="preserve">
    <value>溢出</value>
    
  </data>
  <data name="DatePicker_DateTimeZone_DisplayName" xml:space="preserve">
    <value>日期时区</value>
    
  </data>
  <data name="DatePicker_Format_DisplayName" xml:space="preserve">
    <value>格式</value>
    
  </data>
  <data name="DatePicker_Language_DisplayName" xml:space="preserve">
    <value>语言</value>
    
  </data>
  <data name="Calendar_Width_DisplayName" xml:space="preserve">
    <value>日历宽度</value>
    
  </data>
  <data name="Hide_Calendar_DisplayName" xml:space="preserve">
    <value>隐藏日历</value>
    
  </data>
  <data name="Calendar_StartOfWeek_DisplayName" xml:space="preserve">
    <value>周开始</value>
    
  </data>
  <data name="microphone_Mic_DisplayName" xml:space="preserve">
    <value>麦克风</value>
    
  </data>
  <data name="text_Default_DisplayName" xml:space="preserve">
    <value>默认</value>
    
  </data>
  <data name="text_Mode_DisplayName" xml:space="preserve">
    <value>模式</value>
    
  </data>
  <data name="text_Format_DisplayName" xml:space="preserve">
    <value>格式</value>
    
  </data>
  <data name="text_VirtualKeyboardMode_DisplayName" xml:space="preserve">
    <value>虚拟键盘模式</value>
    
  </data>
  <data name="text_TeamsTheme_DisplayName" xml:space="preserve">
    <value>Teams 主题</value>
    
  </data>
  <data name="text_Clear_DisplayName" xml:space="preserve">
    <value>清除按钮</value>
    
  </data>
  <data name="AboutIsNumeric" xml:space="preserve">
    <value>检查值是否为数字，并返回 true 或 false。</value>
    
  </data>
  <data name="IsNumericArg1" xml:space="preserve">
    <value>值</value>
    
  </data>
  <data name="AboutIsNumeric_value" xml:space="preserve">
    <value>要测试的值。</value>
  </data>
  <data name="AboutDateTimeValue" xml:space="preserve">
    <value>将文本形式的日期和时间转换为采用 Power Apps 日期时间代码表示日期的数字。</value>
    
  </data>
  <data name="DateTimeValueArg1" xml:space="preserve">
    <value>时间文本</value>
    
  </data>
  <data name="DateTimeValueArg2" xml:space="preserve">
    <value>语言代码</value>
    
  </data>
  <data name="AboutDateTimeValue_time_text" xml:space="preserve">
    <value>日期/时间戳的文本表示形式(采用平台支持的格式)。</value>
  </data>
  <data name="AboutDateTimeValue_language_code" xml:space="preserve">
    <value>所提供文本的语言代码。</value>
  </data>
  <data name="AboutTable" xml:space="preserve">
    <value>基于指定的记录和表创建表，该表中列的数目等于唯一记录字段的数目。例如: Table({key1: val1, key2: val2, ...}, ...)</value>
    
  </data>
  <data name="TableArg1" xml:space="preserve">
    <value>记录或表</value>
    
  </data>
  <data name="AboutTable_record_or_table" xml:space="preserve">
    <value>将成为所生成表的一部分的记录或表。</value>
    
  </data>
  <data name="AboutShowColumns" xml:space="preserve">
    <value>返回一个表，该表中除指定列之外的所有列均已从 "source" 表中删除。</value>
    
  </data>
  <data name="ShowColumnsArg1" xml:space="preserve">
    <value>源</value>
    
  </data>
  <data name="ShowColumnsArg2" xml:space="preserve">
    <value>列名</value>
    
  </data>
  <data name="AboutShowColumns_source" xml:space="preserve">
    <value>要从中删除列的表或记录值。</value>
  </data>
  <data name="AboutShowColumns_column_name" xml:space="preserve">
    <value>要保持的列的名称。</value>
  </data>
  <data name="AboutIsToday" xml:space="preserve">
    <value>检查给定日期是否是今天，并返回 true 或 false。</value>
    
  </data>
  <data name="AboutIsToday_date" xml:space="preserve">
    <value>要测试的日期值。</value>
  </data>
  <data name="IsTodayFuncArg1" xml:space="preserve">
    <value>日期</value>
    
  </data>
  <data name="AboutIsUTCToday" xml:space="preserve">
    <value>检查给定日期是否是今天(UTC)，并返回 true 或 false。</value>
    
  </data>
  <data name="AboutIsUTCToday_date" xml:space="preserve">
    <value>要测试的日期值。</value>
  </data>
  <data name="IsUTCTodayFuncArg1" xml:space="preserve">
    <value>日期</value>
    
  </data>
  <data name="AboutMod" xml:space="preserve">
    <value>返回数值除以除数后得到的余数。结果的符号与除数的符号相同。</value>
    
  </data>
  <data name="AboutModT" xml:space="preserve">
    <value>返回包含数值(或一列数值)除以除数(或一列除数)后所得余数的列。</value>
    
  </data>
  <data name="AboutMod_divisor" xml:space="preserve">
    <value>要除以的数值。</value>
  </data>
  <data name="AboutMod_divisor_or_column" xml:space="preserve">
    <value>要除以的数值或数值列。</value>
  </data>
  <data name="AboutMod_number" xml:space="preserve">
    <value>要得到余数的数值。</value>
  </data>
  <data name="AboutMod_number_or_column" xml:space="preserve">
    <value>要得到余数的数值或数值列。</value>
  </data>
  <data name="ModFuncArg1" xml:space="preserve">
    <value>数字</value>
    
  </data>
  <data name="ModFuncArg2" xml:space="preserve">
    <value>除数</value>
    
  </data>
  <data name="ModTFuncArg1" xml:space="preserve">
    <value>数字或列</value>
    
  </data>
  <data name="ModTFuncArg2" xml:space="preserve">
    <value>除数或列</value>
    
  </data>
  <data name="pdfViewer_Document_DisplayName" xml:space="preserve">
    <value>文档</value>
    
  </data>
  <data name="pdfViewer_Zoom_DisplayName" xml:space="preserve">
    <value>缩放</value>
    
  </data>
  <data name="pdfViewer_Password_DisplayName" xml:space="preserve">
    <value>密码</value>
    
  </data>
  <data name="pdfViewer_PasswordState_DisplayName" xml:space="preserve">
    <value>密码状态</value>
    
  </data>
  <data name="DataDescriptionInvalidFormat_Reason" xml:space="preserve">
    <value>数据说明无效: {0}</value>
  </data>
  <data name="DataDescriptionParserUnknownException" xml:space="preserve">
    <value>尝试分析数据说明时出现了未知错误。</value>
  </data>
  <data name="AboutForAll" xml:space="preserve">
    <value>在数据源的每一行上应用给定的公式，然后返回每行带有结果的新表。</value>
    
  </data>
  <data name="AboutForAll_source" xml:space="preserve">
    <value>要进行操作的数据源或表。</value>
  </data>
  <data name="AboutForAll_formula" xml:space="preserve">
    <value>计算表中所有行的公式。</value>
  </data>
  <data name="ForAllArg1" xml:space="preserve">
    <value>源</value>
    
  </data>
  <data name="ForAllArg2" xml:space="preserve">
    <value>公式</value>
    
  </data>
  <data name="AboutPower" xml:space="preserve">
    <value>数字 x 的数字 y 次幂。与 x^y 相同。</value>
    
  </data>
  <data name="AboutPower_base" xml:space="preserve">
    <value>要相乘的底数。</value>
  </data>
  <data name="AboutPower_exponent" xml:space="preserve">
    <value>要相乘的基数的指数。</value>
  </data>
  <data name="PowerFuncArg1" xml:space="preserve">
    <value>基数</value>
    
  </data>
  <data name="PowerFuncArg2" xml:space="preserve">
    <value>指数</value>
    
  </data>
  <data name="AboutStartsWith" xml:space="preserve">
    <value>如果提过的文本以提供的起始字符串开头，则返回 true。</value>
    
  </data>
  <data name="AboutStartsWith_text" xml:space="preserve">
    <value>要检查的文本。</value>
  </data>
  <data name="AboutStartsWith_start" xml:space="preserve">
    <value>起始字符串。如果文本以此字符串开头，则函数返回 true。</value>
  </data>
  <data name="StartsWithArg1" xml:space="preserve">
    <value>文本</value>
    
  </data>
  <data name="StartsWithArg2" xml:space="preserve">
    <value>开始</value>
    
  </data>
  <data name="AboutEndsWith" xml:space="preserve">
    <value>如果提供的文本以提供的末尾字符串结尾，则返回 true。</value>
    
  </data>
  <data name="AboutEndsWith_text" xml:space="preserve">
    <value>要检查的文本。</value>
  </data>
  <data name="AboutEndsWith_end" xml:space="preserve">
    <value>末尾字符串。如果文本以此字符串结尾，则函数返回 true。</value>
  </data>
  <data name="EndsWithArg1" xml:space="preserve">
    <value>文本</value>
    
  </data>
  <data name="EndsWithArg2" xml:space="preserve">
    <value>结束</value>
    
  </data>
  <data name="AboutBlank" xml:space="preserve">
    <value>返回一个 NULL (空)值</value>
  </data>
  <data name="AboutPowerT" xml:space="preserve">
    <value>使数字 x (或数字列)自乘作为幂的另一数字 y (或数字列)。等效于 x^y。</value>
    
  </data>
  <data name="AboutPower_base_or_column" xml:space="preserve">
    <value>要求解的基数(或基数列)。</value>
  </data>
  <data name="AboutPower_exponent_or_column" xml:space="preserve">
    <value>基数将按其求解的指数(或指数列)。</value>
  </data>
  <data name="PowerTFuncArg1" xml:space="preserve">
    <value>基线或列</value>
    
  </data>
  <data name="PowerTFuncArg2" xml:space="preserve">
    <value>指数或列</value>
    
  </data>
  <data name="SuggestRemoteExecutionHint_OpNotSupportedByClient" xml:space="preserve">
    <value>无法远程计算此公式的一部分。此上下文中当前不支持 '{0}' 运算。</value>
    
  </data>
  <data name="SuggestRemoteExecutionHint_StringMatchSecondParam" xml:space="preserve">
    <value>此公式的一部分不能远程计算。如果第二个参数中出现字段名称，则不能委托 '{0}' 函数。</value>
    
  </data>
  <data name="entityForm_EntityForm_DisplayName" xml:space="preserve">
    <value>实体窗体</value>
    
  </data>
  <data name="TeamsTheme_Default_DisplayName" xml:space="preserve">
    <value>默认主题</value>
    
  </data>
  <data name="TeamsTheme_Dark_DisplayName" xml:space="preserve">
    <value>深色主题</value>
    
  </data>
  <data name="TeamsTheme_Contrast_DisplayName" xml:space="preserve">
    <value>对比度主题</value>
    
  </data>
  <data name="AboutCollect" xml:space="preserve">
    <value>将记录添加到数据源。</value>
    
  </data>
  <data name="CollectDataSourceArg" xml:space="preserve">
    <value>数据源</value>
    
  </data>
  <data name="CollectRecordArg" xml:space="preserve">
    <value>记录</value>
    
  </data>
  <data name="AboutClear" xml:space="preserve">
    <value>删除集合的所有记录。将保留集合的列。</value>
    
  </data>
  <data name="AboutClearCollect" xml:space="preserve">
    <value>删除集合中的所有记录。然后向同一集合添加另一组记录。</value>
    
  </data>
  <data name="ClearCollectionArg" xml:space="preserve">
    <value>数据源</value>
    
  </data>
  <data name="ClearCollectDataSourceArg" xml:space="preserve">
    <value>数据源</value>
    
  </data>
  <data name="ClearCollectRecordArg" xml:space="preserve">
    <value>记录</value>
    
  </data>
  <data name="AboutPatch" xml:space="preserve">
    <value>将更新应用到指定行并更改指定数据源中的行。返回更新的行。</value>
    
  </data>
  <data name="AboutPatchSingleRecord" xml:space="preserve">
    <value>采用包含主键和已更新值的单个记录，并更新指定数据源中的相应行。返回已更新的行。</value>
    
  </data>
  <data name="AboutPatchAggregate" xml:space="preserve">
    <value>采用多个行组成的表并以一对一的方式应用更新表中指定的更新。返回已更新行组成的表。</value>
    
  </data>
  <data name="AboutPatchAggregateSingleTable" xml:space="preserve">
    <value>采用包含主键和已更新字段的多个行组成的表，并将这些更新应用到数据源。返回已更新行组成的表。</value>
    
  </data>
  <data name="AboutPatchRecord" xml:space="preserve">
    <value>返回已应用更新的行。</value>
    
  </data>
  <data name="AboutPatch_source" xml:space="preserve">
    <value>要修补的数据源。</value>
  </data>
  <data name="AboutPatch_record" xml:space="preserve">
    <value>必须进行修补的记录。</value>
  </data>
  <data name="AboutPatch_update" xml:space="preserve">
    <value>需要对给定记录进行修补的更新。</value>
  </data>
  <data name="AboutPatch_rows" xml:space="preserve">
    <value>要修补的多个行组成的表。</value>
  </data>
  <data name="AboutPatch_updates" xml:space="preserve">
    <value>给定行需要修补的更新的表。</value>
  </data>
  <data name="PatchArg_Source" xml:space="preserve">
    <value>源</value>
    
  </data>
  <data name="PatchArg_Record" xml:space="preserve">
    <value>记录</value>
    
  </data>
  <data name="PatchArg_Update" xml:space="preserve">
    <value>更新</value>
    
  </data>
  <data name="PatchArg_Rows" xml:space="preserve">
    <value>行</value>
    
  </data>
  <data name="PatchArg_Updates" xml:space="preserve">
    <value>更新</value>
    
  </data>
  <data name="AboutRemove" xml:space="preserve">
    <value>从数据源中删除一条或多条特定记录</value>
    
  </data>
  <data name="RemoveDataSourceArg" xml:space="preserve">
    <value>数据源</value>
    
  </data>
  <data name="RemoveRecordsArg" xml:space="preserve">
    <value>删除记录</value>
    
  </data>
  <data name="ErrRemoveAllArg" xml:space="preserve">
    <value>如果提供，最后一个参数必须为 "RemoveFlags.All"。是否有拼写错误?</value>
    
  </data>
  <data name="NotificationType_Error_DisplayName" xml:space="preserve">
    <value>错误</value>
    
  </data>
  <data name="NotificationType_Warning_DisplayName" xml:space="preserve">
    <value>警告</value>
    
  </data>
  <data name="NotificationType_Success_DisplayName" xml:space="preserve">
    <value>成功</value>
    
  </data>
  <data name="NotificationType_Information_DisplayName" xml:space="preserve">
    <value>信息</value>
    
  </data>
  <data name="AboutIsError" xml:space="preserve">
    <value>返回给定的参数求值时是否发生了错误。</value>
    
  </data>
  <data name="IsErrorArg" xml:space="preserve">
    <value>值</value>
    
  </data>
  <data name="AboutIsError_value" xml:space="preserve">
    <value>要检查是否出错的值。</value>
    
  </data>
  <data name="ErrBadArityMinimum" xml:space="preserve">
    <value>参数数目无效: 收到 {0} 个，应为 {1} 个或更多个。</value>
    
  </data>
  <data name="ErrBadArityRange" xml:space="preserve">
    <value>参数数目无效: 收到 {0} 个，应为 {1}-{2} 个。</value>
    
  </data>
  <data name="ErrGeneralError" xml:space="preserve">
    <value>{0}</value>
    
  </data>
  <data name="ErrorResource_ErrOperandExpected_ShortMessage" xml:space="preserve">
    <value>预期接收一个操作数。公式或表达式预期接收一个有效操作数。例如，可将操作数 "2" 添加到表达式 "1 + _"，得到结果 "3"。或可将操作数“好”添加到表达式“您 _”，得到结果“您好”。</value>
    
  </data>
  <data name="ErrorResource_ErrOperandExpected_HowToFix_1" xml:space="preserve">
    <value>提供用于完成表达式的操作数值。请确保操作数的类型(文本、数字、日期或 true/false)满足表达式的要求。根据要求相应使用数字、文本等类型的操作数值。例如，“1 + "嗨"”是无效的，但“1 + 2”有效。</value>
    
  </data>
  <data name="ErrorResource_ErrBadToken_ShortMessage" xml:space="preserve">
    <value>意外字符。按意外的方式在公式中使用了字符。</value>
    
  </data>
  <data name="ErrorResource_ErrBadToken_LongMessage" xml:space="preserve">
    <value>例如，数字不得后跟字符 "\" (如 "32\")，而应接空格("32")，这样可确保其仅为数字 32 或为其他数字(例如 "323")。</value>
  </data>
  <data name="ErrorResource_ErrBadToken_HowToFix_1" xml:space="preserve">
    <value>删除或替换非预期字符。</value>
    
  </data>
  <data name="ErrorResource_ErrBadToken_Link_1" xml:space="preserve">
    <value>文章: 针对 Power Apps 的公式引用</value>
    
  </data>
  <data name="ErrorResource_UnexpectedCharacterToken_ShortMessage" xml:space="preserve">
    <value>在公式中的位置 '{1}' 处存在意外字符 '{0}'。</value>
    
  </data>
  <data name="ErrorResource_UnexpectedCharacterToken_LongMessage" xml:space="preserve">
    <value>例如，数字不得后跟字符 "\" (如 "32\")，而应接空格("32")，这样可确保其仅为数字 32 或为其他数字(例如 "323")。</value>
  </data>
  <data name="ErrorResource_UnexpectedCharacterToken_HowToFix_1" xml:space="preserve">
    <value>删除或替换意外字符。</value>
  </data>
  <data name="ErrorResource_UnexpectedCharacterToken_Link_1" xml:space="preserve">
    <value>文章: 针对 Power Apps 的公式引用</value>
    
  </data>
  <data name="ErrorResource_ErrMissingEndOfBlockComment_ShortMessage" xml:space="preserve">
    <value>缺少结束注释标识符。块注释没有结束注释标识符。</value>
    
  </data>
  <data name="ErrorResource_ErrMissingEndOfBlockComment_LongMessage" xml:space="preserve">
    <value>每个块注释都必须以 "/*" 开头且以 "*/" 结尾。如果块注释结尾错误，则注释后的所有代码都将成为注释的一部分。如果注释仅包含一行，可以 " //" 开头，而不用标识注释结尾。</value>
  </data>
  <data name="ErrorResource_ErrMissingEndOfBlockComment_HowToFix_1" xml:space="preserve">
    <value>在块注释的结尾添加 "*/"，或将其更改为一组行注释。</value>
    
  </data>
  <data name="ErrorResource_ErrMissingEndOfBlockComment_Link_1" xml:space="preserve">
    <value>文章: 针对 Power Apps 的公式引用</value>
    
  </data>
  <data name="ErrorResource_ErrExpectedFound_Ex_Fnd_ShortMessage" xml:space="preserve">
    <value>意外字符。应为 '{1}'，但公式包含的是 '{0}'。</value>
    
  </data>
  <data name="ErrorResource_ErrExpectedFound_Ex_Fnd_LongMessage" xml:space="preserve">
    <value>例如，如果公式中包含 "{{Val@ 7}}" 而非 "{{Val: 7}}" 时，会发生此错误。如果设置了变量，则语法会要求使用冒号而非 @ 符号。</value>
  </data>
  <data name="ErrorResource_ErrExpectedFound_Ex_Fnd_HowToFix_1" xml:space="preserve">
    <value>删除或使用预期字符替换非预期字符。</value>
    
  </data>
  <data name="ErrorResource_ErrExpectedFound_Ex_Fnd_Link_1" xml:space="preserve">
    <value>文章: 针对 Power Apps 的公式引用</value>
    
  </data>
  <data name="ErrorResource_ErrInvalidName_ShortMessage" xml:space="preserve">
    <value>名称无效。无法识别 '{0}'。</value>
    
  </data>
  <data name="ErrorResource_ErrInvalidName_LongMessage" xml:space="preserve">
    <value>当公式引用不再存在的内容(例如已删除的控件)时，最常出现此错误。</value>
  </data>
  <data name="ErrorResource_ErrInvalidName_HowToFix_1" xml:space="preserve">
    <value>删除或更正对无效名称的引用。</value>
    
  </data>
  <data name="ErrorResource_ErrInvalidName_Link_1" xml:space="preserve">
    <value>文章: 针对 Power Apps 的公式引用</value>
    
  </data>
  <data name="ErrorResource_ErrInvalidIdentifier_ShortMessage" xml:space="preserve">
    <value>名称无效。无法识别此标识符。</value>
    
  </data>
  <data name="ErrorResource_ErrInvalidIdentifier_LongMessage" xml:space="preserve">
    <value>当公式引用不再存在的内容(例如已删除的控件)时，最常出现此错误。</value>
  </data>
  <data name="ErrorResource_ErrInvalidIdentifier_HowToFix_1" xml:space="preserve">
    <value>删除或更正对无效名称的引用。</value>
    
  </data>
  <data name="ErrorResource_ErrInvalidIdentifier_Link_1" xml:space="preserve">
    <value>文章: 针对 Power Apps 的公式引用</value>
    
  </data>
  <data name="ErrorResource_ErrInvalidPropertyReference_ShortMessage" xml:space="preserve">
    <value>属性引用无效。</value>
    
  </data>
  <data name="ErrorResource_ErrInvalidPropertyReference_LongMessage" xml:space="preserve">
    <value>当公式引用具有无效语法的组件函数属性时，会出现此错误。(例如，引用 Component.CustomFunction 而不是 Component.CustomFunction())</value>
  </data>
  <data name="ErrorResource_ErrInvalidPropertyReference_HowToFix_1" xml:space="preserve">
    <value>请使用正确的语法来引用组件函数属性。例如，Component.CustomFunction()</value>
    
  </data>
  <data name="ErrorResource_ErrInvalidPropertyReference_Link_1" xml:space="preserve">
    <value>文章: 针对 PowerApps 的公式引用</value>
    
  </data>
  <data name="ErrorResource_ErrInvalidParentUse_ShortMessage" xml:space="preserve">
    <value>“父”引用无效。不能引用在此上下文中的父控件。</value>
    
  </data>
  <data name="ErrorResource_ErrInvalidParentUse_LongMessage" xml:space="preserve">
    <value>无法对没有父控件的控件使用父运算符。此运算符引用承载给定控件的控件，并使其所有属性可用。</value>
  </data>
  <data name="ErrorResource_ErrInvalidParentUse_HowToFix_1" xml:space="preserve">
    <value>删除 "Parent" 运算符。</value>
    
  </data>
  <data name="ErrorResource_ErrInvalidParentUse_Link_1" xml:space="preserve">
    <value>文章: 在 Power Apps 中添加和配置画布应用控件</value>
    
  </data>
  <data name="ErrorResource_ErrTooManyUps_ShortMessage" xml:space="preserve">
    <value>行范围嵌套太深。公式的行范围嵌套超过 63 个级别。</value>
    
  </data>
  <data name="ErrorResource_ErrTooManyUps_LongMessage" xml:space="preserve">
    <value>复杂性会随嵌套级别的增加而增加，因此 Power Apps 最多支持 63 个行范围嵌套级别。</value>
  </data>
  <data name="ErrorResource_ErrTooManyUps_HowToFix_1" xml:space="preserve">
    <value>请使用较少的嵌套级别重写公式。</value>
    
  </data>
  <data name="ErrorResource_ErrRuleNestedTooDeeply_ShortMessage" xml:space="preserve">
    <value>表达式嵌套太深。公式中的表达式嵌套级别超过 50 个。</value>
    
  </data>
  <data name="ErrorResource_ErrRuleNestedTooDeeply_LongMessage" xml:space="preserve">
    <value>Power Apps 支持最多 50 个级别的表达式嵌套。很难理解和维持这种级别数的表达式。</value>
  </data>
  <data name="ErrorResource_ErrRuleNestedTooDeeply_HowToFix_1" xml:space="preserve">
    <value>请使用较少的嵌套级别重写公式。</value>
    
  </data>
  <data name="ErrorResource_ErrOperatorExpected_ShortMessage" xml:space="preserve">
    <value>应为运算符。公式中的此处应为运算符，例如 +、* 或 &amp;。</value>
    
  </data>
  <data name="ErrorResource_ErrOperatorExpected_LongMessage" xml:space="preserve">
    <value>运算符将两个操作数连接在一起。如果将两个函数(操作数)放在一起，但它们之间没有运算符，则会发生此错误 - 例如 Len("我的文本")Len("我的文本")。</value>
  </data>
  <data name="ErrorResource_ErrOperatorExpected_HowToFix_1" xml:space="preserve">
    <value>编辑公式，使其在操作数之间包含一个运算符。</value>
    
  </data>
  <data name="ErrorResource_ErrOperatorExpected_Link_1" xml:space="preserve">
    <value>模块: 使用基本公式</value>
    
  </data>
  <data name="ErrorResource_ErrNumberExpected_ShortMessage" xml:space="preserve">
    <value>应为数字。公式中的此处应为数字。</value>
    
  </data>
  <data name="ErrorResource_ErrNumberExpected_LongMessage" xml:space="preserve">
    <value>如果使用的函数需要一个数字，但却提供图像之类的值，则会出现此错误。</value>
  </data>
  <data name="ErrorResource_ErrNumberExpected_HowToFix_1" xml:space="preserve">
    <value>编辑公式，使公式此时的计算结果为数字。</value>
    
  </data>
  <data name="ErrorResource_ErrNumberExpected_Link_1" xml:space="preserve">
    <value>文章: 针对 Power Apps 的公式引用</value>
    
  </data>
  <data name="ErrorResource_ErrBooleanExpected_ShortMessage" xml:space="preserve">
    <value>应为布尔值。公式中的此处应为布尔值(true/false)。</value>
    
  </data>
  <data name="ErrorResource_ErrBooleanExpected_LongMessage" xml:space="preserve">
    <value>布尔值在 Microsoft Excel 等应用程序中也称为 true/false 值。如果使用的函数需要布尔值，但却提供日期之类的值，则会发生此错误。</value>
  </data>
  <data name="ErrorResource_ErrBooleanExpected_HowToFix_1" xml:space="preserve">
    <value>编辑公式，使公式此时的计算结果为布尔。</value>
    
  </data>
  <data name="ErrorResource_ErrBooleanExpected_Link_1" xml:space="preserve">
    <value>文章: 针对 Power Apps 的公式引用</value>
    
  </data>
  <data name="ErrorResource_ErrColonExpected_ShortMessage" xml:space="preserve">
    <value>应为冒号。公式的此处应使用冒号(:)。</value>
    
  </data>
  <data name="ErrorResource_ErrColonExpected_LongMessage" xml:space="preserve">
    <value>冒号可将字段名(有时称为列名)与记录中的字段值隔开(例如 {Month:"1"}、{Month:"2"} …)。冒号还可将小时与分钟和秒隔开(例如 "3:04")。</value>
  </data>
  <data name="ErrorResource_ErrColonExpected_HowToFix_1" xml:space="preserve">
    <value>编辑公式，使其包含一个冒号。</value>
    
  </data>
  <data name="ErrorResource_ErrColonExpected_Link_1" xml:space="preserve">
    <value>文章: 在 Power Apps 中显示文本、日期和时间</value>
    
  </data>
  <data name="ErrorResource_ErrBehaviorPropertyExpected_ShortMessage" xml:space="preserve">
    <value>非行为属性中的行为函数。此属性不可用于更改应用中其他位置的值。</value>
    
  </data>
  <data name="ErrorResource_ErrBehaviorPropertyExpected_LongMessage" xml:space="preserve">
    <value>行为属性通过更改应用中其他位置的值来更改应用的状态。常见行为函数包括 "Navigate"、"Patch"、"UpdateContext" 和 "Collect"。基于行为的常见属性包括 "OnSelect"、"OnVisible" 和其他 "On..." 属性。</value>
  </data>
  <data name="ErrorResource_ErrBehaviorPropertyExpected_HowToFix_1" xml:space="preserve">
    <value>将行为函数移至基于行为的属性。</value>
    
  </data>
  <data name="ErrorResource_ErrBehaviorPropertyExpected_Link_1" xml:space="preserve">
    <value>文章: 了解 Power Apps 中画布应用的行为公式</value>
    
  </data>
  <data name="ErrorResource_ErrTestPropertyExpected_ShortMessage" xml:space="preserve">
    <value>非测试属性中的测试函数。无法使用此属性来调用仅用于测试的函数。</value>
    
  </data>
  <data name="ErrorResource_ErrTestPropertyExpected_LongMessage" xml:space="preserve">
    <value>测试函数是在测试应用时可用于模拟用户输入的函数。"SetProperty"、"SelectRow" 和 "Assert" 是常见的测试函数。它们只能在测试用例中使用。</value>
  </data>
  <data name="ErrorResource_ErrTestPropertyExpected_HowToFix_1" xml:space="preserve">
    <value>在测试用例(而非应用本身)中使用此函数。</value>
    
  </data>
  <data name="ErrorResource_ErrCannotCoerce_SourceType_TargetType_ShortMessage" xml:space="preserve">
    <value>无法转换此数据类型。Power Apps 不可将此 {0} 转换为 {1}。</value>
    
  </data>
  <data name="ErrorResource_ErrCannotCoerce_SourceType_TargetType_LongMessage" xml:space="preserve">
    <value>Power Apps 可将公式中部分类型的数据转换成其他类型，例如，它可将 "1" (字符串)转换为 1 (数字)。但是，它并不能将所有数据类型都转换成不同的数据类型，例如，它不能将图像转换成数字。</value>
  </data>
  <data name="ErrorResource_ErrCannotCoerce_SourceType_TargetType_HowToFix_1" xml:space="preserve">
    <value>请编辑公式，以便将存在问题的数据转换成预期类型。</value>
    
  </data>
  <data name="ErrorResource_ErrStringExpected_ShortMessage" xml:space="preserve">
    <value>应为文本。公式中的此处应使用文本。</value>
    
  </data>
  <data name="ErrorResource_ErrStringExpected_LongMessage" xml:space="preserve">
    <value>如果使用的函数需要文本(或字符串)参数，但却提供日期之类的值，则会发生此错误。</value>
  </data>
  <data name="ErrorResource_ErrStringExpected_HowToFix_1" xml:space="preserve">
    <value>编辑公式，使公式此时的计算结果为文本。</value>
    
  </data>
  <data name="ErrorResource_ErrStringExpected_Link_1" xml:space="preserve">
    <value>文章: 针对 Power Apps 的公式引用</value>
    
  </data>
  <data name="ErrorResource_ErrNumberOrStringExpected_ShortMessage" xml:space="preserve">
    <value>应为文本或数字。公式中的此处应为文本或数字。</value>
    
  </data>
  <data name="ErrorResource_ErrNumberOrStringExpected_LongMessage" xml:space="preserve">
    <value>如果使用的函数需要文本或数字，但却提供布尔(true/false)之类的值，则会出现此错误。</value>
  </data>
  <data name="ErrorResource_ErrNumberOrStringExpected_HowToFix_1" xml:space="preserve">
    <value>编辑公式，使公式此时的计算结果为文本或数字。</value>
    
  </data>
  <data name="ErrorResource_ErrNumberOrStringExpected_Link_1" xml:space="preserve">
    <value>文章: 针对 Power Apps 的公式引用</value>
    
  </data>
  <data name="ErrorResource_ErrClosingBracketExpected_ShortMessage" xml:space="preserve">
    <value>应为右方括号。公式的此处应使用右方括号(})。</value>
    
  </data>
  <data name="ErrorResource_ErrClosingBracketExpected_LongMessage" xml:space="preserve">
    <value>右方括号表示记录的结尾(例如 {Month:"1"}、{Month:"2"} …)。</value>
  </data>
  <data name="ErrorResource_ErrClosingBracketExpected_HowToFix_1" xml:space="preserve">
    <value>请编辑公式，使其包含一个方括号。</value>
    
  </data>
  <data name="ErrorResource_ErrEmptyInvalidIdentifier_ShortMessage" xml:space="preserve">
    <value>此标识符没有有效文本。</value>
    
  </data>
  <data name="ErrorResource_ErrEmptyInvalidIdentifier_HowToFix_1" xml:space="preserve">
    <value>请确保标识符具有文本。当标识符全部空白或全为空格时，会发生此错误。</value>
    
  </data>
  <data name="ErrUnOrderedTypeForComparison_Type" xml:space="preserve">
    <value>无法比较 {0} 类型的值。</value>
    
  </data>
  <data name="ErrorResource_ErrIncompatibleTypesForEquality_Left_Right_ShortMessage" xml:space="preserve">
    <value>比较的类型不兼容。无法比较这些类型: {0}、{1}。</value>
    
  </data>
  <data name="ErrorResource_ErrIncompatibleTypesForEquality_Left_Right_LongMessage" xml:space="preserve">
    <value>无法计算公式，因为在公式中比较的值类型不相同。</value>
  </data>
  <data name="ErrorResource_ErrIncompatibleTypesForEquality_Left_Right_HowToFix_1" xml:space="preserve">
    <value>可能需要将值转换为相同类型，例如将日期字符串(例如 "2018/12/31") 转换为日期值。</value>
    
  </data>
  <data name="ErrorResource_ErrIncompatibleTypesForEquality_Left_Right_HowToFix_2" xml:space="preserve">
    <value>若要比较多个记录或表，字段或列类型必须完全匹配。</value>
    
  </data>
  <data name="ErrorResource_ErrIncompatibleTypesForEquality_Left_Right_Link_1" xml:space="preserve">
    <value>模块: 使用基本公式</value>
    
  </data>
  <data name="ErrorResource_ErrIncompatibleTypesForEquality_Left_Right_Link_2" xml:space="preserve">
    <value>模块: 使用表和记录创作基本公式</value>
    
  </data>
  <data name="ErrorResource_ErrServiceFunctionUnknownOptionalParam_Name_ShortMessage" xml:space="preserve">
    <value>无参数。此函数没有名为 '{0}' 的可选参数。</value>
    
  </data>
  <data name="ErrorResource_ErrServiceFunctionUnknownOptionalParam_Name_HowToFix_1" xml:space="preserve">
    <value>解决方式: 删除或重命名公式中的参数。</value>
    
  </data>
  <data name="ErrorResource_ErrServiceFunctionUnknownOptionalParam_Name_Link_1" xml:space="preserve">
    <value>文章: 针对 Power Apps 的公式引用</value>
    
  </data>
  <data name="ErrorResource_ErrColumnTypeMismatch_ColName_ExpectedType_ActualType_ShortMessage" xml:space="preserve">
    <value>类型不兼容。正在更新的数据源中的 '{0}' 列应为 '{1}' 类型，但您使用的是 '{2}' 类型。</value>
    
  </data>
  <data name="ErrorResource_ErrColumnTypeMismatch_ColName_ExpectedType_ActualType_HowToFix_1" xml:space="preserve">
    <value>可能需要将值转换为相同类型，例如将日期字符串(例如 "2018/12/31") 转换为日期值或将字符串转换为数字。</value>
    
  </data>
  <data name="ErrorResource_ErrColumnTypeMismatch_ColName_ExpectedType_ActualType_Link_1" xml:space="preserve">
    <value>模块: 使用基本公式</value>
    
  </data>
  <data name="ErrorResource_ErrColumnTypeMismatch_ColName_ExpectedType_ActualType_Link_2" xml:space="preserve">
    <value>模块: 使用表和记录创作基本公式</value>
    
  </data>
  <data name="ErrorResource_ErrColumnMissing_ColName_ExpectedType_ShortMessage" xml:space="preserve">
    <value>缺少列。公式缺少类型为 '{1}' 的列 '{0}'。</value>
    
  </data>
  <data name="ErrorResource_ErrColumnMissing_ColName_ExpectedType_HowToFix_1" xml:space="preserve">
    <value>将列添加到公式。</value>
    
  </data>
  <data name="ErrorResource_ErrColumnMissing_ColName_ExpectedType_Link_1" xml:space="preserve">
    <value>文章: 针对 Power Apps 的公式引用</value>
    
  </data>
  <data name="ErrorResource_ErrRecordDoesNotAcceptThisType_ShortMessage" xml:space="preserve">
    <value>类型不兼容。您正在尝试放入记录中的项的类型与记录不兼容。</value>
    
  </data>
  <data name="ErrorResource_ErrTableDoesNotAcceptThisType_ShortMessage" xml:space="preserve">
    <value>类型不兼容。你正在尝试放入表格的项的类型与表不兼容。</value>
    
  </data>
  <data name="ErrorResource_ErrTableDoesNotAcceptThisType_HowToFix_1" xml:space="preserve">
    <value>确保要推送到表的项目类型与表兼容。可能需要转换项目类型，例如转换为记录。</value>
    
  </data>
  <data name="ErrorResource_ErrTableDoesNotAcceptThisType_Link_1" xml:space="preserve">
    <value>模块: 使用基本公式</value>
    
  </data>
  <data name="ErrorResource_ErrTableDoesNotAcceptThisType_Link_2" xml:space="preserve">
    <value>模块: 使用表和记录创作基本公式</value>
    
  </data>
  <data name="ErrorResource_ErrTypeError_ShortMessage" xml:space="preserve">
    <value>类型不兼容。由于类型错误，无法计算公式。</value>
    
  </data>
  <data name="ErrorResource_ErrTypeError_LongMessage" xml:space="preserve">
    <value>数据可能与所需的类型(文本、数字、日期、表、记录)不匹配。</value>
  </data>
  <data name="ErrorResource_ErrTypeError_HowToFix_1" xml:space="preserve">
    <value>检查公式中涉及的值的类型，并确保类型匹配。</value>
    
  </data>
  <data name="ErrorResource_ErrTypeError_Link_1" xml:space="preserve">
    <value>模块: 使用基本公式</value>
    
  </data>
  <data name="ErrorResource_ErrTypeError_Link_2" xml:space="preserve">
    <value>模块: 使用表和记录创作基本公式</value>
    
  </data>
  <data name="ErrorResource_ErrDateExpected_ShortMessage" xml:space="preserve">
    <value>应为日期。公式的此处应为日期。</value>
    
  </data>
  <data name="ErrorResource_ErrDateExpected_LongMessage" xml:space="preserve">
    <value>如果使用的函数需要日期，但却提供文本之类的值，则会出现此错误。</value>
  </data>
  <data name="ErrorResource_ErrDateExpected_HowToFix_1" xml:space="preserve">
    <value>编辑公式，使公式此时的计算结果为日期。</value>
    
  </data>
  <data name="ErrorResource_ErrDateExpected_Link_1" xml:space="preserve">
    <value>文章: 针对 Power Apps 的公式引用</value>
    
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_ShortMessage" xml:space="preserve">
    <value>委派警告。此公式的 "{0}" 部分可能在大型数据集上无法正常工作。</value>
    
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_LongMessage" xml:space="preserve">
    <value>数据源可能无法处理该公式且可能返回不完整的数据集。如果数据集不完整，应用程序可能不返回正确的结果或行为不正确。</value>
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_HowToFix_1" xml:space="preserve">
    <value>如果数据集超过 500 条记录的限制，但包含少于 2,000 条记录，请尝试重置限制。</value>
    
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_HowToFix_2" xml:space="preserve">
    <value>请尝试简化公式。</value>
    
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_HowToFix_3" xml:space="preserve">
    <value>尝试将数据移动到另一个数据源。</value>
    
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_Link_1" xml:space="preserve">
    <value>文章: 了解画布应用中的委派</value>
    
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_Link_2" xml:space="preserve">
    <value>博客: 针对委派的数据行限制</value>
    
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_OpNotSupportedByColumn_ShortMessage" xml:space="preserve">
    <value>委派警告。此公式中突出显示的部分可能在大型数据集的列 "{0}" 上无法正常工作。</value>
    
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_OpNotSupportedByColumn_LongMessage" xml:space="preserve">
    <value>数据源可能无法处理该公式且可能返回不完整的数据集。如果数据集不完整，应用程序可能不返回正确的结果或行为不正确。</value>
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_OpNotSupportedByColumn_HowToFix_1" xml:space="preserve">
    <value>如果数据集超过 500 条记录的限制，但包含少于 2,000 条记录，请尝试重置限制。</value>
    
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_OpNotSupportedByColumn_HowToFix_2" xml:space="preserve">
    <value>请尝试简化公式。</value>
    
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_OpNotSupportedByColumn_HowToFix_3" xml:space="preserve">
    <value>尝试将数据移动到另一个数据源。</value>
    
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_OpNotSupportedByColumn_Link_1" xml:space="preserve">
    <value>文章: 了解画布应用中的委派</value>
    
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_OpNotSupportedByColumn_Link_2" xml:space="preserve">
    <value>博客: 针对委派的数据行限制</value>
    
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_InOpRhs_ShortMessage" xml:space="preserve">
    <value>委派警告。此公式中突出显示的部分可能在大型数据集上无法正常工作。</value>
    
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_InOpRhs_LongMessage" xml:space="preserve">
    <value>"in" 运算符右侧应为来自正确数据源的列。数据源可能无法处理该公式并可能返回不完整的数据集。如果数据集不完整，应用程序可能不会返回正确的结果或行为不正确。</value>
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_InOpRhs_HowToFix_1" xml:space="preserve">
    <value>将 "in" 运算符右侧的项更改为来自正确数据源的列。</value>
    
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_InOpRhs_HowToFix_2" xml:space="preserve">
    <value>如果数据集超过 500 条记录的限制，但包含少于 2,000 条记录，请尝试重置限制。</value>
    
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_InOpRhs_HowToFix_3" xml:space="preserve">
    <value>请尝试简化公式。</value>
    
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_InOpRhs_HowToFix_4" xml:space="preserve">
    <value>尝试将数据移动到另一个数据源。</value>
    
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_InOpRhs_Link_1" xml:space="preserve">
    <value>文章: 了解画布应用中的委派</value>
    
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_InOpRhs_Link_2" xml:space="preserve">
    <value>博客: 针对委派的数据行限制</value>
    
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_InOpInvalidColumn_ShortMessage" xml:space="preserve">
    <value>此公式中突出显示的部分可能在大型数据集上无法正常工作。</value>
    
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_InOpInvalidColumn_LongMessage" xml:space="preserve">
    <value> "in" 运算符右侧不是来自正确数据源的列。数据源可能无法处理该公式并可能返回不完整的数据集。如果数据集不完整，应用程序可能不会返回正确的结果或行为不正确。
      </value>
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_InOpInvalidColumn_HowToFix_1" xml:space="preserve">
    <value>将 "in" 运算符右侧的项更改为来自正确数据源的列。</value>
    
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_InOpInvalidColumn_HowToFix_2" xml:space="preserve">
    <value>如果数据集超过 500 条记录的限制，但包含少于 2,000 条记录，请尝试重置限制。
      </value>
    
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_InOpInvalidColumn_HowToFix_3" xml:space="preserve">
    <value>请尝试简化公式。</value>
    
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_InOpInvalidColumn_HowToFix_4" xml:space="preserve">
    <value>尝试将数据移动到另一个数据源。</value>
    
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_InOpInvalidColumn_Link_1" xml:space="preserve">
    <value>文章: 了解画布应用中的委派</value>
    
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_InOpInvalidColumn_Link_2" xml:space="preserve">
    <value>博客: 针对委派的数据行限制</value>
    
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_OpNotSupportedByService_ShortMessage" xml:space="preserve">
    <value>委派警告。此公式突出显示的部分可能无法正确处理大型数据集。此连接器不支持“{0}”操作。</value>
    
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_OpNotSupportedByService_LongMessage" xml:space="preserve">
    <value>数据源可能无法处理该公式且可能返回不完整的数据集。如果数据集不完整，应用程序可能不返回正确的结果或行为不正确。</value>
    
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_OpNotSupportedByService_HowToFix_1" xml:space="preserve">
    <value>如果数据集超过 500 条记录的限制，但包含少于 2,000 条记录，请尝试重置限制。</value>
    
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_OpNotSupportedByService_HowToFix_2" xml:space="preserve">
    <value>请尝试简化公式。</value>
    
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_OpNotSupportedByService_HowToFix_3" xml:space="preserve">
    <value>尝试将数据移动到另一个数据源。</value>
    
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_OpNotSupportedByService_Link_1" xml:space="preserve">
    <value>文章: 了解画布应用中的委派</value>
    
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_OpNotSupportedByService_Link_2" xml:space="preserve">
    <value>博客: 针对委派的数据行限制</value>
    
  </data>
  <data name="ErrorResource_ErrOnlyOneViewExpected_ShortMessage" xml:space="preserve">
    <value>应只有一个视图。公式中此时应只有一个视图。</value>
    
  </data>
  <data name="ErrorResource_ErrOnlyOneViewExpected_HowToFix_1" xml:space="preserve">
    <value>编辑公式，使公式中此时只有一个视图。</value>
    
  </data>
  <data name="ErrorResource_ErrViewFromCurrentTableExpected_ShortMessage" xml:space="preserve">
    <value>应具有来自数据源 {0} 的视图。</value>
    
  </data>
  <data name="ErrorResource_ErrViewFromCurrentTableExpected_HowToFix_1" xml:space="preserve">
    <value>编辑公式，使其具有来自数据源 {0} 的视图。</value>
    
  </data>
  <data name="ErrorResource_ErrInvalidControlReference_ShortMessage" xml:space="preserve">
    <value>此控件引用无法用于此属性</value>
    
  </data>
  <data name="ErrorResource_ErrInvalidControlReference_HowToFix_1" xml:space="preserve">
    <value>此属性仅支持引用全局变量、集合以及一些控件和屏幕属性。有关受支持的控件属性列表，请单击链接。</value>
    
  </data>
  <data name="ErrorResource_ErrInvalidControlReference_Link_1" xml:space="preserve">
    <value>引用: 画布应用的 ConfirmExit</value>
    
  </data>
  <data name="ErrorResource_ErrInvalidStringInterpolation_ShortMessage" xml:space="preserve">
    <value>出现在内插字符串中的表达式的计算结果必须为文本值或兼容类型。</value>
    
  </data>
  <data name="ErrorResource_ErrInvalidStringInterpolation_HowToFix_1" xml:space="preserve">
    <value>检查内插字符串中表达式的类型。</value>
    
  </data>
  <data name="ErrorResource_ErrEmptyIsland_ShortMessage" xml:space="preserve">
    <value>空表达式不能出现在内插字符串中。</value>
    
  </data>
  <data name="ErrorResource_ErrEmptyIsland_HowToFix_1" xml:space="preserve">
    <value>检查内插字符串内是否有空表达式。</value>
    
  </data>
  <data name="ErrorResource_ErrAsNotInContext_ShortMessage" xml:space="preserve">
    <value>此上下文中不允许使用 As</value>
    
  </data>
  <data name="ErrorResource_ErrUntypedObjectScope_ShortMessage" xml:space="preserve">
    <value>非类型化对象不能用作支持记录范围的函数的第一个参数。</value>
    
  </data>
  <data name="ErrNamedFormula_MissingSemicolon" xml:space="preserve">
    <value>命名公式必须以分号结束。</value>
    
  </data>
  <data name="ErrNamedFormula_MissingValue" xml:space="preserve">
    <value>指定的公式必须为表达式。</value>
    
  </data>
  <data name="ErrUDF_MissingFunctionBody" xml:space="preserve">
    <value>用户定义的函数必须有正文。</value>
    
  </data>
  <data name="ErrUDF_FunctionAlreadyDefined" xml:space="preserve">
    <value>函数 {0} 已定义。</value>
    
  </data>
  <data name="ErrUDF_DuplicateParameter" xml:space="preserve">
    <value>参数 {0} 重复。</value>
    
  </data>
  <data name="ErrUDF_UnknownType" xml:space="preserve">
    <value>未知类型 {0}。</value>
    
  </data>
  <data name="ErrUDF_ReturnTypeDoesNotMatch" xml:space="preserve">
    <value>所说明的函数返回类型与函数正文的返回类型不匹配。</value>
    
  </data>
  <data name="ErrUDF_MissingReturnType" xml:space="preserve">
    <value>缺少函数返回类型，例如 "FindMonth( d:Text ):Number = Month( DateParse( d ));" 中的 ":Number"</value>
    
  </data>
  <data name="ErrUDF_MissingParamType" xml:space="preserve">
    <value>缺少函数参数类型，例如 "FindMonth( d:Text ):Number = Month( DateParse( d ))" 中的 ":Text"</value>
    
  </data>
  <data name="ErrNamedFormula_AlreadyDefined" xml:space="preserve">
    <value>NamedFormula '{0}' 已存在。</value>
  </data>
  <data name="ErrorResource_NameConflict" xml:space="preserve">
    <value>无法创建名为 '{1}' 的 {0}，因为该名称已用于 {2}。</value>
    
  </data>
  <data name="ErrNeedValidVariableName_Arg" xml:space="preserve">
    <value>“{0}”的第一个参数应为有效的变量名，且不能与任何现有控件、屏幕、集合或数据源名称冲突。找到的类型为“{1}”</value>
    
  </data>
  <data name="AboutSet" xml:space="preserve">
    <value>创建和设置全局变量。</value>
    
  </data>
  <data name="SetArg2" xml:space="preserve">
    <value>值</value>
    
  </data>
  <data name="AboutDec2Hex" xml:space="preserve">
    <value>将十进制数转换为十六进制</value>
    
  </data>
  <data name="Dec2HexArg1" xml:space="preserve">
    <value>数字</value>
  </data>
  <data name="AboutDec2Hex_number" xml:space="preserve">
    <value>要转换为十六进制字符串的数字小数值。</value>
    
  </data>
  <data name="Dec2HexArg2" xml:space="preserve">
    <value>位数</value>
  </data>
  <data name="AboutDec2Hex_places" xml:space="preserve">
    <value>用于向十六进制字符串添加填充的数值。</value>
    
  </data>
  <data name="AboutDec2HexT" xml:space="preserve">
    <value>将十进制数列转换为十六进制</value>
    
  </data>
  <data name="Dec2HexTArg1" xml:space="preserve">
    <value>表</value>
  </data>
  <data name="Dec2HexTArg2" xml:space="preserve">
    <value>位数</value>
  </data>
  <data name="AboutDec2HexT_places" xml:space="preserve">
    <value>用于向十六进制字符串添加填充的数值或值数组。</value>
    
  </data>
  <data name="AboutDec2Hex_table" xml:space="preserve">
    <value>要转换为十六进制的数字小数值列。</value>
    
  </data>
  <data name="AboutHex2Dec" xml:space="preserve">
    <value>将十六进制数字转换为小数</value>
    
  </data>
  <data name="Hex2DecArg1" xml:space="preserve">
    <value>数字</value>
  </data>
  <data name="AboutHex2Dec_number" xml:space="preserve">
    <value>十六进制字符串转换为小数。</value>
    
  </data>
  <data name="AboutHex2DecT" xml:space="preserve">
    <value>将十六进制数字列转换为小数</value>
    
  </data>
  <data name="Hex2DecTArg1" xml:space="preserve">
    <value>表</value>
  </data>
  <data name="AboutHex2Dec_table" xml:space="preserve">
    <value>要转换为小数的十六进制字符串列。</value>
    
  </data>
  <data name="ErrDeprecated" xml:space="preserve">
    <value>此功能已被弃用并且不再受支持。</value>
    
  </data>
  <data name="ErrUnsupportedFunction" xml:space="preserve">
    <value>在 {1} 命名空间中不支持 {0} 函数。</value>
    
  </data>
  <data name="WarnDeferredType" xml:space="preserve">
    <value>警告: 提供了延迟类型。</value>
    
  </data>
  <data name="ErrExpectedIdentifierArg_Name" xml:space="preserve">
    <value>预期标识符名称</value>
    
  </data>
  <data name="ErrInvalidFunction" xml:space="preserve">
    <value>此函数不明确，其中包含同一参数的 Lambda 表达式和列标识符。</value>
    
  </data>
  <data name="OptionSetOptionNotSupported" xml:space="preserve">
    <value>选项 {0} 的值不是预期类型 {1}。</value>
    
  </data>
  <data name="AboutOptionSetInfo" xml:space="preserve">
    <value>返回给定选项集值的逻辑名称。</value>
    
  </data>
  <data name="AboutOptionSetInfoArg1" xml:space="preserve">
    <value>选项</value>
  </data>
  <data name="AboutOptionSetInfo_option" xml:space="preserve">
    <value>将返回其逻辑名称的选项集值。</value>
  </data>
  <data name="AboutLanguage" xml:space="preserve">
    <value>获取运行时设置的默认区域设置。</value>
    
  </data>
  <data name="AboutEncodeUrl" xml:space="preserve">
    <value>对 URL 字符串进行编码，将某些非字母数字字符替换为 % 和一个十六进制数字。</value>
    
  </data>
  <data name="EncodeUrlArg1" xml:space="preserve">
    <value>URL</value>
    
  </data>
  <data name="AboutEncodeUrl_url" xml:space="preserve">
    <value>要编码的 URL。</value>
  </data>
  <data name="AboutEncodeHTML" xml:space="preserve">
    <value>将文本转换为 HTML 编码的文本。</value>
    
  </data>
  <data name="EncodeHTMLArg1" xml:space="preserve">
    <value>值</value>
    
  </data>
  <data name="AboutEncodeHTML_value" xml:space="preserve">
    <value>要编码的文本。</value>
  </data>
  <data name="ErrUnimplementedFunction" xml:space="preserve">
    <value>'{0}' 是一个可识别但不支持的函数。</value>
    
  </data>
  <data name="InvalidCast" xml:space="preserve">
    <value>类型转换失败，因为给定的值为 '{0}' 类型，但应为 '{1}' 类型。</value>
    
  </data>
  <data name="WrnSortByColumnsNonConstantColumnName" xml:space="preserve">
    <value>表达式 '{0}' 可能代表不属于数据源或尚未下载的列。请考虑直接改用列名称。</value>
    
  </data>
  <data name="WrnDelegationTableNotSupported" xml:space="preserve">
    <value>如果表 '{0}' 超过 {1} 行，则此操作对该表可能不起作用。</value>
    
  </data>
  <data name="WrnDelegationPredicate" xml:space="preserve">
    <value>此谓词将永远为 true。您是要使用 ThisRecord 还是 [@]?</value>
    
  </data>
  <data name="WrnDelegationOnlyPrimaryKeyField" xml:space="preserve">
    <value>无法委托 {0}: 仅支持委托查找主键字段 '{1}'。</value>
    
  </data>
  <data name="WrnDelegationRefersThisRecord" xml:space="preserve">
    <value>无法委托 {0}: 表达式将比较多个字段。</value>
    
  </data>
  <data name="WrnDelegationBehaviorFunction" xml:space="preserve">
    <value>无法委托 {0}: 包含行为函数 '{1}'。</value>
    
  </data>
  <data name="AboutIsMatch" xml:space="preserve">
    <value>确定提供的文本是否与所提供的文本格式匹配。</value>
    
  </data>
  <data name="AboutIsMatch_text" xml:space="preserve">
    <value>要对格式进行比较的文本。</value>
  </data>
  <data name="AboutIsMatch_format" xml:space="preserve">
    <value>要针对其来检查文本的格式。可能是一个 TextFormat 枚举值或正则表达式。</value>
  </data>
  <data name="AboutIsMatch_extent" xml:space="preserve">
    <value>这将确定我们要匹配文本的哪一部分。可能是一个 MatchOptions 枚举值。</value>
    
  </data>
  <data name="IsMatchArg1" xml:space="preserve">
    <value>文本</value>
    
  </data>
  <data name="IsMatchArg2" xml:space="preserve">
    <value>格式</value>
    
  </data>
  <data name="IsMatchArg3" xml:space="preserve">
    <value>程度</value>
    
  </data>
  <data name="AboutMatch" xml:space="preserve">
    <value>在提供的文本中搜索指定的正则表达式，从中返回第一个匹配项。</value>
    
  </data>
  <data name="AboutMatchAll" xml:space="preserve">
    <value>在提供的文本中搜索指定的正则表达式，从中返回所有匹配项。</value>
    
  </data>
  <data name="AboutMatch_text" xml:space="preserve">
    <value>要根据正则表达式进行搜索的文本。</value>
    
  </data>
  <data name="AboutMatch_regular_expression" xml:space="preserve">
    <value>用于检查文本的正则表达式。它可以包含在成功匹配的情况下将返回的捕获(括号之间的值)。</value>
    
  </data>
  <data name="AboutMatch_options" xml:space="preserve">
    <value>这将确定我们要匹配文本的哪一部分。可能是一个 MatchOptions 枚举值。</value>
    
  </data>
  <data name="AboutMatchAll_text" xml:space="preserve">
    <value>要根据正则表达式进行搜索的文本。</value>
    
  </data>
  <data name="AboutMatchAll_regular_expression" xml:space="preserve">
    <value>用于检查文本的正则表达式。它可以包含在成功匹配的情况下将返回的捕获(括号之间的值)。</value>
    
  </data>
  <data name="AboutMatchAll_options" xml:space="preserve">
    <value>这将确定我们要匹配文本的哪一部分。可能是一个 MatchOptions 枚举值。</value>
    
  </data>
  <data name="MatchArg1" xml:space="preserve">
    <value>文本</value>
    
  </data>
  <data name="MatchArg2" xml:space="preserve">
    <value>正则表达式</value>
    
  </data>
  <data name="MatchArg3" xml:space="preserve">
    <value>选项</value>
    
  </data>
  <data name="AboutRefresh" xml:space="preserve">
    <value>刷新指定数据源。</value>
    
  </data>
  <data name="RefreshArg1" xml:space="preserve">
    <value>已连接数据源</value>
    
  </data>
  <data name="ErrNeedAgg" xml:space="preserve">
    <value>需要记录或表值。</value>
    
  </data>
  <data name="AboutRefresh_connected_data_source" xml:space="preserve">
    <value>要刷新的已连接数据源。</value>
  </data>
  <data name="ErrDataSourceCannotBeRefreshed" xml:space="preserve">
    <value>只能刷新托管连接。</value>
    
  </data>
  <data name="ErrorResource_ErrInvalidRegEx_ShortMessage" xml:space="preserve">
    <value>正则表达式无效。</value>
    
  </data>
  <data name="ErrorResource_ErrVariableRegEx_ShortMessage" xml:space="preserve">
    <value>正则表达式必须是常数值。</value>
    
  </data>
  <data name="ErrorResource_MutationFunctionCannotBeUsedWithImmutableValue" xml:space="preserve">
    <value>无法更改传递给 '{0}' 函数的值。</value>
    
  </data>
  <data name="InfoRegExCaptureNameHidesPredefinedFullMatchField" xml:space="preserve">
    <value>捕获名称“{0}”将隐藏要返回正则表达式完整匹配的预定义属性。如果要使用该命名属性来提取指定文本中的完整匹配项，请对其重命名。</value>
    
  </data>
  <data name="InfoRegExCaptureNameHidesPredefinedSubMatchesField" xml:space="preserve">
    <value>捕获名称“{0}”将隐藏要返回正则表达式中组匹配项的预定义属性。如果要使用该命名属性来提取指定文本中的所有子匹配项，请对其重命名。</value>
    
  </data>
  <data name="InfoRegExCaptureNameHidesPredefinedStartMatchField" xml:space="preserve">
    <value>捕获名称“{0}”将隐藏要返回正则表达式匹配项位置的预定义属性。如果要使用该命名属性来提取指定文本中完整匹配项的位置，请对其重命名。</value>
    
  </data>
  <data name="AboutPlainText" xml:space="preserve">
    <value>删除所有格式并返回纯文本值。</value>
    
  </data>
  <data name="PlainTextArg1" xml:space="preserve">
    <value>文本</value>
    
  </data>
  <data name="AboutPlainText_text" xml:space="preserve">
    <value>要移除其 HTML 和 XML 标记的文本。</value>
  </data>
  <data name="ErrFilterFunctionBahaviorAsPredicate" xml:space="preserve">
    <value>筛选器函数不允许将行为函数作为谓词。</value>
    
  </data>
  <data name="ErrFilterFunction_OnlyTwoArgs" xml:space="preserve">
    <value>使用 And 运算符将多个谓词组合到第二个参数中。</value>
    
  </data>
  <data name="ErrSetVariableWithRelationshipNotAllowTable" xml:space="preserve">
    <value>无法复制此表。请改为使用 ForAll 函数和 {...} 表示法创建内联表来复制所需的各个列。</value>
  </data>
  <data name="ErrSetVariableWithRelationshipNotAllowRecord" xml:space="preserve">
    <value>无法复制此记录。请改为使用 {...} 表示法创建内联记录来复制所需的各个字段。</value>
  </data>
  <data name="ErrNotSupportedFormat_Func" xml:space="preserve">
    <value>'{0}' 函数的第二个参数仅支持数字和日期/时间值。</value>
    
  </data>
  <data name="WrnSetExpandableType" xml:space="preserve">
    <value>使用在线数据源值(表或记录)设置变量可能会导致对服务器提出多个请求。这很快将被阻止。</value>
    
  </data>
  <data name="ErrTypeLiteral_InvalidTypeDefinition" xml:space="preserve">
    <value>类型文字声明无效</value>
    
  </data>
  <data name="ErrExpectedRVExtraFields" xml:space="preserve">
    <value>源记录类型与目标记录类型不匹配。给定类型包含额外字段: {0}。</value>
    
  </data>
  <data name="ErrExpectedRVMissingFields" xml:space="preserve">
    <value>源记录类型与目标记录类型不匹配。给定类型缺少字段: {0}。</value>
    
  </data>
  <data name="ErrExpectedRVFieldNotFound" xml:space="preserve">
    <value>源记录类型与目标记录类型不匹配。找不到字段名称: {0}。</value>
    
  </data>
  <data name="ErrExpectedRVFieldTypeMismatch" xml:space="preserve">
    <value>源记录类型与目标记录类型不匹配。字段名称: {0} 需要 {1}；找到 {2}。</value>
    
  </data>
  <data name="ErrExpectedRVCannotCoerceType" xml:space="preserve">
    <value>给定 {0} 类型不能强制转换为源类型 {1}。</value>
    
  </data>
  <data name="ErrExpectedRVTypeMismatch" xml:space="preserve">
    <value>源类型与目标类型不匹配。需要 {0}；找到 {1}。</value>
    
  </data>
  <data name="AboutJSON" xml:space="preserve">
    <value>生成表、记录或值的 JSON 文本字符串。</value>
    
  </data>
  <data name="JSONArg1" xml:space="preserve">
    <value>数据</value>
    
  </data>
  <data name="AboutJSON_data" xml:space="preserve">
    <value>要转换为 JSON 的数据结构。表、记录和基元值受支持，可任意嵌套。</value>
    
  </data>
  <data name="JSONArg2" xml:space="preserve">
    <value>格式</value>
    
  </data>
  <data name="AboutJSON_format" xml:space="preserve">
    <value>JSON 转换中使用的格式。该值将是 JSONFormat 枚举的成员。</value>
    
  </data>
  <data name="AboutTrace" xml:space="preserve">
    <value>启用后将信息记录到 Application Insights，并记录到将在测试结果中显示的 Test Studio 会话中。</value>
    
  </data>
  <data name="TraceArg1" xml:space="preserve">
    <value>消息</value>
    
  </data>
  <data name="TraceArg2" xml:space="preserve">
    <value>严重性</value>
    
  </data>
  <data name="TraceArg3" xml:space="preserve">
    <value>自定义记录</value>
    
  </data>
  <data name="TraceArg4" xml:space="preserve">
    <value>跟踪选项</value>
    
  </data>
  <data name="AboutTrace_message" xml:space="preserve">
    <value>要跟踪的信息。</value>
    
  </data>
  <data name="AboutTrace_severity" xml:space="preserve">
    <value>要跟踪到 Application Insights 的严重性级别。</value>
    
  </data>
  <data name="AboutTrace_custom_record" xml:space="preserve">
    <value>包含将跟踪到 Application Insights 的自定义数据的记录。</value>
    
  </data>
  <data name="AboutTrace_trace_options" xml:space="preserve">
    <value>Trace 功能的其他选项。</value>
    
  </data>
  <data name="ErrFunctionArg2ParamMustBeConstant" xml:space="preserve">
    <value>{0} 函数的“{1}”参数必须是常数值。</value>
    
  </data>
  <data name="ErrJSONArg2IncompatibleOptions" xml:space="preserve">
    <value>JSONFormat 值“{0}”和“{1}”不能同时使用。</value>
    
  </data>
  <data name="ErrJSONArg2UnsupportedOption" xml:space="preserve">
    <value>不支持将值 '{0}' 作为 JSON 函数中的选项。</value>
    
  </data>
  <data name="ErrJSONArg1ContainsUnsupportedMedia" xml:space="preserve">
    <value>传递给 JSON 函数的值包含媒体，且默认不受支持。要允许媒体值的 JSON 序列化，请确保使用 "format" 参数中的 IncludeBinaryData 选项。</value>
    
  </data>
  <data name="ErrJSONArg1UnsupportedType" xml:space="preserve">
    <value>JSON 函数无法序列化“{0}”类型的对象。</value>
    
  </data>
  <data name="ErrJSONArg1UnsupportedNestedType" xml:space="preserve">
    <value>JSON 函数无法使用类型“{1}”的嵌套属性“{0}”来序列化表/对象。</value>
    
  </data>
  <data name="ErrJSONArg1UnsupportedTypeWithNonBehavioral" xml:space="preserve">
    <value>JSON 函数无法对非行为表达式中的二进制数据进行序列化。</value>
  </data>
  <data name="ErrTraceInvalidCustomRecordType" xml:space="preserve">
    <value>参数 {0} 包含类型为 {1} 的属性，而该属性不受支持。</value>
    
  </data>
  <data name="ErrRecordContainsInvalidFields_Arg" xml:space="preserve">
    <value>指定列为只读状态，无法修改: {0}。</value>
    
  </data>
  <data name="AboutSearch" xml:space="preserve">
    <value>搜索 "source" 中的文本。返回文本所在的行。以区分大小写的方式执行比较。</value>
    
  </data>
  <data name="AboutSearch_source" xml:space="preserve">
    <value>要搜索的表。</value>
  </data>
  <data name="AboutSearch_text" xml:space="preserve">
    <value>搜索文本。</value>
  </data>
  <data name="AboutSearch_column" xml:space="preserve">
    <value>要搜索的列。</value>
  </data>
  <data name="SearchArg1" xml:space="preserve">
    <value>源</value>
    
  </data>
  <data name="SearchArg2" xml:space="preserve">
    <value>文本</value>
    
  </data>
  <data name="SearchArg3" xml:space="preserve">
    <value>列</value>
    
  </data>
  <data name="ErrSearchWrongType" xml:space="preserve">
    <value>列类型错误。需要文本类型。</value>
    
  </data>
  <data name="ErrSearchWrongTableType" xml:space="preserve">
    <value>表不包含文本类型的任何列。</value>
    
  </data>
  <data name="ErrDeprecatedDotUseShowColumns" xml:space="preserve">
    <value>已弃用 "."。请改用 "ShowColumns" 函数。</value>
    
  </data>
  <data name="IntellisenseAiDisclaimer" xml:space="preserve">
    <value>**免责声明:** AI 生成的内容可能有错误。使用前请确保其准确且适当。[查看条款](https://go.microsoft.com/fwlink/?linkid=2225491)</value>
    
  </data>
  <data name="AboutUniChar" xml:space="preserve">
    <value>返回给定数值引用的 Unicode 字符。</value>
    
  </data>
  <data name="AboutUniChar_number" xml:space="preserve">
    <value>要转换为 Unicode 字符的数值。</value>
  </data>
  <data name="UniCharArg1" xml:space="preserve">
    <value>数字</value>
    
  </data>
  <data name="AboutUniCharT" xml:space="preserve">
    <value>将数值表转换为 Unicode 字符表。</value>
    
  </data>
  <data name="UniCharTArg1" xml:space="preserve">
    <value>数字组成的列</value>
    
  </data>
  <data name="AboutUniChar_column_of_numbers" xml:space="preserve">
    <value>要转换为 Unicode 字符的数值表列。</value>
  </data>
  <data name="ErrOnlyPartialAttribute" xml:space="preserve">
    <value>不支持的属性类型</value>
    
  </data>
  <data name="ErrOperationDoesntMatch" xml:space="preserve">
    <value>匹配命名公式中的所有 Partial 运算符都必须相同。</value>
    
  </data>
  <data name="ErrUnknownPartialOp" xml:space="preserve">
    <value>未知 Partial 运算符。</value>
    
  </data>
  <data name="ErrTruncatedArgWarning" xml:space="preserve">
    <value>委派警告。对于大型数据集，此参数 '{0}' 的结果在传递给 '{1}' 函数之前可能会被截断。</value>
    
  </data>
</root>