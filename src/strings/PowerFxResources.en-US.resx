<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ListItemSingleQuotedFormat" xml:space="preserve">
    <value>'{0}'</value>
    <comment>The format for single quoting a list item.</comment>
  </data>
  <data name="AboutIf" xml:space="preserve">
    <value>Checks if any one of the specified conditions are met and returns the corresponding value. If none of the conditions are met, the function returns the specified default value.</value>
    <comment>Description of 'If' function.</comment>
  </data>
  <data name="IfArgCond" xml:space="preserve">
    <value>logical_test</value>
    <comment>function_parameter - First parameter for the If function, the condition that will be evaluated. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="IfArgTrueValue" xml:space="preserve">
    <value>true_value</value>
    <comment>function_parameter - Second parameter for the If function, an expression which will be evaluated if the first parameter is true. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="IfArgElseValue" xml:space="preserve">
    <value>else_value</value>
    <comment>function_parameter - Third parameter for the If function, an expression which will be evaluated if the first parameter is false. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="AboutIf_logical_test" xml:space="preserve">
    <value>A condition that results in a boolean value.</value>
  </data>
  <data name="AboutIf_true_value" xml:space="preserve">
    <value>An expression that provides the result of If when the condition is true.</value>
    <comment>{Locked=If}</comment>
  </data>
  <data name="AboutIf_else_value" xml:space="preserve">
    <value>An expression that provides the result of If when all specified conditions are false.</value>
    <comment>{Locked=If}</comment>
  </data>
  <data name="AboutSwitch" xml:space="preserve">
    <value>Matches the result of a formula with a series of values. When a match is found, a corresponding formula is evaluated and returned. If no matches are found, the last default formula is evaluated and returned.</value>
    <comment>Description of 'Switch' function.</comment>
  </data>
  <data name="SwitchExpression" xml:space="preserve">
    <value>switch_value</value>
    <comment>function_parameter - First parameter for the Switch function, the value to compare against each 'match_value' parameter passed to the function. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="SwitchDefaultReturn" xml:space="preserve">
    <value>default_result</value>
    <comment>function_parameter - Last optional parameter for the Switch function, formula evaluated and returned when there is no match found. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="SwitchCaseExpr" xml:space="preserve">
    <value>match_value</value>
    <comment>function_parameter - match_value parameter for the Switch function, the value that will be matched with switch_value. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="SwitchCaseArg" xml:space="preserve">
    <value>match_result</value>
    <comment>function_parameter - result statement to return when match is found. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="AboutSwitch_switch_value" xml:space="preserve">
    <value>Value to compare against each match_value.</value>
    <comment>The term 'match_value' should be translated the same way as the resource with the key 'SwitchCaseExpr'</comment>
  </data>
  <data name="AboutSwitch_match_value" xml:space="preserve">
    <value>Value to match with switch_value.</value>
    <comment>The term 'switch_value' should be translated the same way as the resource with the key 'SwitchExpression'</comment>
  </data>
  <data name="AboutSwitch_match_result" xml:space="preserve">
    <value>Formula to evaluate and return if match is found.</value>
  </data>
  <data name="AboutSwitch_default_result" xml:space="preserve">
    <value>Formula to evaluate and return if no matches are found.</value>
  </data>
  <data name="AboutAnd" xml:space="preserve">
    <value>Checks whether all arguments are true, and returns true if all arguments are true.</value>
    <comment>Description of 'And' function.</comment>
  </data>
  <data name="AboutOr" xml:space="preserve">
    <value>Checks whether any of the arguments are true, and returns true or false. Returns false only if all arguments are false.</value>
    <comment>Description of 'Or' function.</comment>
  </data>
  <data name="AboutNot" xml:space="preserve">
    <value>Changes false to true and true to false.</value>
    <comment>Description of 'Not' function.</comment>
  </data>
  <data name="LogicalFuncParam" xml:space="preserve">
    <value>logical</value>
    <comment>function_parameter - Parameter for logical functions (And, Or, Not), an expression with a true/false value.</comment>
  </data>
  <data name="AboutAnd_logical" xml:space="preserve">
    <value>A logical expression to factor into the And operation.</value>
  </data>
  <data name="AboutOr_logical" xml:space="preserve">
    <value>A logical expression to factor into the Or operation.</value>
  </data>
  <data name="AboutNot_logical" xml:space="preserve">
    <value>A logical expression to negate.</value>
  </data>
  <data name="AboutCount" xml:space="preserve">
    <value>Counts the numeric values in the specified column.</value>
    <comment>Description of 'Count' function.</comment>
  </data>
  <data name="AboutCountA" xml:space="preserve">
    <value>Counts the number of rows in the column that are not empty.</value>
    <comment>Description of 'CountA' function.</comment>
  </data>
  <data name="AboutCountRows" xml:space="preserve">
    <value>Counts the number of rows in the input table or collection.</value>
    <comment>Description of 'CountRows' function.</comment>
  </data>
  <data name="CountArg1" xml:space="preserve">
    <value>source</value>
    <comment>function_parameter - First argument to the Count function - the source to have its elements counted.</comment>
  </data>
  <data name="AboutCount_source" xml:space="preserve">
    <value>A column of values to count.</value>
  </data>
  <data name="AboutCountA_source" xml:space="preserve">
    <value>A column of values to count.</value>
  </data>
  <data name="AboutCountRows_source" xml:space="preserve">
    <value>A table whose rows will be counted.</value>
  </data>
  <data name="AboutCountIf" xml:space="preserve">
    <value>Counts the number of rows that meet the given condition.</value>
    <comment>Description of 'CountIf' function.</comment>
  </data>
  <data name="CountIfArg1" xml:space="preserve">
    <value>source</value>
    <comment>function_parameter - First argument to the CountIf function - the source to have its elements counted.</comment>
  </data>
  <data name="CountIfArg2" xml:space="preserve">
    <value>condition</value>
    <comment>function_parameter - Second argument to the CountIf function - the condition to be evaluated for which the items will be counted.</comment>
  </data>
  <data name="AboutCountIf_source" xml:space="preserve">
    <value>A table where rows that meet certain criteria will be counted.</value>
  </data>
  <data name="AboutCountIf_condition" xml:space="preserve">
    <value>An expression evaluated for each row, that specifies whether the row should be counted.</value>
  </data>
  <data name="AboutSumT" xml:space="preserve">
    <value>Returns the sum of the numbers the expression evaluates to in the context of the table.</value>
    <comment>Description of 'SumT' function.</comment>
  </data>
  <data name="AboutMaxT" xml:space="preserve">
    <value>Returns the largest value the expression evaluates to in the context of the table.</value>
    <comment>Description of 'MaxT' function.</comment>
  </data>
  <data name="AboutMinT" xml:space="preserve">
    <value>Returns the smallest value the expression evaluates to in the context of the table.</value>
    <comment>Description of 'MinT' function.</comment>
  </data>
  <data name="AboutAverageT" xml:space="preserve">
    <value>Returns the average (arithmetic mean) of the numbers the expression evaluates to in the context of the table.</value>
    <comment>Description of 'AverageT' function.</comment>
  </data>
  <data name="StatisticalTArg1" xml:space="preserve">
    <value>source</value>
    <comment>function_parameter - First argument to statistical aggregation functions (Sum, Average, StdevP, ...) - the source to have its elements aggregated.</comment>
  </data>
  <data name="StatisticalTArg2" xml:space="preserve">
    <value>expression</value>
    <comment>function_parameter - Second argument to statistical aggregation functions (Sum, Average, StdevP, ...) - the expression to be applied to the elements.</comment>
  </data>
  <data name="AboutMin_source" xml:space="preserve">
    <value>A table over which this min operation will be computed.</value>
  </data>
  <data name="AboutMin_expression" xml:space="preserve">
    <value>An expression evaluated over each row in the input table, that provides numeric values for this min operation.</value>
  </data>
  <data name="AboutMax_source" xml:space="preserve">
    <value>A table over which this max operation will be computed.</value>
  </data>
  <data name="AboutMax_expression" xml:space="preserve">
    <value>An expression evaluated over each row in the input table, that provides numeric values for this max operation.</value>
  </data>
  <data name="AboutAverage_source" xml:space="preserve">
    <value>A table over which this average operation will be computed.</value>
  </data>
  <data name="AboutAverage_expression" xml:space="preserve">
    <value>An expression evaluated over each row in the input table, that provides numeric values for this average operation.</value>
  </data>
  <data name="AboutSum_source" xml:space="preserve">
    <value>A table over which this sum operation will be computed.</value>
  </data>
  <data name="AboutSum_expression" xml:space="preserve">
    <value>An expression evaluated over each row in the input table, that provides numeric values for this sum operation.</value>
  </data>
  <data name="AboutSum" xml:space="preserve">
    <value>Returns the sum of its arguments.</value>
    <comment>Description of 'Sum' function.</comment>
  </data>
  <data name="AboutMax" xml:space="preserve">
    <value>Returns the largest value in a set of values. Ignores logical values and text.</value>
    <comment>Description of 'Max' function.</comment>
  </data>
  <data name="AboutMin" xml:space="preserve">
    <value>Returns the smallest value in a set of values. Ignores logical values and text.</value>
    <comment>Description of 'Min' function.</comment>
  </data>
  <data name="AboutAverage" xml:space="preserve">
    <value>Returns the average (arithmetic mean) of its arguments.</value>
    <comment>Description of 'Average' function.</comment>
  </data>
  <data name="StatisticalArg" xml:space="preserve">
    <value>number</value>
    <comment>function_parameter - Argument to statistical functions (Sum, Average, StdevP, ...) - one of the values to be aggregated.</comment>
  </data>
  <data name="AboutSum_number" xml:space="preserve">
    <value>A numeric value for this sum operation.</value>
  </data>
  <data name="AboutMin_number" xml:space="preserve">
    <value>A numeric value for this min operation.</value>
  </data>
  <data name="AboutMax_number" xml:space="preserve">
    <value>A numeric value for this max operation.</value>
  </data>
  <data name="AboutAverage_number" xml:space="preserve">
    <value>A numeric value for this average operation.</value>
  </data>
  <data name="AboutAddColumns" xml:space="preserve">
    <value>Returns a table with new columns computed by evaluating all 'expression' over 'source'.</value>
    <comment>Description of 'AddColumns' function. 'expression' is the third parameter of the function, so it should be translated the same way as 'AddColumnsArg3'; 'source' is the first parameter of the function, so it should be translated as 'AddColumnsArg1'</comment>
  </data>
  <data name="AddColumnsArg1" xml:space="preserve">
    <value>source</value>
    <comment>function_parameter - First argument to the AddColumns function - the source to have columns added to.</comment>
  </data>
  <data name="AddColumnsArg2" xml:space="preserve">
    <value>column</value>
    <comment>function_parameter - Second argument to the AddColumns function - the name of the column to be added.</comment>
  </data>
  <data name="AddColumnsArg3" xml:space="preserve">
    <value>expression</value>
    <comment>function_parameter - Third argument to the AddColumns function - the expression used to create the new column.</comment>
  </data>
  <data name="AboutAddColumns_source" xml:space="preserve">
    <value>A table or record to add columns to.</value>
    <comment>AddColumns Parameter.</comment>
  </data>
  <data name="AboutAddColumns_column" xml:space="preserve">
    <value>A unique column name.</value>
    <comment>AddColumns Parameter.</comment>
  </data>
  <data name="AboutAddColumns_expression" xml:space="preserve">
    <value>An expression that provides values for the new column.</value>
    <comment>AddColumns Parameter.</comment>
  </data>
  <data name="AboutDropColumns" xml:space="preserve">
    <value>Returns a table with one or more specified 'columns' removed from the 'source' table.</value>
    <comment>Description of 'DropColumns' function. 'source' is the first parameter of the function, so it should be translated as 'DropColumnsArg1'</comment>
  </data>
  <data name="DropColumnsArg1" xml:space="preserve">
    <value>source</value>
    <comment>function_parameter - First argument to the DropColumns function - the source to have columns dropped.</comment>
  </data>
  <data name="DropColumnsArg2" xml:space="preserve">
    <value>column_name</value>
    <comment>function_parameter - Second argument to the DropColumns function - the name of the column to be dropped. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="AboutDropColumns_source" xml:space="preserve">
    <value>A table or record value to remove columns from.</value>
  </data>
  <data name="AboutDropColumns_column_name" xml:space="preserve">
    <value>The name of a column to remove.</value>
  </data>
  <data name="AboutRenameColumns" xml:space="preserve">
    <value>Returns a copy of the specified 'source' table, with the 'old_column' column renamed to 'new_column'.</value>
    <comment>Description of RenameColumns function.</comment>
  </data>
  <data name="RenameColumnsArg1" xml:space="preserve">
    <value>source</value>
    <comment>function_parameter - First argument of the RenameColumns function - the data source from which columns will be renamed.</comment>
  </data>
  <data name="RenameColumnsArg2" xml:space="preserve">
    <value>old_column</value>
    <comment>function_parameter - Second argument of the RenameColumns function - the new name for the column. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="RenameColumnsArg3" xml:space="preserve">
    <value>new_column</value>
    <comment>function_parameter - Third argument of the RenameColumns function - the new name for the column. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="AboutRenameColumns_source" xml:space="preserve">
    <value>A table value to process.</value>
  </data>
  <data name="AboutRenameColumns_old_column" xml:space="preserve">
    <value>The name of a column to rename.</value>
  </data>
  <data name="AboutRenameColumns_new_column" xml:space="preserve">
    <value>The new name for the column.</value>
  </data>
  <data name="ErrColRenamedTwice_Name" xml:space="preserve">
    <value>The specified column '{0}' cannot be renamed twice.</value>
    <comment>Error message shown when a user tries to rename the same column twice in a RenameColumns invocation. Ex.: The specified column 'FirstName' cannot be renamed twice.</comment>
  </data>
  <data name="AboutFilter" xml:space="preserve">
    <value>Returns the rows from the table for which all the specified conditions are true.</value>
    <comment>Description of 'Filter' function.</comment>
  </data>
  <data name="FilterArg1" xml:space="preserve">
    <value>source</value>
    <comment>function_parameter - First argument to the Filter function - the source to be filtered.</comment>
  </data>
  <data name="FilterArg2" xml:space="preserve">
    <value>logical_test</value>
    <comment>function_parameter - Second argument to the Filter function - the expression used to filter the source. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="AboutFilter_source" xml:space="preserve">
    <value>A table to filter.</value>
  </data>
  <data name="AboutFilter_logical_test" xml:space="preserve">
    <value>A logical test to evaluate for each row. Only the rows that pass this test will be included in the result of Filter.</value>
  </data>
  <data name="AboutFirst" xml:space="preserve">
    <value>Returns the first row of 'source'.</value>
    <comment>Description of 'First' function. 'source' is the first parameter of the function, so it should be translated the same way as 'FirstLastArg1'</comment>
  </data>
  <data name="AboutLast" xml:space="preserve">
    <value>Returns the last row of 'source'.</value>
    <comment>Description of 'Last' function. 'source' is the first parameter of the function, so it should be translated the same way as 'FirstLastArg1'</comment>
  </data>
  <data name="FirstLastArg1" xml:space="preserve">
    <value>source</value>
    <comment>function_parameter - First argument to the First and Last functions - the source to extract the first/last element.</comment>
  </data>
  <data name="AboutFirst_source" xml:space="preserve">
    <value>A table whose first row will be returned.</value>
  </data>
  <data name="AboutLast_source" xml:space="preserve">
    <value>A table whose last row will be returned.</value>
  </data>
  <data name="AboutFirstN" xml:space="preserve">
    <value>Returns the first 'count' rows of 'source'.</value>
    <comment>Description of 'FirstN' function. 'source' should be translated as 'FirstLastNArg1'; 'count' should be translated as 'FirstLastNArg2'</comment>
  </data>
  <data name="AboutLastN" xml:space="preserve">
    <value>Returns the last 'count' rows of 'source'.</value>
    <comment>Description of 'LastN' function. 'source' should be translated as 'FirstLastNArg1'; 'count' should be translated as 'FirstLastNArg2'</comment>
  </data>
  <data name="FirstLastNArg1" xml:space="preserve">
    <value>source</value>
    <comment>function_parameter - First argument to the FirstN and LastN functions - the source to extract the first/last N elements.</comment>
  </data>
  <data name="FirstLastNArg2" xml:space="preserve">
    <value>count</value>
    <comment>function_parameter - Second argument to the FirstN and LastN functions - the number of elements to be extracted.</comment>
  </data>
  <data name="AboutFirstN_source" xml:space="preserve">
    <value>A table from which rows will be returned.</value>
  </data>
  <data name="AboutFirstN_count" xml:space="preserve">
    <value>The number of rows to return.</value>
  </data>
  <data name="AboutLastN_source" xml:space="preserve">
    <value>A table from which rows will be returned.</value>
  </data>
  <data name="AboutLastN_count" xml:space="preserve">
    <value>The number of rows to return.</value>
  </data>
  <data name="AboutText" xml:space="preserve">
    <value>Converts a 'value' to text in a specific number 'format_text'.</value>
    <comment>Description of 'Text' function. 'value' is the name of the first parameter of the function, so it should be translated the same way as 'TextArg1'; 'format_text' is the name of the second parameter of the function, so it should be translated the same way as 'TextArg2'</comment>
  </data>
  <data name="TextArg1" xml:space="preserve">
    <value>value</value>
    <comment>function_parameter - First argument to the Text function - the value to be converted to text.</comment>
  </data>
  <data name="TextArg2" xml:space="preserve">
    <value>format_text</value>
    <comment>function_parameter - Second argument to the Text function - the format used to convert the value to text. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="TextArg3" xml:space="preserve">
    <value>language</value>
    <comment>function_parameter - Third argument to the Text function - the language used when converting from the value to text.</comment>
  </data>
  <data name="AboutText_value" xml:space="preserve">
    <value>A value to format into text.</value>
  </data>
  <data name="AboutText_format_text" xml:space="preserve">
    <value>A text value that specifies the way in which 'value' will be formatted.</value>
    <comment>'value' is the name of the first parameter of the function, so it should be translated the same way as 'TextArg1'</comment>
  </data>
  <data name="AboutText_language" xml:space="preserve">
    <value>Language code to use when converting to text.</value>
    <comment>Text Parameter description.</comment>
  </data>
  <data name="AboutValue" xml:space="preserve">
    <value>Converts a 'text' that represents a number to a numeric value.</value>
    <comment>Description of 'Value' function.</comment>
  </data>
  <data name="ValueArg1" xml:space="preserve">
    <value>text</value>
    <comment>function_parameter - First argument to the Value function - the text that will be converted to a number.</comment>
  </data>
  <data name="ValueArg2" xml:space="preserve">
    <value>language</value>
    <comment>function_parameter - Second argument to the Value function - the language whose rules will be used when converting from text to number.</comment>
  </data>
  <data name="AboutValue_text" xml:space="preserve">
    <value>The text value to convert to a numeric value.</value>
  </data>
  <data name="AboutValue_language" xml:space="preserve">
    <value>Language code to use when converting the value.</value>
    <comment>Value Parameter description.</comment>
  </data>
  <data name="AboutBoolean" xml:space="preserve">
    <value>Converts a 'text' that represents a boolean to a boolean value.</value>
    <comment>Description of 'Boolean' function.</comment>
  </data>
  <data name="BooleanArg1" xml:space="preserve">
    <value>text</value>
    <comment>function_parameter - First argument to the Boolean function - the text that will be converted to a boolean.</comment>
  </data>
  <data name="AboutBoolean_text" xml:space="preserve">
    <value>The text value to convert to a boolean value.</value>
  </data>
  <data name="AboutBooleanT" xml:space="preserve">
    <value>Converts a column of text values to a column of boolean values.</value>
    <comment>Description of 'Boolean' function.</comment>
  </data>
  <data name="BooleanTArg1" xml:space="preserve">
    <value>input</value>
    <comment>function_parameter - First argument to the Boolean function - a column of text values.</comment>
  </data>
  <data name="AboutBooleanT_input" xml:space="preserve">
    <value>A column of text values to process.</value>
  </data>
  <data name="AboutBooleanN" xml:space="preserve">
    <value>Converts a 'number' to a boolean value.</value>
    <comment>Description of 'Boolean' function.</comment>
  </data>
  <data name="BooleanNArg1" xml:space="preserve">
    <value>number</value>
    <comment>function_parameter - First argument to the Boolean function - the number that will be converted to a boolean.</comment>
  </data>
  <data name="AboutBooleanN_number" xml:space="preserve">
    <value>The number value to convert to a boolean value.</value>
  </data>
  <data name="AboutBooleanNT" xml:space="preserve">
    <value>Converts a column of numeric values to a column of boolean values.</value>
    <comment>Description of 'Boolean' function.</comment>
  </data>
  <data name="BooleanNTArg1" xml:space="preserve">
    <value>input</value>
    <comment>function_parameter - First argument to the Boolean function - a column of number values.</comment>
  </data>
  <data name="AboutBooleanNT_input" xml:space="preserve">
    <value>A column of number values to process.</value>
  </data>
  <data name="AboutBooleanB" xml:space="preserve">
    <value>Converts a 'boolean' to a boolean value.</value>
    <comment>Description of 'Boolean' function.</comment>
  </data>
  <data name="BooleanBArg1" xml:space="preserve">
    <value>boolean</value>
    <comment>function_parameter - First argument to the Boolean function - the boolean that will be converted to a boolean.</comment>
  </data>
  <data name="AboutBooleanB_boolean" xml:space="preserve">
    <value>The boolean value to convert to a boolean value.</value>
  </data>
  <data name="AboutBooleanBT" xml:space="preserve">
    <value>Converts a column of boolean values to a column of boolean values.</value>
    <comment>Description of 'Boolean' function.</comment>
  </data>
  <data name="BooleanBTArg1" xml:space="preserve">
    <value>input</value>
    <comment>function_parameter - First argument to the Boolean function - a column of boolean values.</comment>
  </data>
  <data name="AboutBooleanBT_input" xml:space="preserve">
    <value>A column of boolean values to process.</value>
  </data>
  <data name="AboutBooleanW" xml:space="preserve">
    <value>Converts a decimal number to a boolean value.</value>
    <comment>Description of 'Boolean' function.</comment>
  </data>
  <data name="BooleanWArg1" xml:space="preserve">
    <value>number</value>
    <comment>function_parameter - First argument to the Boolean function - the decimal number that will be converted to a boolean.</comment>
  </data>
  <data name="AboutBooleanW_number" xml:space="preserve">
    <value>The decimal number value to convert to a boolean value.</value>
  </data>
  <data name="AboutBooleanWT" xml:space="preserve">
    <value>Converts a column of decimal numeric values to a column of boolean values.</value>
    <comment>Description of 'Boolean' function.</comment>
  </data>
  <data name="BooleanWTArg1" xml:space="preserve">
    <value>input</value>
    <comment>function_parameter - First argument to the Boolean function - a column of decimal number values.</comment>
  </data>
  <data name="AboutBooleanWT_input" xml:space="preserve">
    <value>A column of number values to process.</value>
  </data>
  <data name="AboutBooleanL" xml:space="preserve">
    <value>Converts a choice value backed by a boolean to a boolean value.</value>
    <comment>Description of 'Boolean' function.</comment>
  </data>
  <data name="BooleanLArg1" xml:space="preserve">
    <value>choice</value>
    <comment>function_parameter - First argument to the Boolean function - the choice value that will be converted to a boolean.</comment>
  </data>
  <data name="AboutBooleanL_choice" xml:space="preserve">
    <value>The choice to convert to a boolean value.</value>
  </data>
  <data name="AboutBooleanLT" xml:space="preserve">
    <value>Converts a column of choice values backed by booleans to a column of boolean values.</value>
    <comment>Description of 'Boolean' function.</comment>
  </data>
  <data name="BooleanLTArg1" xml:space="preserve">
    <value>input</value>
    <comment>function_parameter - First argument to the Boolean function - a column of choice values.</comment>
  </data>
  <data name="AboutBooleanLT_input" xml:space="preserve">
    <value>A column of choice values to process.</value>
  </data>
  <data name="AboutCoalesce" xml:space="preserve">
    <value>Returns the first non blank argument</value>
    <comment>Description of 'Coalesce' function.</comment>
  </data>
  <data name="CoalesceArg1" xml:space="preserve">
    <value>value</value>
    <comment>function_parameter - Argument to the Coalesce function - a value to be evaluated if non blank.</comment>
  </data>
  <data name="AboutCoalesce_value" xml:space="preserve">
    <value>An argument to be returned if it is the first non blank argument.</value>
  </data>
  <data name="AboutConcatenate" xml:space="preserve">
    <value>Joins several text values into one text value.</value>
    <comment>Description of 'Concatenate' function.</comment>
  </data>
  <data name="AboutDecimal" xml:space="preserve">
    <value>Converts a 'text' that represents a number to a Decimal value.</value>
  </data>
  <data name="AboutDecimal_language" xml:space="preserve">
    <value>Language code to use when converting the value.</value>
  </data>
  <data name="AboutDecimal_text" xml:space="preserve">
    <value>The text value to convert to a Decimal value.</value>
  </data>
  <data name="ErrDecimalNeedsPowerFxV1" xml:space="preserve">
    <value>The 'Decimal' function can only be used if the 'Power Fx 1.0 compatibility' feature is enabled.</value>
    <comment>Error message shown when a user tries to use the 'Decimal' function in a version of Power Fx that does not support it.</comment>
  </data>
  <data name="AboutFloat" xml:space="preserve">
    <value>Converts a 'text' that represents a number to a Float value.</value>
  </data>
  <data name="AboutFloat_language" xml:space="preserve">
    <value>Language code to use when converting the value.</value>
  </data>
  <data name="AboutFloat_text" xml:space="preserve">
    <value>The text value to convert to a Float value.</value>
  </data>
  <data name="ConcatenateArg1" xml:space="preserve">
    <value>text</value>
    <comment>function_parameter - Argument to the Concatenate function - the text to be concatenated.</comment>
  </data>
  <data name="AboutConcatenate_text" xml:space="preserve">
    <value>A text value, to be concatenated with the rest of the arguments.</value>
  </data>
  <data name="AboutConcatenateT" xml:space="preserve">
    <value>Joins several text values or tables into one column of text values.</value>
    <comment>Description of 'Concatenate' function.</comment>
  </data>
  <data name="ConcatenateTArg1" xml:space="preserve">
    <value>value</value>
    <comment>function_parameter - Argument to the Concatenate function - the text or table to be concatenated.</comment>
  </data>
  <data name="AboutConcatenate_value" xml:space="preserve">
    <value>A text value or a column of text values, to be concatenated with the rest of the arguments.</value>
  </data>
  <data name="AboutConcat" xml:space="preserve">
    <value>Joins all text values produced by evaluating the given expression over the given table into one text value.</value>
    <comment>Description of 'Concat' function.</comment>
  </data>
  <data name="ConcatArg1" xml:space="preserve">
    <value>table</value>
    <comment>function_parameter - First argument to the Concat function - the table to have its rows concatenated by a given expression.</comment>
  </data>
  <data name="ConcatArg2" xml:space="preserve">
    <value>expression</value>
    <comment>function_parameter - Second argument to the Concat function - the expression used to convert the table rows into text.</comment>
  </data>
  <data name="ConcatArg3" xml:space="preserve">
    <value>separator</value>
    <comment>function_parameter - Third optional argument to the Concat function - the separator to insert between concatenated rows.</comment>
  </data>
  <data name="AboutConcat_table" xml:space="preserve">
    <value>A table value, over which the expression given by the second parameter is to be evaluated.</value>
  </data>
  <data name="AboutConcat_expression" xml:space="preserve">
    <value>An text-producing expression to evaluate for each row in the given table.</value>
  </data>
  <data name="AboutConcat_separator" xml:space="preserve">
    <value>A text value to be inserted between concatenated rows of the table.</value>
    <comment>Description of optional 'separator' parameter</comment>
  </data>
  <data name="AboutLen" xml:space="preserve">
    <value>Returns the number of characters in a text value.</value>
    <comment>Description of 'Len' function.</comment>
  </data>
  <data name="AboutLen_text" xml:space="preserve">
    <value>A text value whose length in characters will be returned.</value>
  </data>
  <data name="AboutLenT" xml:space="preserve">
    <value>Returns the number of characters in a text value, evaluated per row within the specified table or collection.</value>
    <comment>Description of 'Len' function.</comment>
  </data>
  <data name="AboutLen_text_column" xml:space="preserve">
    <value>A column of text values whose lengths in characters will be returned (as a new column).</value>
  </data>
  <data name="LenArg1" xml:space="preserve">
    <value>text</value>
    <comment>function_parameter - First argument to the Len function - the text to have its length retrieved.</comment>
  </data>
  <data name="LenTArg1" xml:space="preserve">
    <value>text_column</value>
    <comment>function_parameter - First argument to the Len function - the name of the column in a data source the length of its elements retrieved. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="AboutUpper" xml:space="preserve">
    <value>Converts a text value to all uppercase letters.</value>
    <comment>Description of 'Upper' function.</comment>
  </data>
  <data name="AboutUpperT" xml:space="preserve">
    <value>Converts all letters in a text value, evaluated per row within the specified table or collection, to uppercase.</value>
    <comment>Description of 'Update' function.</comment>
  </data>
  <data name="AboutUpper_text" xml:space="preserve">
    <value>A text value to convert to uppercase.</value>
  </data>
  <data name="AboutUpper_text_column" xml:space="preserve">
    <value>A column of text values to convert to a column of uppercase text values.</value>
  </data>
  <data name="AboutLower" xml:space="preserve">
    <value>Converts all letters in a text value to lowercase.</value>
    <comment>Description of 'Lower' function.</comment>
  </data>
  <data name="AboutLowerT" xml:space="preserve">
    <value>Converts all letters in a text value, evaluated per row within the specified table or collection, to lowercase.</value>
    <comment>Description of 'Lower' function.</comment>
  </data>
  <data name="AboutLower_text" xml:space="preserve">
    <value>A text value to convert to lowercase.</value>
  </data>
  <data name="AboutLower_text_column" xml:space="preserve">
    <value>A column of text values to convert to a column of lowercase text values.</value>
  </data>
  <data name="AboutProper" xml:space="preserve">
    <value>Converts a text value to proper case; the first letter in each word in uppercase, and all other letters to lowercase.</value>
    <comment>Description of 'Proper' function.</comment>
  </data>
  <data name="AboutProperT" xml:space="preserve">
    <value>Converts a text value, evaluated per row within the specified table or collection, to proper case; the first letter in each word in uppercase, and all other letters to lowercase.</value>
    <comment>Description of 'Proper' function.</comment>
  </data>
  <data name="AboutProper_text" xml:space="preserve">
    <value>A text value to convert to proper case.</value>
  </data>
  <data name="AboutProper_text_column" xml:space="preserve">
    <value>A column of text values to convert to a column of proper case text values.</value>
  </data>
  <data name="AboutTrim" xml:space="preserve">
    <value>Removes all spaces from a text value except for single spaces between words.</value>
    <comment>Description of 'Trim' function.</comment>
  </data>
  <data name="AboutTrim_text" xml:space="preserve">
    <value>A text value to convert to trim.</value>
  </data>
  <data name="AboutTrim_text_column" xml:space="preserve">
    <value>A column of text values to trim.</value>
  </data>
  <data name="AboutTrimEnds" xml:space="preserve">
    <value>Removes all leading and trailing spaces from a text value.</value>
    <comment>Description of 'TrimEnds' function.</comment>
  </data>
  <data name="AboutTrimEnds_text" xml:space="preserve">
    <value>A text value to trim the trailing and leading whitespace.</value>
  </data>
  <data name="AboutTrimEnds_text_column" xml:space="preserve">
    <value>A column of text values to trim the trailing and leading whitespace.</value>
  </data>
  <data name="AboutMid" xml:space="preserve">
    <value>Returns the characters from the middle of a text value, given a starting position and length.</value>
    <comment>Description of 'Mid' function.</comment>
  </data>
  <data name="AboutMidT" xml:space="preserve">
    <value>Returns the characters from the middle of a text value, given a starting position and length, evaluated per row within the specified table or collection.</value>
    <comment>Description of 'Mid' function.</comment>
  </data>
  <data name="AboutMid_text" xml:space="preserve">
    <value>A text value from which characters will be extracted.</value>
  </data>
  <data name="AboutMid_text_column" xml:space="preserve">
    <value>A column of text values from which characters will be extracted into a new column.</value>
  </data>
  <data name="AboutMid_start_num" xml:space="preserve">
    <value>The start position where to extract characters from.</value>
  </data>
  <data name="AboutMid_num_chars" xml:space="preserve">
    <value>The number of characters to extract.</value>
  </data>
  <data name="StringFuncArg1" xml:space="preserve">
    <value>text</value>
    <comment>function_parameter - First argument of string related functions, such as Trim, Lower, Upper - the text to have the function applied to.</comment>
  </data>
  <data name="StringTFuncArg1" xml:space="preserve">
    <value>text_column</value>
    <comment>function_parameter - First argument of string related functions, such as Trim, Lower, Upper - the text column in a data source to have the function applied to. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="StringFuncArg2" xml:space="preserve">
    <value>start_num</value>
    <comment>function_parameter - Second argument of string related functions, such as Mid, Replace, indicating the start position of the string to apply the function. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="StringFuncArg3" xml:space="preserve">
    <value>num_chars</value>
    <comment>function_parameter - Third argument of string related functions, such as Mid, Replace, indicating the number of characters that the function should be applied to. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="AboutReplace" xml:space="preserve">
    <value>Replace part of a text value with a different text value.</value>
    <comment>Description of 'Replace' function.</comment>
  </data>
  <data name="AboutReplaceT" xml:space="preserve">
    <value>Replace part of a text value with a different text value, evaluated per row within the specified table or collection.</value>
    <comment>Description of 'Replace' function.</comment>
  </data>
  <data name="ReplaceFuncArg1" xml:space="preserve">
    <value>old_text</value>
    <comment>function_parameter - First argument to the Replace function - the text to be replaced. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="ReplaceFuncArg4" xml:space="preserve">
    <value>new_text</value>
    <comment>function_parameter - Last argument to the Replace function - the text to replace the original text. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="AboutReplace_old_text" xml:space="preserve">
    <value>The text value to process.</value>
  </data>
  <data name="AboutReplace_start_num" xml:space="preserve">
    <value>The starting position where the replacement will take place.</value>
  </data>
  <data name="AboutReplace_num_chars" xml:space="preserve">
    <value>The number of characters to replace.</value>
  </data>
  <data name="AboutReplace_new_text" xml:space="preserve">
    <value>A replacement text value.</value>
  </data>
  <data name="AboutReplace_text_column" xml:space="preserve">
    <value>A column of text values to process.</value>
  </data>
  <data name="AboutError" xml:space="preserve">
    <value>Produces an error with custom values.</value>
    <comment>Description of 'Error' function.</comment>
  </data>
  <data name="AboutError_error_information" xml:space="preserve">
    <value>A record containing the custom values for the produced error.</value>
    <comment>Description of the first (and only) parameter to the Error function, which is a record containing certain properties that identify the error that is created.</comment>
  </data>
  <data name="ErrorArg1" xml:space="preserve">
    <value>error_information</value>
    <comment>function_parameter - Argument to the Error function - a record of information for generating a custom error. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="ErrErrorIrrelevantField" xml:space="preserve">
    <value>The Error function only uses the fields "Kind", "Message", "Notify", "Control", and "Property".</value>
    <comment>An error message for when the user passes in an unexpected extra field to Error. {Locked=Kind} {Locked=Message} {Locked=Notify} {Locked=Control} {Locked=Property} {Locked=Error}</comment>
  </data>
  <data name="AboutIfError" xml:space="preserve">
    <value>Evaluates and returns the first non-error argument.</value>
    <comment>Description of 'IfError' function.</comment>
  </data>
  <data name="IfErrorArg1" xml:space="preserve">
    <value>value</value>
    <comment>function_parameter - Argument to the IfError function - a value to be returned if non error.</comment>
  </data>
  <data name="AboutIfError_value" xml:space="preserve">
    <value>Value that is returned if it is not an error.</value>
    <comment>Description of the first parameter IfError accepts</comment>
  </data>
  <data name="IfErrorArg2" xml:space="preserve">
    <value>fallback</value>
    <comment>function_parameter - Argument to the IfError function - a value to fallback on if the previous args are errors.</comment>
  </data>
  <data name="AboutIfError_fallback" xml:space="preserve">
    <value>Value that is returned if the previous argument is an error.</value>
    <comment>Description of the repeated parameter: a value to fallback on if the previous args are errors</comment>
  </data>
  <data name="AboutSubstitute" xml:space="preserve">
    <value>Replaces existing text with new text in a text value.</value>
    <comment>Description of 'Substitute' function.</comment>
  </data>
  <data name="AboutSubstituteT" xml:space="preserve">
    <value>Replaces existing text with new text in a text value evaluated per row within the specified table or collection.</value>
    <comment>Description of 'Substitute' function.</comment>
  </data>
  <data name="SubstituteFuncArg1" xml:space="preserve">
    <value>text</value>
    <comment>function_parameter - First argument to the Substitute function - the text to have (part of) it replaced.</comment>
  </data>
  <data name="SubstituteTFuncArg1" xml:space="preserve">
    <value>text_column</value>
    <comment>function_parameter - First argument to the Substitute function - a text column to have (part of) its values replaced. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="SubstituteFuncArg2" xml:space="preserve">
    <value>old_text</value>
    <comment>function_parameter - Second argument to the Substitute function - the text to be replaced. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="SubstituteFuncArg3" xml:space="preserve">
    <value>new_text</value>
    <comment>function_parameter - Third argument to the Substitute function - the text to replace the old value. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="SubstituteFuncArg4" xml:space="preserve">
    <value>instance_num</value>
    <comment>function_parameter - Fourth (optional) argument to the Substitute function - the specific instance to be replaced. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="AboutSubstitute_text" xml:space="preserve">
    <value>The text value to process.</value>
  </data>
  <data name="AboutSubstitute_old_text" xml:space="preserve">
    <value>The text to replace.</value>
  </data>
  <data name="AboutSubstitute_new_text" xml:space="preserve">
    <value>A replacement text.</value>
  </data>
  <data name="AboutSubstitute_instance_num" xml:space="preserve">
    <value>Specifies which occurrence of the given text to replace.</value>
  </data>
  <data name="AboutSubstitute_text_column" xml:space="preserve">
    <value>A column of text values to process.</value>
  </data>
  <data name="AboutSort" xml:space="preserve">
    <value>Sorts 'source' based on the results of the 'expression' evaluated for each row, optionally specifying a sort 'order'.</value>
    <comment>Description of 'Sort' function.</comment>
  </data>
  <data name="SortArg1" xml:space="preserve">
    <value>source</value>
    <comment>function_parameter - First argument to the Sort function - the source (table / collection) to be sorted.</comment>
  </data>
  <data name="SortArg2" xml:space="preserve">
    <value>expression</value>
    <comment>function_parameter - Second argument to the Sort function - the expression used to sort the source</comment>
  </data>
  <data name="SortArg3" xml:space="preserve">
    <value>order</value>
    <comment>function_parameter - Third argument to the Sort function - the order (ascending / descending) to apply the sorting.</comment>
  </data>
  <data name="AboutSort_source" xml:space="preserve">
    <value>The table to sort.</value>
  </data>
  <data name="AboutSort_expression" xml:space="preserve">
    <value>An expression that gets evaluated over rows in 'source' and provides values for sorting.</value>
  </data>
  <data name="AboutSort_order" xml:space="preserve">
    <value>SortOrder.Ascending or SortOrder.Descending</value>
    <comment>{Locked=SortOrder.Ascending}{Locked=SortOrder.Descending} Possible values for the third argument of the Sort function</comment>
  </data>
  <data name="AboutSortByColumns" xml:space="preserve">
    <value>Sorts 'source' based on the column, optionally specifying a sort 'order'.</value>
    <comment>Description of 'SortByColumns' function.</comment>
  </data>
  <data name="SortByColumnsArg1" xml:space="preserve">
    <value>source</value>
    <comment>function_parameter - First argument to the SortByColumns function - the source (table / collection) to be sorted.</comment>
  </data>
  <data name="SortByColumnsArg2" xml:space="preserve">
    <value>column</value>
    <comment>function_parameter - Second argument to the SortByColumns function - the column based on which the source will be sorted.</comment>
  </data>
  <data name="SortByColumnsArg3" xml:space="preserve">
    <value>order</value>
    <comment>function_parameter - Third argument to the SortByColumns function - the order (ascending / descending) to apply the sorting.</comment>
  </data>
  <data name="AboutSortByColumns_source" xml:space="preserve">
    <value>The table to sort.</value>
  </data>
  <data name="AboutSortByColumns_column" xml:space="preserve">
    <value>A unique column name.</value>
  </data>
  <data name="AboutSortByColumns_order" xml:space="preserve">
    <value>SortOrder.Ascending or SortOrder.Descending</value>
    <comment>{Locked=SortOrder.Ascending}{Locked=SortOrder.Descending} Possible values for the third argument of the Sort function</comment>
  </data>
  <data name="SortByColumnsWithOrderValuesArg3" xml:space="preserve">
    <value>values</value>
    <comment>function_parameter - Third argument to the SortByColumns function - a list of values specifying the order of items to be sorted.</comment>
  </data>
  <data name="AboutSortByColumns_values" xml:space="preserve">
    <value>A column of values to be used for sorting purposes. Sorting is not done ascendingly/descendingly, but rather based on the index of matching values in the column </value>
  </data>
  <data name="AboutRand" xml:space="preserve">
    <value>Returns a random number greater than or equal to 0 and less than 1, evenly distributed.</value>
    <comment>Description of 'Rand' function.</comment>
  </data>
  <data name="AboutRandBetween" xml:space="preserve">
    <value>Returns a random number between bottom and top, evenly distributed.</value>
    <comment>Description of 'RandBetween' function.</comment>
  </data>
  <data name="AboutRandBetween_bottom" xml:space="preserve">
    <value>The smallest integer that the function can return.</value>
  </data>
  <data name="AboutRandBetween_top" xml:space="preserve">
    <value>The largest integer that the function can return. Must be equal to or greater than bottom.</value>
  </data>
  <data name="RandBetweenArg1" xml:space="preserve">
    <value>bottom</value>
    <comment>function_parameter - First argument to the RandBetween function - the smallest integer that the function can return.</comment>
  </data>
  <data name="RandBetweenArg2" xml:space="preserve">
    <value>top</value>
    <comment>function_parameter - Second argument to the RandBetween function - the largest integer that the function can return.</comment>
  </data>
  <data name="AboutGUID" xml:space="preserve">
    <value>Creates a GUID from a string, or returns a randomly generated GUID if no arguments are supplied.</value>
    <comment>Description of 'GUID' function.</comment>
  </data>
  <data name="GUIDArg" xml:space="preserve">
    <value>GUID_string</value>
    <comment>function_parameter - String to convert into a GUID. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="AboutGUID_GUID_string" xml:space="preserve">
    <value>String to convert into a GUID</value>
    <comment>Description of the GUID String param for the GUID function</comment>
  </data>
  <data name="AboutNow" xml:space="preserve">
    <value>Returns the current date and time.</value>
    <comment>Description of 'Now' function.</comment>
  </data>
  <data name="AboutUTCNow" xml:space="preserve">
    <value>Returns the current date and time in UTC time.</value>
    <comment>Description of 'UTCNow' function.</comment>
  </data>
  <data name="AboutTimeZoneOffset" xml:space="preserve">
    <value>Returns the time difference between UTC time and local time, in minutes.For example, If your time zone is UTC+2, -120 will be returned.</value>
    <comment>Description of 'TimeZoneOffset' function.</comment>
  </data>
  <data name="TimeZoneOffsetArg1" xml:space="preserve">
    <value>date</value>
    <comment>function_parameter - Argument of the TimeZoneOffset function - the date for the timezone offset.</comment>
  </data>
  <data name="AboutTimeZoneOffset_date" xml:space="preserve">
    <value>The date on which to calculate the 'TimeZoneOffset'.</value>
    <comment>{Locked=TimeZoneOffset}</comment>
  </data>
  <data name="AboutToday" xml:space="preserve">
    <value>Returns the current date.</value>
    <comment>Description of 'Today' function.</comment>
  </data>
  <data name="AboutUTCToday" xml:space="preserve">
    <value>Returns the current date in UTC time.</value>
    <comment>Description of 'UTCToday' function.</comment>
  </data>
  <data name="AboutWeekNum" xml:space="preserve">
    <value>Returns the week number for a given date.</value>
    <comment>Description of 'WeekNum' function.</comment>
  </data>
  <data name="WeekNumArg1" xml:space="preserve">
    <value>date</value>
    <comment>function_parameter - First parameter for the WeekNum function - a date value for which the week number will be calculated.</comment>
  </data>
  <data name="WeekNumArg2" xml:space="preserve">
    <value>start_of_week</value>
    <comment>function_parameter - Second (optional) parameter for the WeekNum function - the weekday that is used to start the week. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="AboutWeekNum_date" xml:space="preserve">
    <value>A date value for which the week number will be calculated.</value>
  </data>
  <data name="AboutWeekNum_start_of_week" xml:space="preserve">
    <value>A value from the StartOfWeek enumeration or a number from the corresponding Excel function to indicate how the days of the week should be numbered.</value>
    <comment>{Locked=StartOfWeek}</comment>
  </data>
  <data name="AboutISOWeekNum" xml:space="preserve">
    <value>Returns the week number according to ISO rules for a given date.</value>
    <comment>Description of 'ISOWeekNum' function.</comment>
  </data>
  <data name="ISOWeekNumArg1" xml:space="preserve">
    <value>date</value>
    <comment>function_parameter - First parameter for the ISOWeekNum function - a date value for which the ISO week number will be calculated.</comment>
  </data>
  <data name="AboutISOWeekNum_date" xml:space="preserve">
    <value>A date value for which the ISO week number will be calculated.</value>
  </data>
  <data name="AboutEDate" xml:space="preserve">
    <value>Returns a date adjusted by a number of months. The day of the month remains the same but is capped by the number of days in the new month.</value>
    <comment>Description of 'EDate' function.</comment>
  </data>
  <data name="EDateArg1" xml:space="preserve">
    <value>date</value>
    <comment>function_parameter - First parameter for the EDate function - a date value to be adjusted by the specified number of months.</comment>
  </data>
  <data name="EDateArg2" xml:space="preserve">
    <value>months</value>
    <comment>function_parameter - Second parameter for the EDate function - number of months by which to change the date.</comment>
  </data>
  <data name="AboutEDate_date" xml:space="preserve">
    <value>A date value to be adjusted by the specified number of months.</value>
    <comment>Description of the first argument to the 'EDate' function.</comment>
  </data>
  <data name="AboutEDate_months" xml:space="preserve">
    <value>Number of months by which to change the date. A positive value yields a future date, a negative value a past date, and zero will not change the month.</value>
    <comment>Description of the second argument to the 'EDate' function.</comment>
  </data>
  <data name="AboutEOMonth" xml:space="preserve">
    <value>Returns the last day of the month for a specified date, adjusted by a number of months.</value>
    <comment>Description of 'EOMonth' function.</comment>
  </data>
  <data name="EOMonthArg1" xml:space="preserve">
    <value>date</value>
    <comment>function_parameter - First parameter for the EOMonth function - a date value to be adjusted by the specified number of months.</comment>
  </data>
  <data name="EOMonthArg2" xml:space="preserve">
    <value>months</value>
    <comment>function_parameter - Second parameter for the EOMonth function - number of months by which to change the date.</comment>
  </data>
  <data name="AboutEOMonth_date" xml:space="preserve">
    <value>A date value to be adjusted by the specified number of months.</value>
    <comment>Description of the first argument to the 'EOMonth' function.</comment>
  </data>
  <data name="AboutEOMonth_months" xml:space="preserve">
    <value>Number of months by which to change the date. A positive value yields a future date, a negative value a past date, and zero will not change the month.</value>
    <comment>Description of the second argument to the 'EOMonth' function.</comment>
  </data>
  <data name="AboutInt" xml:space="preserve">
    <value>Truncates 'number' by rounding toward negative infinity.</value>
    <comment>Description of 'Int' function.</comment>
  </data>
  <data name="AboutIntT" xml:space="preserve">
    <value>Truncates the values in a column of numbers by rounding toward negative infinity.</value>
    <comment>Description of 'Int' function.</comment>
  </data>
  <data name="AboutInt_number" xml:space="preserve">
    <value>A numeric value to process.</value>
  </data>
  <data name="AboutInt_input" xml:space="preserve">
    <value>A column of numeric values to process.</value>
  </data>
  <data name="AboutTrunc" xml:space="preserve">
    <value>Truncates 'number' by rounding toward zero.</value>
    <comment>Description of 'Trunc' function.</comment>
  </data>
  <data name="AboutTrunc_number" xml:space="preserve">
    <value>The number to truncate.</value>
  </data>
  <data name="AboutTrunc_source" xml:space="preserve">
    <value>A column of numbers to truncate.</value>
  </data>
  <data name="AboutTrunc_num_digits" xml:space="preserve">
    <value>The number of fractional digits to use for truncating.</value>
  </data>
  <data name="AboutTruncT" xml:space="preserve">
    <value>Truncates all numbers in 'source' by rounding toward zero.</value>
    <comment>Description of 'TruncT' function.</comment>
  </data>
  <data name="TruncArg1" xml:space="preserve">
    <value>number</value>
    <comment>function_parameter - First argument to the Trunc function - the number to be rounded.</comment>
  </data>
  <data name="TruncArg2" xml:space="preserve">
    <value>num_digits</value>
    <comment>function_parameter - Second argument to the Trunc function - the number of digits to apply the rounding. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="TruncTArg1" xml:space="preserve">
    <value>source</value>
    <comment>function_parameter - First argument to the Trunc function - numeric column to be rounded.</comment>
  </data>
  <data name="TruncTArg2" xml:space="preserve">
    <value>num_digits</value>
    <comment>function_parameter - Second argument to the Trunc function - the number of digits to apply the rounding. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="AboutRound" xml:space="preserve">
    <value>Rounds 'number' to the specified number of digits.</value>
    <comment>Description of 'Round' function.</comment>
  </data>
  <data name="AboutRoundUp" xml:space="preserve">
    <value>Rounds 'number' up, away from zero.</value>
    <comment>Description of 'RoundUp' function.</comment>
  </data>
  <data name="AboutRoundDown" xml:space="preserve">
    <value>Rounds 'number' down, toward zero.</value>
    <comment>Description of 'RoundDown' function.</comment>
  </data>
  <data name="RoundArg1" xml:space="preserve">
    <value>number</value>
    <comment>function_parameter - First argument to the Round function - the number to be rounded.</comment>
  </data>
  <data name="RoundArg2" xml:space="preserve">
    <value>num_digits</value>
    <comment>function_parameter - Second argument to the Round function - the number of digits to apply the rounding. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="AboutRound_number" xml:space="preserve">
    <value>The number to round.</value>
  </data>
  <data name="AboutRound_source" xml:space="preserve">
    <value>A column of numbers to round.</value>
  </data>
  <data name="AboutRound_num_digits" xml:space="preserve">
    <value>The number of fractional digits to use for rounding.</value>
  </data>
  <data name="AboutRoundUp_number" xml:space="preserve">
    <value>The number to round.</value>
  </data>
  <data name="AboutRoundUp_source" xml:space="preserve">
    <value>A column of numbers to round.</value>
  </data>
  <data name="AboutRoundUp_num_digits" xml:space="preserve">
    <value>The number of fractional digits to use for rounding.</value>
  </data>
  <data name="AboutRoundDown_number" xml:space="preserve">
    <value>The number to round.</value>
  </data>
  <data name="AboutRoundDown_source" xml:space="preserve">
    <value>A column of numbers to round.</value>
  </data>
  <data name="AboutRoundDown_num_digits" xml:space="preserve">
    <value>The number of fractional digits to use for rounding.</value>
  </data>
  <data name="AboutRoundT" xml:space="preserve">
    <value>Rounds all numbers in 'source' to the specified number of digits.</value>
    <comment>Description of 'RoundT' function.</comment>
  </data>
  <data name="AboutRoundUpT" xml:space="preserve">
    <value>Rounds all numbers in 'source' up, away from zero.</value>
    <comment>Description of 'RoundUpT' function.</comment>
  </data>
  <data name="AboutRoundDownT" xml:space="preserve">
    <value>Rounds all numbers in 'source' down, toward zero.</value>
    <comment>Description of 'RoundDownT' function.</comment>
  </data>
  <data name="RoundTArg1" xml:space="preserve">
    <value>source</value>
    <comment>function_parameter - First argument to the Round function - numeric column to be rounded.</comment>
  </data>
  <data name="RoundTArg2" xml:space="preserve">
    <value>num_digits</value>
    <comment>function_parameter - Second argument to the Round function - the number of digits to apply the rounding. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="AboutRGBA" xml:space="preserve">
    <value>Takes in numeric values for Red, Green, Blue and Alpha components of the color and generates the specific color. R, G, B are numeric between 0 to 255. Alpha is decimal between 0 to 1.</value>
    <comment>Description of 'RGBA' function.</comment>
  </data>
  <data name="RGBAArg1" xml:space="preserve">
    <value>red_value</value>
    <comment>function_parameter - First argument to the RGBA function - the red component of the color. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="RGBAArg2" xml:space="preserve">
    <value>green_value</value>
    <comment>function_parameter - Second argument to the RGBA function - the green component of the color. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="RGBAArg3" xml:space="preserve">
    <value>blue_value</value>
    <comment>function_parameter - Third argument to the RGBA function - the blue component of the color. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="RGBAArg4" xml:space="preserve">
    <value>alpha_value</value>
    <comment>function_parameter - Second argument to the RGBA function - the alpha (transparency) component of the color. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="AboutRGBA_red_value" xml:space="preserve">
    <value>The red component, 0 to 255.</value>
  </data>
  <data name="AboutRGBA_green_value" xml:space="preserve">
    <value>The green component, 0 to 255.</value>
  </data>
  <data name="AboutRGBA_blue_value" xml:space="preserve">
    <value>The blue component, 0 to 255.</value>
  </data>
  <data name="AboutRGBA_alpha_value" xml:space="preserve">
    <value>The alpha component, 0 to 1 (or a percentage, such as 49%).</value>
  </data>
  <data name="AboutColorFade" xml:space="preserve">
    <value>Produces a new shade of the specified 'color', based on the specified 'fade' percentage.</value>
    <comment>Description of 'ColorFade' function.</comment>
  </data>
  <data name="ColorFadeArg1" xml:space="preserve">
    <value>color</value>
    <comment>function_parameter - First argument to the ColorFade function - the color on which the function will apply a fade transformation.</comment>
  </data>
  <data name="ColorFadeArg2" xml:space="preserve">
    <value>fade</value>
    <comment>function_parameter - Second argument to the ColorFade function - the amount of fade that will be applied to the color.</comment>
  </data>
  <data name="AboutColorFade_color" xml:space="preserve">
    <value>A color to fade.</value>
  </data>
  <data name="AboutColorFade_fade" xml:space="preserve">
    <value>A percentage by which the color will be faded. A negative percentage produces a darker shade. A positive percentage produces a lighter shade.</value>
  </data>
  <data name="AboutColorFadeT" xml:space="preserve">
    <value>Produces new shades of the specified 'color' values, based on the specified 'fade' percentage values.</value>
  </data>
  <data name="ColorFadeTArg1" xml:space="preserve">
    <value>color_or_column</value>
    <comment>function_parameter - First argument to the ColorFade function - the color on which the function will apply a fade transformation, or a column in a table containing the colors. Translate this string. When translating, maintain as a single word (i.e., do not add spaces)</comment>
  </data>
  <data name="ColorFadeTArg2" xml:space="preserve">
    <value>fade_or_column</value>
    <comment>function_parameter - Second argument to the ColorFade function - the amount of fade that will be applied to the color, or a column in a table containing the amounts. Translate this string. When translating, maintain as a single word (i.e., do not add spaces).</comment>
  </data>
  <data name="AboutColorFade_color_or_column" xml:space="preserve">
    <value>A color (or column of color values) to fade.</value>
  </data>
  <data name="AboutColorFade_fade_or_column" xml:space="preserve">
    <value>A percentage (or column of percentage values) by which the color (or column of color values) will be faded. A negative percentage produces a darker shade. A positive percentage produces a lighter shade.</value>
  </data>
  <data name="AboutAbs" xml:space="preserve">
    <value>Returns the absolute value of a number, a number without its sign.</value>
    <comment>Description of 'Abs' function.</comment>
  </data>
  <data name="AboutAbsT" xml:space="preserve">
    <value>Returns the absolute values (numbers without their sign) of a column of numbers.</value>
    <comment>Description of 'Abs' function.</comment>
  </data>
  <data name="AboutAbs_number" xml:space="preserve">
    <value>A numeric value to process.</value>
  </data>
  <data name="AboutAbs_input" xml:space="preserve">
    <value>A column of numeric values to process.</value>
  </data>
  <data name="AboutSin_number" xml:space="preserve">
    <value>A numeric value (in radians) to process.</value>
  </data>
  <data name="AboutSin_input" xml:space="preserve">
    <value>A column of numeric values (in radians) to process.</value>
  </data>
  <data name="AboutSin" xml:space="preserve">
    <value>Returns the sine value of a number.</value>
    <comment>Sin function parameter in radians.</comment>
  </data>
  <data name="AboutSinT" xml:space="preserve">
    <value>Returns the sine values of a column of numbers.</value>
    <comment>Sin function parameter is a column of numbers in radians.</comment>
  </data>
  <data name="AboutAsin_number" xml:space="preserve">
    <value>A numeric value to process.</value>
  </data>
  <data name="AboutAsin_input" xml:space="preserve">
    <value>A column of numeric values to process.</value>
  </data>
  <data name="AboutAsin" xml:space="preserve">
    <value>Returns the arc sine value (in radians) of a number.</value>
    <comment>Asin function parameter.</comment>
  </data>
  <data name="AboutAsinT" xml:space="preserve">
    <value>Returns the arc sine values (in radians) of a column of numbers.</value>
    <comment>Asin function parameter.</comment>
  </data>
  <data name="AboutCos" xml:space="preserve">
    <value>Returns the cosine value of a number.</value>
    <comment>Cos function parameter in radians.</comment>
  </data>
  <data name="AboutCosT" xml:space="preserve">
    <value>Returns the cosine values of a column of numbers.</value>
    <comment>Cos function parameter is a column of numbers in radians.</comment>
  </data>
  <data name="AboutCos_number" xml:space="preserve">
    <value>A numeric value (in radians) to process.</value>
  </data>
  <data name="AboutCos_input" xml:space="preserve">
    <value>A column of numeric values (in radians) to process.</value>
  </data>
  <data name="AboutAcos" xml:space="preserve">
    <value>Returns the arc cosine value (in radians) of a number.</value>
    <comment>Acos function parameter.</comment>
  </data>
  <data name="AboutAcos_number" xml:space="preserve">
    <value>A numeric value to process.</value>
  </data>
  <data name="AboutAcosT" xml:space="preserve">
    <value>Returns the arc cosine values (in radians) of a column of numbers.</value>
    <comment>Acos function parameter.</comment>
  </data>
  <data name="AboutAcos_input" xml:space="preserve">
    <value>A column of numeric values to process.</value>
  </data>
  <data name="AboutAcot_number" xml:space="preserve">
    <value>A numeric value to process.</value>
  </data>
  <data name="AboutAcot_input" xml:space="preserve">
    <value>A column of numeric values to process.</value>
  </data>
  <data name="AboutAcot" xml:space="preserve">
    <value>Returns the arc cotangent value (in radians) of a number.</value>
    <comment>Acot function parameter.</comment>
  </data>
  <data name="AboutAcotT" xml:space="preserve">
    <value>Returns the arc cotangent values (in radians) of a column of numbers.</value>
    <comment>Acot function parameter.</comment>
  </data>
  <data name="AboutTan" xml:space="preserve">
    <value>Returns the tangent value of a number.</value>
    <comment>Tan function parameter in radians.</comment>
  </data>
  <data name="AboutTanT" xml:space="preserve">
    <value>Returns the tangent values of a column of numbers.</value>
    <comment>Tan function parameter in a column of numbers in radians.</comment>
  </data>
  <data name="AboutTan_number" xml:space="preserve">
    <value>A numeric value (in radians) to process.</value>
  </data>
  <data name="AboutTan_input" xml:space="preserve">
    <value>A column of numeric values (in radians) to process.</value>
  </data>
  <data name="AboutAtan" xml:space="preserve">
    <value>Returns the arc tangent value (in radians) of a number.</value>
    <comment>Atan function parameter.</comment>
  </data>
  <data name="AboutAtanT" xml:space="preserve">
    <value>Returns the arc tangent values (in radians) of a column of numbers.</value>
    <comment>Atan function parameter.</comment>
  </data>
  <data name="AboutAtan_number" xml:space="preserve">
    <value>A numeric value to process.</value>
  </data>
  <data name="AboutAtan_input" xml:space="preserve">
    <value>A column of numeric values to process.</value>
  </data>
  <data name="AboutCot" xml:space="preserve">
    <value>Returns the cotangent value of a number.</value>
    <comment>Cot function parameter in radians.</comment>
  </data>
  <data name="AboutCotT" xml:space="preserve">
    <value>Returns the cotangent values of a column of numbers.</value>
    <comment>Cot function parameter in a column of numbers in radians.</comment>
  </data>
  <data name="AboutCot_number" xml:space="preserve">
    <value>A numeric value (in radians) to process.</value>
  </data>
  <data name="AboutCot_input" xml:space="preserve">
    <value>A column of numeric values (in radians) to process.</value>
  </data>
  <data name="AboutLn" xml:space="preserve">
    <value>Returns the natural logarithm (base E) of a number.</value>
    <comment>Ln function parameter.</comment>
  </data>
  <data name="AboutLnT" xml:space="preserve">
    <value>Returns the natural logarithm values (base E) of a column of numbers.</value>
    <comment>Ln function parameter.</comment>
  </data>
  <data name="AboutLn_number" xml:space="preserve">
    <value>A numeric value to process.</value>
  </data>
  <data name="AboutLn_input" xml:space="preserve">
    <value>A column of numeric values to process.</value>
  </data>
  <data name="AboutLog" xml:space="preserve">
    <value>Returns the logarithm of a number for the given base. The default base is 10.</value>
    <comment>Description of Log function.</comment>
  </data>
  <data name="AboutLogT" xml:space="preserve">
    <value>Returns the logarithm values of a number or column of numbers for the given base or column of bases. The default base is 10.</value>
    <comment>Description of Log function.</comment>
  </data>
  <data name="AboutLog_number" xml:space="preserve">
    <value>A numeric value to process.</value>
  </data>
  <data name="AboutLog_input" xml:space="preserve">
    <value>A column of numeric values to process.</value>
  </data>
  <data name="LogBase" xml:space="preserve">
    <value>base</value>
    <comment>function_parameter - First argument to the Logarithm function - the base of the logarithm.</comment>
  </data>
  <data name="AboutLog_base" xml:space="preserve">
    <value>The base for the logarithm.</value>
  </data>
  <data name="AboutExp" xml:space="preserve">
    <value>Returns E raised to the power of a number. To calculate powers of other bases, use the exponentiation operator (^).</value>
    <comment>Exp function parameter.</comment>
  </data>
  <data name="AboutExpT" xml:space="preserve">
    <value>Returns a column containing E raised to the power of each corresponding number in a column of numbers. To calculate powers of other bases, use the exponentiation operator (^).</value>
    <comment>Exp function parameter.</comment>
  </data>
  <data name="AboutExp_number" xml:space="preserve">
    <value>A numeric value to process.</value>
  </data>
  <data name="AboutExp_input" xml:space="preserve">
    <value>A column of numeric values to process.</value>
  </data>
  <data name="AboutPi" xml:space="preserve">
    <value>Returns the value of pi.</value>
  </data>
  <data name="AboutRadians" xml:space="preserve">
    <value>Returns the radians value of a number.</value>
    <comment>Radians function parameter.</comment>
  </data>
  <data name="AboutRadiansT" xml:space="preserve">
    <value>Returns the radians values of a column of numbers.</value>
    <comment>Radians function parameter.</comment>
  </data>
  <data name="AboutRadians_number" xml:space="preserve">
    <value>A numeric value (in degrees) to process.</value>
  </data>
  <data name="AboutRadians_input" xml:space="preserve">
    <value>A column of numeric values (in degrees) to process.</value>
  </data>
  <data name="AboutDegrees" xml:space="preserve">
    <value>Returns the degrees value of a number.</value>
    <comment>Degrees function parameter.</comment>
  </data>
  <data name="AboutDegreesT" xml:space="preserve">
    <value>Returns the degrees values of a column of numbers.</value>
    <comment>Degrees function parameter.</comment>
  </data>
  <data name="AboutDegrees_number" xml:space="preserve">
    <value>A numeric value (in radians) to process.</value>
  </data>
  <data name="AboutDegrees_input" xml:space="preserve">
    <value>A column of numeric values (in radians) to process.</value>
  </data>
  <data name="AboutDistinct" xml:space="preserve">
    <value>Evaluates an expression over one or more columns of the table and returns a one-column table that contains distinct (unique) values for the evaluated expression.</value>
  </data>
  <data name="DistinctArg1" xml:space="preserve">
    <value>source</value>
    <comment>function_parameter - First parameter to the Distinct function - the source (collection / table) to have distinct elements retrieved.</comment>
  </data>
  <data name="DistinctArg2" xml:space="preserve">
    <value>expression</value>
    <comment>function_parameter - Second parameter to the Distinct function - the expression that will generate the distinct values to be returned.</comment>
  </data>
  <data name="AboutDistinct_source" xml:space="preserve">
    <value>A table from which distinct values will be extracted.</value>
  </data>
  <data name="AboutDistinct_expression" xml:space="preserve">
    <value>An expression evaluated over each row in the input table, and which provides values for the Distinct operation.</value>
  </data>
  <data name="AboutAtan2" xml:space="preserve">
    <value>Returns the arctangent (in radians) of the specified x- and y-coordinates.</value>
  </data>
  <data name="AboutAtan2Arg1" xml:space="preserve">
    <value>x_coordinate</value>
    <comment>function_parameter - First parameter to the Atan function - the x coordinate for arctangent to be returned. When translating, maintain as a single word (i.e., do not add spaces)</comment>
  </data>
  <data name="AboutAtan2Arg2" xml:space="preserve">
    <value>y_coordinate</value>
    <comment>function_parameter - Second parameter to the Atan function - the y coordinate for arctangent to be returned. When translating, maintain as a single word (i.e., do not add spaces)</comment>
  </data>
  <data name="AboutAtan2_x_coordinate" xml:space="preserve">
    <value>x-coordinate.</value>
  </data>
  <data name="AboutAtan2_y_coordinate" xml:space="preserve">
    <value>y-coordinate.</value>
  </data>
  <data name="AboutSqrt" xml:space="preserve">
    <value>Returns the square root of a number.</value>
    <comment>Description of 'Sqrt' function.</comment>
  </data>
  <data name="AboutSqrtT" xml:space="preserve">
    <value>Returns the square roots of a column of numbers.</value>
    <comment>Description of 'Sqrt' function.</comment>
  </data>
  <data name="AboutSqrt_number" xml:space="preserve">
    <value>A numeric value to process.</value>
  </data>
  <data name="AboutSqrt_input" xml:space="preserve">
    <value>A column of numeric values to process.</value>
  </data>
  <data name="MathFuncArg1" xml:space="preserve">
    <value>number</value>
    <comment>function_parameter - First parameter to generic math functions - the number on which the function will be applied.</comment>
  </data>
  <data name="MathTFuncArg1" xml:space="preserve">
    <value>input</value>
    <comment>function_parameter - First parameter to generic math functions - the column in a table on which the function will be applied.</comment>
  </data>
  <data name="MathFuncArg2" xml:space="preserve">
    <value>modifier</value>
    <comment>function_parameter - Second parameter to generic math functions - the second number on which the function will be applied.</comment>
  </data>
  <data name="MathTFuncArg2" xml:space="preserve">
    <value>modifier</value>
    <comment>function_parameter - Second parameter to generic math functions - the second column in a table on which the function will be applied.</comment>
  </data>
  <data name="AboutLeft" xml:space="preserve">
    <value>Returns the specified number of characters from the start of a text value.</value>
    <comment>Description of 'Left' function.</comment>
  </data>
  <data name="AboutLeftT" xml:space="preserve">
    <value>Returns a column containing the specified number of characters from the start of the text value evaluated per row within the specified table or collection.</value>
    <comment>Description of 'Left' function.</comment>
  </data>
  <data name="AboutLeft_text" xml:space="preserve">
    <value>A text value to extract characters from.</value>
  </data>
  <data name="AboutLeft_num_chars" xml:space="preserve">
    <value>The number of characters to extract.</value>
  </data>
  <data name="AboutLeft_text_column" xml:space="preserve">
    <value>A column of text values to extract characters from.</value>
  </data>
  <data name="AboutRight" xml:space="preserve">
    <value>Returns the specified number of characters from the end of a text value.</value>
    <comment>Description of 'Right' function.</comment>
  </data>
  <data name="AboutRightT" xml:space="preserve">
    <value>Returns a column containing the specified number of characters from the end of the text value evaluated per row within the specified table or collection.</value>
    <comment>Description of 'Right' function.</comment>
  </data>
  <data name="AboutRight_text" xml:space="preserve">
    <value>A text value to extract characters from.</value>
  </data>
  <data name="AboutRight_num_chars" xml:space="preserve">
    <value>The number of characters to extract.</value>
  </data>
  <data name="AboutRight_text_column" xml:space="preserve">
    <value>A column of text values to extract characters from.</value>
  </data>
  <data name="LeftRightArg1" xml:space="preserve">
    <value>text</value>
    <comment>function_parameter - First parameter of the Left/Right functions - the text to retrieve the first characters to the left/right.</comment>
  </data>
  <data name="LeftRightTArg1" xml:space="preserve">
    <value>text_column</value>
    <comment>function_parameter - First parameter of the Left/Right functions - the text column to retrieve the first characters to the left/right. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="LeftRightArg2" xml:space="preserve">
    <value>num_chars</value>
    <comment>function_parameter - Second parameter of the Left/Right functions - the number of characters to retrieve on the left/right of the given text. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="AboutIsBlank" xml:space="preserve">
    <value>Checks whether the expression results in blank, and returns true or false.</value>
    <comment>Description of 'IsBlank' function.</comment>
  </data>
  <data name="IsBlankArg1" xml:space="preserve">
    <value>expression</value>
    <comment>function_parameter - First parameter to the IsBlank function - the expression to be evaluated.</comment>
  </data>
  <data name="AboutIsBlank_expression" xml:space="preserve">
    <value>An expression to be tested.</value>
  </data>
  <data name="AboutIsBlankOrError" xml:space="preserve">
    <value>Checks whether the expression results in blank result or an error, and returns true or false.</value>
    <comment>Description of 'IsBlank' function.</comment>
  </data>
  <data name="IsBlankOrErrorArg1" xml:space="preserve">
    <value>expression</value>
    <comment>function_parameter - First parameter to the IsBlankOrError function - the expression to be evaluated.</comment>
  </data>
  <data name="AboutIsBlankOrError_expression" xml:space="preserve">
    <value>An expression to be tested.</value>
    <comment>Function parameter for IsBlankOrError function.</comment>
  </data>
  <data name="AboutIsEmpty" xml:space="preserve">
    <value>Checks if a collection is empty and returns true or false.</value>
    <comment>Description of 'IsEmpty' function.</comment>
  </data>
  <data name="IsEmptyArg1" xml:space="preserve">
    <value>source</value>
    <comment>function_parameter - First parameter to the IsEmpty function - the source expression to be evaluated.</comment>
  </data>
  <data name="AboutIsEmpty_source" xml:space="preserve">
    <value>A table to be tested.</value>
  </data>
  <data name="AboutShuffle" xml:space="preserve">
    <value>Returns a randomly shuffled copy of the input 'source' table.</value>
    <comment>Description of 'Shuffle' function.</comment>
  </data>
  <data name="ShuffleArg1" xml:space="preserve">
    <value>source</value>
    <comment>function_parameter - First parameter to the Shuffle function - the source to be shuffled.</comment>
  </data>
  <data name="AboutShuffle_source" xml:space="preserve">
    <value>A table to be shuffled.</value>
  </data>
  <data name="AboutLookUp" xml:space="preserve">
    <value>Looks up the first row for which the specified condition evaluates to true and returns the result of expression evaluated within the context of that row if provided an expression and the entire row otherwise.</value>
    <comment>Description of 'LookUp' function.</comment>
  </data>
  <data name="LookUpArg1" xml:space="preserve">
    <value>source</value>
    <comment>function_parameter - First argument to the LookUp function - the source to have the lookup operation performed.</comment>
  </data>
  <data name="LookUpArg2" xml:space="preserve">
    <value>condition</value>
    <comment>function_parameter - Second argument to the LookUp function - the condition on which the lookup operation is performed.</comment>
  </data>
  <data name="LookUpArg3" xml:space="preserve">
    <value>result</value>
    <comment>function_parameter - Third argument to the LookUp function - an expression to be applied to the returned row.</comment>
  </data>
  <data name="AboutLookUp_source" xml:space="preserve">
    <value>A table where values will be looked up.</value>
  </data>
  <data name="AboutLookUp_condition" xml:space="preserve">
    <value>A condition to evaluate for rows in the specified input.</value>
  </data>
  <data name="AboutLookUp_result" xml:space="preserve">
    <value>An expression to evaluate over the row that match the specified condition, and that will provide the result.</value>
  </data>
  <data name="AboutStdevP" xml:space="preserve">
    <value>Calculates standard deviation based on the entire population given as arguments (ignores logical values and text).</value>
    <comment>Description of 'StdevP' function.</comment>
  </data>
  <data name="AboutStdevP_number" xml:space="preserve">
    <value>A number to factor into the standard deviation calculation.</value>
  </data>
  <data name="AboutStdevP_source" xml:space="preserve">
    <value>A table that specifies the population for the standard deviation calculation.</value>
  </data>
  <data name="AboutStdevP_expression" xml:space="preserve">
    <value>An expression evaluated over rows in the input, that specifies values for the standard deviation calculation.</value>
  </data>
  <data name="AboutStdevPT" xml:space="preserve">
    <value>Calculates standard deviation based on the entire population given as a column (ignores logical values and text within the column).</value>
    <comment>Description of 'StdevPT' function.</comment>
  </data>
  <data name="AboutVarP" xml:space="preserve">
    <value>Calculates variance based on the entire population (ignores logical values and text in the population).</value>
    <comment>Description of 'VarP' function.</comment>
  </data>
  <data name="AboutVarP_number" xml:space="preserve">
    <value>A number to factor into the variance calculation.</value>
  </data>
  <data name="AboutVarP_source" xml:space="preserve">
    <value>A table that specifies the population for the variance calculation.</value>
  </data>
  <data name="AboutVarP_expression" xml:space="preserve">
    <value>An expression evaluated over rows in the input, that specifies values for the variance calculation.</value>
  </data>
  <data name="AboutVarPT" xml:space="preserve">
    <value>Calculates variance based on the entire population specified as a column (ignores logical values and text in the column).</value>
    <comment>Description of 'VarPT' function.</comment>
  </data>
  <data name="SetArg1" xml:space="preserve">
    <value>variable</value>
    <comment>function_parameter - First argument to the Set function - the name of a global variable, scoped to the app.</comment>
  </data>
  <data name="AboutSplit" xml:space="preserve">
    <value>Splits a string into substrings using a delimiter.</value>
    <comment>Description of 'Split' function.</comment>
  </data>
  <data name="AboutSplit_text" xml:space="preserve">
    <value>Text to be split into substrings.</value>
    <comment>Description of first argument of the 'Split' function</comment>
  </data>
  <data name="AboutSplit_separator" xml:space="preserve">
    <value>Delimiter text used to split the input text into substrings.</value>
    <comment>Description of second argument of the 'Split' function</comment>
  </data>
  <data name="SplitArg1" xml:space="preserve">
    <value>text</value>
    <comment>function_parameter - First argument to the Split function - the input text that will be split into substrings using SplitArg2 as the delimiter.</comment>
  </data>
  <data name="SplitArg2" xml:space="preserve">
    <value>separator</value>
    <comment>function_parameter - Second argument to the Split function - the delimiter text that is used to split SplitArg1 into substrings.</comment>
  </data>
  <data name="AboutColumnNames" xml:space="preserve">
    <value>Enumerate and returns the column names of an untyped record.</value>
    <comment>Description of 'ColumnNames' function. The term 'record' is used in the context of an object / property bag / set of name/value pairs.</comment>
  </data>
  <data name="ColumnNamesArg1" xml:space="preserve">
    <value>record</value>
    <comment>function_parameter - First argument to the ColumnNames function - the record whose inputs will be returned. The term 'record' is used in the context of an object / property bag / set of name/value pairs.</comment>
  </data>
  <data name="AboutColumnNames_record" xml:space="preserve">
    <value>Record to have its columns enumerated.</value>
    <comment>Description of first argument of the 'ColumnNames' function. The term 'record' is used in the context of an object / property bag / set of name/value pairs.</comment>
  </data>
  <data name="AboutColumn" xml:space="preserve">
    <value>Returns the value of a property of an untyped record, given the column name.</value>
    <comment>Description of 'Column' function. The term 'record' is used in the context of an object / property bag / set of name/value pairs.</comment>
  </data>
  <data name="ColumnArg1" xml:space="preserve">
    <value>record</value>
    <comment>function_parameter - First argument to the Column function - the record to retrieve a column value. The term 'record' is used in the context of an object / property bag / set of name/value pairs.</comment>
  </data>
  <data name="ColumnArg2" xml:space="preserve">
    <value>column_name</value>
    <comment>function_parameter - Second argument to the Column function - name of the column to retrieve from the given record. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="AboutColumn_record" xml:space="preserve">
    <value>Record to retrieve a column value.</value>
    <comment>Description of first argument of the 'Column' function. The term 'record' is used in the context of an object / property bag / set of name/value pairs.</comment>
  </data>
  <data name="AboutColumn_column_name" xml:space="preserve">
    <value>Name of the column of the record to be retrieved.</value>
    <comment>Description of second argument of the 'Column' function. The term 'record' is used in the context of an object / property bag / set of name/value pairs.</comment>
  </data>
  <data name="AboutIsType" xml:space="preserve">
    <value>Returns true if the provided value is of the given type.</value>
    <comment>Description of the 'IsType' function.</comment>
  </data>
  <data name="IsTypeArg1" xml:space="preserve">
    <value>value</value>
    <comment>function_parameter - First argument of the IsType function - The polymorphic value to be inspected.</comment>
  </data>
  <data name="IsTypeArg2" xml:space="preserve">
    <value>typeTable</value>
    <comment>function_parameter - Second argument of the IsType function - The Entity table representing the type that we wish to compare the value to. For example, if the author has a CDS data source named Account, that table could be passed here (eg IsType(myVal, Account)).</comment>
  </data>
  <data name="AboutAsType" xml:space="preserve">
    <value>Uses the provided value as the given type.</value>
    <comment>Description of the 'AsType' function.</comment>
  </data>
  <data name="AsTypeArg1" xml:space="preserve">
    <value>value</value>
    <comment>function_parameter - First argument of the IsType function - The polymorphic value to be used as the new type.</comment>
  </data>
  <data name="AsTypeArg2" xml:space="preserve">
    <value>typeTable</value>
    <comment>function_parameter - Second argument of the AsType function - The Entity table representing the type that we wish the value to be used as. For example, if the author has a CDS data source named Account, that table could be passed here (eg AsType(myVal, Account)).</comment>
  </data>
  <data name="AboutAsType_value" xml:space="preserve">
    <value>The polymorphic record to cast as a new type.</value>
  </data>
  <data name="AboutAsType_typeTable" xml:space="preserve">
    <value>The entity table representing the type we wish the value to be used as.</value>
  </data>
  <data name="AboutWith" xml:space="preserve">
    <value>Executes the formula provided as second parameter using the scope provided by the first.</value>
    <comment>Description of the 'With' function.</comment>
  </data>
  <data name="WithArg1" xml:space="preserve">
    <value>scope</value>
    <comment>function_parameter - First argument of the With function - Record type.</comment>
  </data>
  <data name="WithArg2" xml:space="preserve">
    <value>formula</value>
    <comment>function_parameter - Second argument of the With function - Any Power Apps expression</comment>
  </data>
  <data name="AboutWith_scope" xml:space="preserve">
    <value>The scope with which to call the formula defined by the second parameter.</value>
    <comment>Function argument</comment>
  </data>
  <data name="AboutWith_formula" xml:space="preserve">
    <value>The formula to be called using the scope provided by the first parameter.</value>
    <comment>Function argument</comment>
  </data>
  <data name="AboutSequence" xml:space="preserve">
    <value>Generates a table of sequential numbers</value>
    <comment>Description text for the 'Sequence' function.</comment>
  </data>
  <data name="SequenceArg1" xml:space="preserve">
    <value>records</value>
    <comment>function_parameter - Optional first argument to the Sequence function, number of records in the resulting table</comment>
  </data>
  <data name="AboutSequence_records" xml:space="preserve">
    <value>Number of records in the single column table with name "Value". Maximum 50,000.</value>
    <comment>Description of the first parameter to Sequence</comment>
  </data>
  <data name="SequenceArg2" xml:space="preserve">
    <value>start</value>
    <comment>function_parameter - Second optional argument to the Sequence function, the first number in the resulting table</comment>
  </data>
  <data name="AboutSequence_start" xml:space="preserve">
    <value>Optional. The first number in the sequence. Default 1.</value>
    <comment>Description of the second optional parameter to Sequence</comment>
  </data>
  <data name="SequenceArg3" xml:space="preserve">
    <value>step</value>
    <comment>function_parameter - optional third argument to the Sequence function, the difference between each number in the sequence</comment>
  </data>
  <data name="AboutSequence_step" xml:space="preserve">
    <value>Optional. The amount to increment each subsequent value in the table. Default 1.</value>
    <comment>Description of the third parameter to Sequence</comment>
  </data>
  <data name="ErrInvalidDot" xml:space="preserve">
    <value>Invalid use of '.'</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrUnknownFunction" xml:space="preserve">
    <value>'{0}' is an unknown or unsupported function.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrUnknownNamespaceFunction" xml:space="preserve">
    <value>'{0}' is an unknown or unsupported function in namespace '{1}'.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrUnSupportedComponentBehaviorInvocation" xml:space="preserve">
    <value>Component behavior can only be invoked from within a component.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrUnSupportedComponentDataPropertyAccess" xml:space="preserve">
    <value>Component function property or parameter can only be accessed from within a component or from component output properties.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrUnSupportedComponentFunctionPropertyReferenceNonFunctionPropertyAccess" xml:space="preserve">
    <value>Component function property or parameter can only reference other function properties.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrBadArity" xml:space="preserve">
    <value>Invalid number of arguments: received {0}, expected {1}.</value>
    <comment>Error Message. {0} Will be a number, and {1} will be a number</comment>
  </data>
  <data name="ErrBadArityEven" xml:space="preserve">
    <value>Invalid number of arguments: received {0}, expected an even number.</value>
    <comment>Error Message. {0} Will be a number</comment>
  </data>
  <data name="ErrBadArityOdd" xml:space="preserve">
    <value>Invalid number of arguments: received {0}, expected an odd number.</value>
    <comment>Error Message. {0} Will be a number</comment>
  </data>
  <data name="ErrBadType" xml:space="preserve">
    <value>Invalid argument type.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrBadType_Type" xml:space="preserve">
    <value>Invalid argument type. Cannot use {0} values in this context.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrBadOperatorTypes" xml:space="preserve">
    <value>This operation isn't valid on these types: {0}, {1}.</value>
    <comment>Error message when the user attempts to use an operator (e.g. + or -) on two values that don't make sense together. {0} and {1} will be canonical type representations like "Number" or "Boolean".</comment>
  </data>
  <data name="ErrGuidStrictComparison" xml:space="preserve">
    <value>GUID values can only be compared to other GUID values.</value>
    <comment>Error message when the user attempts to a GUID value is equal to something that isn't a GUID.</comment>
  </data>
  <data name="ErrBadRecordFieldType_FieldName_ExpectedType" xml:space="preserve">
    <value>Invalid type for field '{0}'. Expected field type of '{1}'.</value>
    <comment>Error message shown to the user when a field in a record has the incorrect type.</comment>
  </data>
  <data name="ErrBadType_ExpectedType" xml:space="preserve">
    <value>Invalid argument type. Expecting a {0} value.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrBadType_ExpectedType_ProvidedType" xml:space="preserve">
    <value>Invalid argument type ({1}). Expecting a {0} value instead.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrBadType_VoidExpression" xml:space="preserve">
    <value>A void expression cannot be used in this context.</value>
    <comment>Error message shown to the user when they try to use a void expression in a function argument that requires a value.</comment>
  </data>
  <data name="ErrBadSchema_ExpectedType" xml:space="preserve">
    <value>Invalid argument type. Expecting a {0} value, but of a different schema.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrBadType_ExpectedTypesCSV" xml:space="preserve">
    <value>Invalid argument type. Expecting one of the following: {0}.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrInvalidArgs_Func" xml:space="preserve">
    <value>The function '{0}' has some invalid arguments.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrNeedTable_Func" xml:space="preserve">
    <value>The first argument of '{0}' should be a table.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrInvalidPropertyAccess" xml:space="preserve">
    <value>Property expects a required parameter. Please use parentheses to pass the required parameter.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrNeedTableCol_Func" xml:space="preserve">
    <value>The first argument of '{0}' should be a one-column table.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrInvalidSchemaNeedTypeCol_Col" xml:space="preserve">
    <value>Invalid schema, expected a column of {0} values for '{1}'.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrInvalidSchemaNeedCol" xml:space="preserve">
    <value>Invalid schema, expected a one-column table.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrNeedRecord" xml:space="preserve">
    <value>Cannot use a non-record value in this context.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrNeedRecord_Arg" xml:space="preserve">
    <value>Cannot use a non-record value in this context: '{0}'.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrNeedRecordOrTable" xml:space="preserve">
    <value>Only record or table values can be used in this context.</value>
    <comment>Error Message. If a record or table is expected.</comment>
  </data>
  <data name="ErrIncompatibleRecord" xml:space="preserve">
    <value>Cannot use this record. It may contain colliding fields of incompatible types.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrNeedRecord_Func" xml:space="preserve">
    <value>The first argument of '{0}' should be a record.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrNeedEntity_EntityName" xml:space="preserve">
    <value>Using this option set as an enumeration value or in the Choices function requires that the '{0}' entity be added as a Data Source. To add, use the View menu and then select Data sources.</value>
    <comment>Error Message. {Locked=Choices} Indicates a given entity must be imported as a first class entity. This is a result of usage of an option set that is exposed via a relationship in a CDS 2 entity.</comment>
  </data>
  <data name="ErrNotAccessibleInCurrentContext" xml:space="preserve">
    <value>The specified property is not accessible in this context.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrInternalControlInInputProperty" xml:space="preserve">
    <value>Controls inside a component can't be referenced in that same component's input properties.</value>
    <comment>Error Message when a user attempts to use a control inside the formula for a component input property.</comment>
  </data>
  <data name="ErrColumnNotAccessibleInCurrentContext" xml:space="preserve">
    <value>The specified column is not accessible in this context.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="WrnRowScopeOneToNExpandNumberOfCalls" xml:space="preserve">
    <value>A One-to-Many or Many-to-Many relationship is being referenced in this function's record scope.  This may result in a large number of calls to your data source that can impact performance.</value>
    <comment>Warning Message.</comment>
  </data>
  <data name="ErrNumberTooLarge" xml:space="preserve">
    <value>Numeric value is too large.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrReservedKeyword" xml:space="preserve">
    <value>Use of a reserved word that is currently not supported.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrTextTooLarge" xml:space="preserve">
    <value>Expression can't be more than {0} characters. The expression is {1} characters.</value>
    <comment>Error Message when the expression text is too long.</comment>
  </data>
  <data name="ErrTextFormatTooLarge" xml:space="preserve">
    <value>Format string size can't be more than {0} characters.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrTextInvalidFormat" xml:space="preserve">
    <value>Invalid format.</value>
    <comment>Error Message returned by the Text function when the format passed to it is invalid.</comment>
  </data>
  <data name="ErrTextInvalidArgDateTime" xml:space="preserve">
    <value>The argument does not represent a valid date or time value.</value>
    <comment>Error Message returned by the Text function when the number to date format exceeds the max days to add.</comment>
  </data>
  <data name="ErrInvalidDataSource" xml:space="preserve">
    <value>This Data source is invalid. Please fix the error in "Data sources" pane by clicking "Content -&gt; Data sources" or "View -&gt; Options"</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrExpectedDataSourceRestriction" xml:space="preserve">
    <value>Expected a data source identifier to restrict the inline record.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrIncompatibleTypes" xml:space="preserve">
    <value>The given types are incompatible.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrTypeError_Ex1_Ex2_Found" xml:space="preserve">
    <value>The type of this argument '{2}' does not match one of the expected types '{0}' or '{1}'.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrTypeError_Arg_Expected_Found" xml:space="preserve">
    <value>The type of this argument '{0}' does not match the expected type '{1}'. Found type '{2}'.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrTypeError_WrongType" xml:space="preserve">
    <value>The type of this expression does not match the expected type '{0}'. Found type '{1}'.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrTypeErrorRecordIncompatibleWithSource" xml:space="preserve">
    <value>The type of the record is incompatible with the source.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrExpectedStringLiteralArg_Name" xml:space="preserve">
    <value>Argument '{0}' is invalid, expected a text literal.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrArgNotAValidIdentifier_Name" xml:space="preserve">
    <value>Argument '{0}' is not a valid identifier.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrColExists_Name" xml:space="preserve">
    <value>A column named '{0}' already exists.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrColConflict_Name" xml:space="preserve">
    <value>Column name conflict for '{0}'.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrColDNE_Name" xml:space="preserve">
    <value>The specified column '{0}' does not exist.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrColumnDoesNotExist_Name_Similar" xml:space="preserve">
    <value>The specified column '{0}' does not exist. The column with the most similar name is '{1}'.</value>
    <comment>Error message when attempting to put a column that does not exist into a table. {0} has the column display name that doesn't exist, and {1} has the most similar column name in the table.</comment>
  </data>
  <data name="ErrSortIncorrectOrder" xml:space="preserve">
    <value>The sort order is incorrect for the type of the expression.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrSortWrongType" xml:space="preserve">
    <value>Cannot sort on the expression type.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrDistinctWrongType" xml:space="preserve">
    <value>Cannot apply distinct on the expression type.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrFunctionDoesNotAcceptThisType_Function_Expected" xml:space="preserve">
    <value>Type error: {0} expects either {1} or a table column of {1} type.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrIncorrectFormat_Func" xml:space="preserve">
    <value>Incorrect format specifier for '{0}'.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrAsyncLambda" xml:space="preserve">
    <value>Asynchronous invocations cannot be used in conditions and value functions.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrValueMustBeFullyQualified" xml:space="preserve">
    <value>This is a namespace, you can access its members using the '.' operator.</value>
    <comment>Error message shown when a maker tries to use fully qualified value name as a First name node only</comment>
  </data>
  <data name="ErrScopeModificationLambda" xml:space="preserve">
    <value>This function cannot operate on the same data source that is used in {0}.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrFunctionDisallowedWithinNondeterministicOperationOrder" xml:space="preserve">
    <value>This function cannot be invoked within {0}.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrAsTypeAndIsTypeExpectConnectedDataSource" xml:space="preserve">
    <value>Incorrect argument. This formula expects a table from a connected data source. The AsType and IsType functions require connected data sources.</value>
    <comment>{Locked=AsType}{Locked=IsType} Error message provided when the user attempts to use a non-Connected data source table as the second argument to AsType or IsType.</comment>
  </data>
  <data name="InfoMessage" xml:space="preserve">
    <value>Message: </value>
    <comment>Message Label.</comment>
  </data>
  <data name="InfoNode_Node" xml:space="preserve">
    <value>Node: {0}</value>
    <comment>Node Label.</comment>
  </data>
  <data name="InfoTok_Tok" xml:space="preserve">
    <value>Tok: {0}</value>
    <comment>Tok Label.</comment>
  </data>
  <data name="FormatSpan_Min_Lim" xml:space="preserve">
    <value>({0},{1}) </value>
    <comment>Format String.</comment>
  </data>
  <data name="FormatErrorSeparator" xml:space="preserve">
    <value>, </value>
    <comment>Format String.</comment>
  </data>
  <data name="AboutDate" xml:space="preserve">
    <value>Returns the number that represents the date in Power Apps date-time code.</value>
    <comment>Description of 'Date' function.</comment>
  </data>
  <data name="DateArg1" xml:space="preserve">
    <value>year</value>
    <comment>function_parameter - First parameter for the Date function - the year.</comment>
  </data>
  <data name="DateArg2" xml:space="preserve">
    <value>month</value>
    <comment>function_parameter - Second parameter for the Date function - the month.</comment>
  </data>
  <data name="DateArg3" xml:space="preserve">
    <value>day</value>
    <comment>function_parameter - Third parameter for the Date function - the day.</comment>
  </data>
  <data name="AboutDate_year" xml:space="preserve">
    <value>The year.</value>
  </data>
  <data name="AboutDate_month" xml:space="preserve">
    <value>The month.</value>
  </data>
  <data name="AboutDate_day" xml:space="preserve">
    <value>The day.</value>
  </data>
  <data name="AboutTime" xml:space="preserve">
    <value>Converts hours, minutes and seconds into a decimal number.</value>
    <comment>Description of 'Time' function.</comment>
  </data>
  <data name="TimeArg1" xml:space="preserve">
    <value>hour</value>
    <comment>function_parameter - First parameter for the Time function - the hour.</comment>
  </data>
  <data name="TimeArg2" xml:space="preserve">
    <value>minute</value>
    <comment>function_parameter - Second parameter for the Time function - the minute.</comment>
  </data>
  <data name="TimeArg3" xml:space="preserve">
    <value>second</value>
    <comment>function_parameter - Third parameter for the Time function - the second.</comment>
  </data>
  <data name="TimeArg4" xml:space="preserve">
    <value>millisecond</value>
    <comment>function_parameter - Fourth parameter for the Time function - the milliseconds.</comment>
  </data>
  <data name="AboutTime_hour" xml:space="preserve">
    <value>The hour component.</value>
  </data>
  <data name="AboutTime_minute" xml:space="preserve">
    <value>The minute component.</value>
  </data>
  <data name="AboutTime_second" xml:space="preserve">
    <value>The second component.</value>
  </data>
  <data name="AboutTime_millisecond" xml:space="preserve">
    <value>The millisecond component.</value>
  </data>
  <data name="AboutDateTime" xml:space="preserve">
    <value>Creates a value that represents an instant in time, expressed as a date and time of the day.</value>
    <comment>Description of 'DateTime' function.</comment>
  </data>
  <data name="AboutDateTime_year" xml:space="preserve">
    <value>The year.</value>
    <comment>Description of the first parameter to the 'DateTime' function: the year of the date/time value being created.</comment>
  </data>
  <data name="AboutDateTime_month" xml:space="preserve">
    <value>The month.</value>
    <comment>Description of the second parameter to the 'DateTime' function: the month of the date/time value being created.</comment>
  </data>
  <data name="AboutDateTime_day" xml:space="preserve">
    <value>The day.</value>
    <comment>Description of the third parameter to the 'DateTime' function: the day of the date/time value being created.</comment>
  </data>
  <data name="AboutDateTime_hour" xml:space="preserve">
    <value>The hour.</value>
    <comment>Description of the fourth parameter to the 'DateTime' function: the hour of the date/time value being created.</comment>
  </data>
  <data name="AboutDateTime_minute" xml:space="preserve">
    <value>The minute.</value>
    <comment>Description of the fifth parameter to the 'DateTime' function: the minute of the date/time value being created.</comment>
  </data>
  <data name="AboutDateTime_second" xml:space="preserve">
    <value>The second.</value>
    <comment>Description of the sixth parameter to the 'DateTime' function: the second of the date/time value being created.</comment>
  </data>
  <data name="AboutDateTime_millisecond" xml:space="preserve">
    <value>The milliseconds.</value>
    <comment>Description of the seventh parameter to the 'DateTime' function: the milliseconds of the date/time value being created.</comment>
  </data>
  <data name="AboutYear" xml:space="preserve">
    <value>Year returns the year of a given date.</value>
    <comment>Description of 'Year' function.</comment>
  </data>
  <data name="YearArg1" xml:space="preserve">
    <value>date_time</value>
    <comment>function_parameter - First parameter for the Year function - the date to extract the year component. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="AboutYear_date_time" xml:space="preserve">
    <value>A date value from which the year component will be extracted.</value>
  </data>
  <data name="AboutMonth" xml:space="preserve">
    <value>Returns the month, a number from 1 (January) to 12 (December).</value>
    <comment>Description of 'Month' function.</comment>
  </data>
  <data name="MonthArg1" xml:space="preserve">
    <value>date_time</value>
    <comment>function_parameter - First parameter for the Month function - the date to extract the month component. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="AboutMonth_date_time" xml:space="preserve">
    <value>The date value from which the month component will be extracted.</value>
  </data>
  <data name="AboutDay" xml:space="preserve">
    <value>Day returns the day of the month, a number from 1 to 31.</value>
    <comment>Description of 'Day' function.</comment>
  </data>
  <data name="DayArg1" xml:space="preserve">
    <value>date_time</value>
    <comment>function_parameter - First parameter for the Day function - the date to extract the day component. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="AboutDay_date_time" xml:space="preserve">
    <value>The date value from which the day component will be extracted.</value>
  </data>
  <data name="AboutHour" xml:space="preserve">
    <value>Hour returns the hour as a number between 0 (12:00:00 AM) and 23 (11:00:00 PM).</value>
    <comment>Description of 'Hour' function.</comment>
  </data>
  <data name="HourArg1" xml:space="preserve">
    <value>date_time</value>
    <comment>function_parameter - First parameter for the Hour function - the date to extract the hour component. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="AboutHour_date_time" xml:space="preserve">
    <value>The date or time value from which the component will be extracted.</value>
  </data>
  <data name="AboutMinute" xml:space="preserve">
    <value>Returns the minute, a number from 0 to 59.</value>
    <comment>Description of 'Minute' function.</comment>
  </data>
  <data name="MinuteArg1" xml:space="preserve">
    <value>date_time</value>
    <comment>function_parameter - First parameter for the Minute function - the date to extract the minute component. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="AboutMinute_date_time" xml:space="preserve">
    <value>The date or time value from which the minute component will be extracted.</value>
  </data>
  <data name="AboutSecond" xml:space="preserve">
    <value>Returns the second, a number from 0 to 59.</value>
    <comment>Description of 'Second' function.</comment>
  </data>
  <data name="SecondArg1" xml:space="preserve">
    <value>date_time</value>
    <comment>function_parameter - First parameter for the Second function - the date to extract the second component. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="AboutSecond_date_time" xml:space="preserve">
    <value>The date or time value from which the second component will be extracted.</value>
  </data>
  <data name="AboutWeekday" xml:space="preserve">
    <value>Returns the weekday of a datetime value. By default, the result ranges from 1 (Sunday) to 7 (Saturday). You can specify a different range with a StartOfWeek enumeration value or a Microsoft Excel Weekday function code.</value>
    <comment>Description of 'Weekday' function.</comment>
  </data>
  <data name="WeekdayArg1" xml:space="preserve">
    <value>date</value>
    <comment>function_parameter - First parameter for the Weekday function - a date value for which the day of the week will be calculated.</comment>
  </data>
  <data name="WeekdayArg2" xml:space="preserve">
    <value>start_of_week</value>
    <comment>function_parameter - Second (optional) parameter for the Weekday function - the weekday that is used to start the week. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="AboutWeekday_date" xml:space="preserve">
    <value>A date value for which the day of the week will be calculated.</value>
  </data>
  <data name="AboutWeekday_start_of_week" xml:space="preserve">
    <value>A value from the StartOfWeek enumeration or a number from the corresponding Excel function to indicate how the days of the week should be numbered.</value>
    <comment>{Locked=StartOfWeek}</comment>
  </data>
  <data name="AboutCalendar__MonthsLong" xml:space="preserve">
    <value>Returns a single column table containing the full names of each month.</value>
    <comment>Description of 'WeekdaysLong' function.</comment>
  </data>
  <data name="AboutCalendar__MonthsShort" xml:space="preserve">
    <value>Returns a single column table containing the shorthand names of each month.</value>
    <comment>Description of 'WeekdaysLong' function.</comment>
  </data>
  <data name="AboutCalendar__WeekdaysLong" xml:space="preserve">
    <value>Returns a single column table containing the full names of each day of the week.</value>
    <comment>Description of 'WeekdaysLong' function.</comment>
  </data>
  <data name="AboutCalendar__WeekdaysShort" xml:space="preserve">
    <value>Returns a single column table containing the shorthand names of each day of the week.</value>
    <comment>Description of 'WeekdaysLong' function.</comment>
  </data>
  <data name="AboutClock__AmPm" xml:space="preserve">
    <value>Returns a single column table containing the uppercase designations for before and after noon.</value>
    <comment>Description of 'AmPm' function.</comment>
  </data>
  <data name="AboutClock__AmPmShort" xml:space="preserve">
    <value>Returns a single column table containing the abbreviated uppercase designations for before and after noon.</value>
    <comment>Description of 'AmPmShort' function.</comment>
  </data>
  <data name="AboutClock__IsClock24" xml:space="preserve">
    <value>Returns a boolean value indicating whether or not the clock uses 24 hour time.</value>
    <comment>Description of 'IsClock24' function.</comment>
  </data>
  <data name="AboutDateValue" xml:space="preserve">
    <value>Converts a date in the form of text to a number that represents the date in Power Apps date-time code.</value>
    <comment>Description of 'DateValue' function.</comment>
  </data>
  <data name="DateValueArg1" xml:space="preserve">
    <value>date_text</value>
    <comment>function_parameter - First argument to the DateValue function - the text to be parsed as a date. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="DateValueArg2" xml:space="preserve">
    <value>language_code</value>
    <comment>function_parameter - Second argument to the DateValue function - the language code to be used when parsing the text as a date. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="AboutDateValue_date_text" xml:space="preserve">
    <value>A text representation of a date/time stamp, in a platform-supported format.</value>
  </data>
  <data name="AboutDateValue_language_code" xml:space="preserve">
    <value>Language code of the supplied text.</value>
  </data>
  <data name="AboutTimeValue" xml:space="preserve">
    <value>Converts a time in the form of text to a number that represents the date in Microsoft Power Apps date-time code, ignoring any date portion.</value>
    <comment>Description of 'TimeValue' function.</comment>
  </data>
  <data name="TimeValueArg1" xml:space="preserve">
    <value>time_text</value>
    <comment>function_parameter - First argument to the TimeValue function - the text to be parsed as a time. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="TimeValueArg2" xml:space="preserve">
    <value>language_code</value>
    <comment>function_parameter - Second argument to the TimeValue function - the language code to be used when parsing the text as a date. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="AboutTimeValue_time_text" xml:space="preserve">
    <value>A text representation of a date/time stamp, in a platform supported format.</value>
  </data>
  <data name="AboutTimeValue_language_code" xml:space="preserve">
    <value>Language code of the supplied text.</value>
  </data>
  <data name="ErrAutoRefreshNotAllowed" xml:space="preserve">
    <value>Automatically refreshing service functions cannot be used in Action rules.</value>
    <comment>Error message when trying to use auto-refresh functions in Action rules.</comment>
  </data>
  <data name="ErrMultipleValuesForField_Name" xml:space="preserve">
    <value>A field named '{0}' was specified more than once in this record.</value>
    <comment>Parse error on duplicate field definitions.</comment>
  </data>
  <data name="WarnColumnNameSpecifiedMultipleTimes_Name" xml:space="preserve">
    <value>A column named '{0}' was specified more than once.</value>
    <comment>Duplicate columns.</comment>
  </data>
  <data name="WarnLiteralPredicate" xml:space="preserve">
    <value>Warning: This predicate is a literal value and does not reference the input table.</value>
    <comment>Warning given when a literal predicate is given to a function operating over a table.</comment>
  </data>
  <data name="WarnDynamicMetadata" xml:space="preserve">
    <value>Warning: Select "Capture Schema" at the bottom of the expanded formula bar to set and refresh this method's result schema. Otherwise this method will return no result.</value>
    <comment>Warning given when service function returns dynamic metadata.</comment>
  </data>
  <data name="FindArg1" xml:space="preserve">
    <value>find_text</value>
    <comment>function_parameter - First argument of the Find function - the text to search for. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="FindArg2" xml:space="preserve">
    <value>within_text</value>
    <comment>function_parameter - Second argument of the Find function - the text to be searched. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="FindArg3" xml:space="preserve">
    <value>start_num</value>
    <comment>function_parameter - Third argument of the Find function - the initial position in the text to be searched. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="AboutFind_find_text" xml:space="preserve">
    <value>A text value to look for.</value>
  </data>
  <data name="AboutFind_within_text" xml:space="preserve">
    <value>The text value to look in.</value>
  </data>
  <data name="AboutFind_start_num" xml:space="preserve">
    <value>An optional starting position.</value>
  </data>
  <data name="AboutFind" xml:space="preserve">
    <value>Returns the starting position of one text value within another text value. Find is case sensitive.</value>
    <comment>Description of 'Find' function</comment>
  </data>
  <data name="AboutFindT" xml:space="preserve">
    <value>Returns a column of starting positions of one text value (or column of strings) within another text value (or column of strings). Find is case sensitive.</value>
    <comment>Description of 'Find' function</comment>
  </data>
  <data name="FindTArg1" xml:space="preserve">
    <value>find_text_or_column</value>
    <comment>function_parameter - First argument of the Find function - the text to search for. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="FindTArg2" xml:space="preserve">
    <value>within_text_or_column</value>
    <comment>function_parameter - Second argument of the Find function - the text to be searched. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="FindTArg3" xml:space="preserve">
    <value>start_num</value>
    <comment>function_parameter - Third argument of the Find function - the initial position in the text to be searched. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="AboutFind_find_text_or_column" xml:space="preserve">
    <value>A text value (or column of text values) to look for.</value>
  </data>
  <data name="AboutFind_within_text_or_column" xml:space="preserve">
    <value>The text value (or column of text values) to look in.</value>
  </data>
  <data name="AboutColorValue" xml:space="preserve">
    <value>Returns the color corresponding to the given color string.</value>
    <comment>Description of 'ColorValue' function</comment>
  </data>
  <data name="ColorValueArg1" xml:space="preserve">
    <value>color_text</value>
    <comment>function_parameter - First argument of the ColorValue function - the text to be converted to a color value. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="AboutColorValue_color_text" xml:space="preserve">
    <value>A color specified by name, such as "Blue", or using the standard 6-digit hex notation #rrggbb.</value>
  </data>
  <data name="ErrInvalidJsonPointer" xml:space="preserve">
    <value>Invalid json pointer.</value>
    <comment>Generic json pointer parsing error.</comment>
  </data>
  <data name="None" xml:space="preserve">
    <value>None</value>
    <comment>Function category name - function without pre-defined categories.</comment>
  </data>
  <data name="Text" xml:space="preserve">
    <value>Text</value>
    <comment>Function category name - function that works on text values.</comment>
  </data>
  <data name="Logical" xml:space="preserve">
    <value>Logical</value>
    <comment>Function category name - function that works on Boolean values.</comment>
  </data>
  <data name="Table" xml:space="preserve">
    <value>Table</value>
    <comment>Function category name - function that works on tabular data.</comment>
  </data>
  <data name="Behavior" xml:space="preserve">
    <value>Behavior</value>
    <comment>Function category name - function that needs to be executed in behavior contexts (i.e., not purely functional, with side effects).</comment>
  </data>
  <data name="DateTime" xml:space="preserve">
    <value>Date and time</value>
    <comment>Function category name - function that works on date/time values.</comment>
  </data>
  <data name="MathAndStat" xml:space="preserve">
    <value>Math and statistical</value>
    <comment>Function category name - functions for mathematical and/or statistical operations.</comment>
  </data>
  <data name="UserDefined" xml:space="preserve">
    <value>Defined by the user</value>
    <comment>Function category name - function that is defined by the user, not a built-in function.</comment>
  </data>
  <data name="Information" xml:space="preserve">
    <value>Information</value>
    <comment>Function category name - function that returns information about the environment where it is running.</comment>
  </data>
  <data name="Color" xml:space="preserve">
    <value>Color</value>
    <comment>Function category name - function that works on or returns color values.</comment>
  </data>
  <data name="REST" xml:space="preserve">
    <value>Services</value>
    <comment>Function category name - function that comes from a web service, typically using REST (REpresentational State Transfer) communication.</comment>
  </data>
  <data name="Component" xml:space="preserve">
    <value>Component</value>
    <comment>Function category name - function defined in components within the environment where it is running.</comment>
  </data>
  <data name="InvalidXml_ElementMissingAttribute_ElemName_AttrName" xml:space="preserve">
    <value>The element '{0}' is missing attribute '{1}'.</value>
    <comment>Invalid xml error message.</comment>
  </data>
  <data name="InvalidXml_AttributeCannotBeEmpty_AttrName" xml:space="preserve">
    <value>The attribute '{0}' cannot be an empty string.</value>
    <comment>Invalid xml error message.</comment>
  </data>
  <data name="InvalidXml_AttributeValueInvalidGuid_AttrName_Value" xml:space="preserve">
    <value>The attribute '{0}' has an invalid GUID value '{1}'.</value>
    <comment>Invalid xml error message.</comment>
  </data>
  <data name="InvalidJson_MissingRequiredNamedValue_PropName" xml:space="preserve">
    <value>The property '{0}' is missing.</value>
    <comment>Invalid Json value error message.</comment>
  </data>
  <data name="InvalidJson_NamedValueTypeNotCorrect_PropName_ExpectedType_ActualType" xml:space="preserve">
    <value>The property '{0}' has an invalid type value: {2}. Expected type value: {1}.</value>
    <comment>Invalid Json value error message.</comment>
  </data>
  <data name="InvalidJson_NamedValueCannotBeEmpty_PropName" xml:space="preserve">
    <value>The property '{0}' cannot be empty.</value>
    <comment>Invalid Json value error message.</comment>
  </data>
  <data name="InvalidJson_NamedEnumStringInvalid_PropName_ActualValue" xml:space="preserve">
    <value>The enum '{0}' is expected to have a valid value but its value {1} is out of range for the enum.</value>
    <comment>Invalid Json enum value error message indicating property does not support value. (ex: property 'dayOfWeek' with invalid value 'Mondayday')</comment>
  </data>
  <data name="InvalidJson_NamedIntegerOverflow_PropName_ActualValue" xml:space="preserve">
    <value>The property '{0}' is expected to have an integer value but its value {1} is out of range.</value>
    <comment>Invalid Json integer value error message.</comment>
  </data>
  <data name="InvalidJson_IndexedValueTypeNotCorrect_Index_ExpectedType_ActualType" xml:space="preserve">
    <value>The item at index {0} has an invalid type value: {2}. Expected type value: {1}.</value>
  </data>
  <data name="InvalidJson_IndexedValueMustBeNonEmpty_Index" xml:space="preserve">
    <value>The item at index {0} must be a non-empty string.</value>
  </data>
  <data name="AboutDateAdd" xml:space="preserve">
    <value>Add the specified number of units to a date.</value>
    <comment>Description of 'DateAdd' function.</comment>
  </data>
  <data name="AboutDateDiff" xml:space="preserve">
    <value>Calculate the difference between two dates.</value>
    <comment>Description of 'DateDiff' function</comment>
  </data>
  <data name="DateAddArg1" xml:space="preserve">
    <value>date</value>
    <comment>function_parameter - First argument of the DateAdd function - the original date.</comment>
  </data>
  <data name="DateAddArg2" xml:space="preserve">
    <value>number_of_units</value>
    <comment>function_parameter - Second argument of the DateAdd function - the number of units (days, months, etc.) to be added. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="DateAddArg3" xml:space="preserve">
    <value>unit</value>
    <comment>function_parameter - Third argument of the DateAdd function - the type of unit (days, months, etc.) to be added.</comment>
  </data>
  <data name="AboutDateAdd_date" xml:space="preserve">
    <value>A reference date value.</value>
  </data>
  <data name="AboutDateAdd_number_of_units" xml:space="preserve">
    <value>A number of units to add. The number can be negative.</value>
  </data>
  <data name="AboutDateAdd_unit" xml:space="preserve">
    <value>The unit to use, which can be one of TimeUnit.Years, TimeUnit.Quarters, TimeUnit.Months, TimeUnit.Days, TimeUnit.Hours, TimeUnit.Minutes, TimeUnit.Seconds, TimeUnit.Milliseconds.</value>
    <comment>{Locked=TimeUnit.Years}{Locked=TimeUnit.Quarters}{Locked=TimeUnit.Months}{Locked=TimeUnit.Days}{Locked=TimeUnit.Hours}{Locked=TimeUnit.Minutes}{Locked=TimeUnit.Seconds}{Locked=TimeUnit.Milliseconds}</comment>
  </data>
  <data name="DateDiffArg1" xml:space="preserve">
    <value>start_date</value>
    <comment>function_parameter - First argument of the DateDiff function - the start date. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="DateDiffArg2" xml:space="preserve">
    <value>end_date</value>
    <comment>function_parameter - Second argument of the DateDiff function - the end date. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="DateDiffArg3" xml:space="preserve">
    <value>unit</value>
    <comment>function_parameter - Third argument of the DateDiff function - the type of unit (days, months, etc.) to return the date difference.</comment>
  </data>
  <data name="AboutDateDiff_start_date" xml:space="preserve">
    <value>A start date for the difference operation.</value>
  </data>
  <data name="AboutDateDiff_end_date" xml:space="preserve">
    <value>An end date for the different operation.</value>
  </data>
  <data name="AboutDateDiff_unit" xml:space="preserve">
    <value>The unit to express the result in, which can be one of TimeUnit.Years, TimeUnit.Quarters, TimeUnit.Months, TimeUnit.Days, TimeUnit.Hours, TimeUnit.Minutes, TimeUnit.Seconds, TimeUnit.Milliseconds.</value>
    <comment>{Locked=TimeUnit.Years}{Locked=TimeUnit.Quarters}{Locked=TimeUnit.Months}{Locked=TimeUnit.Days}{Locked=TimeUnit.Hours}{Locked=TimeUnit.Minutes}{Locked=TimeUnit.Seconds}{Locked=TimeUnit.Milliseconds}</comment>
  </data>
  <data name="AboutDateAddT" xml:space="preserve">
    <value>Add the specified number of units to a column of dates.</value>
    <comment>Description of 'DateAdd' table function.</comment>
  </data>
  <data name="AboutDateDiffT" xml:space="preserve">
    <value>Calculate the difference between two columns of dates.</value>
    <comment>Description of 'DateDiff' table function</comment>
  </data>
  <data name="DateAddTArg1" xml:space="preserve">
    <value>date_column</value>
    <comment>function_parameter - First argument of the DateAdd function - the table column that contains date values. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="DateAddTArg2" xml:space="preserve">
    <value>number_of_units</value>
    <comment>function_parameter - Second argument of the DateAdd function - the number of units (days, months, etc.) to be added. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="DateAddTArg3" xml:space="preserve">
    <value>unit</value>
    <comment>function_parameter - Third argument of the DateAdd function - the type of unit (days, months, etc.) to be added.</comment>
  </data>
  <data name="AboutDateAdd_date_column" xml:space="preserve">
    <value>A column of date values.</value>
  </data>
  <data name="DateDiffTArg1" xml:space="preserve">
    <value>start_date_column</value>
    <comment>function_parameter - First argument of the DateDiff function - the table column that contains the start dates. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="DateDiffTArg2" xml:space="preserve">
    <value>end_date_column</value>
    <comment>function_parameter - Second argument of the DateDiff function - the table column that contains the end dates. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="DateDiffTArg3" xml:space="preserve">
    <value>unit</value>
    <comment>function_parameter - Third argument of the DateDiff function - the type of unit (days, months, etc.) to return the date difference.</comment>
  </data>
  <data name="AboutDateDiff_start_date_column" xml:space="preserve">
    <value>A column of start dates for the difference operation.</value>
  </data>
  <data name="AboutDateDiff_end_date_column" xml:space="preserve">
    <value>A column of end dates for the difference operation..</value>
  </data>
  <data name="AboutChar" xml:space="preserve">
    <value>Returns the character specified by the code number from the character set on your platform.</value>
    <comment>Description of 'Char' function.</comment>
  </data>
  <data name="CharArg1" xml:space="preserve">
    <value>number</value>
    <comment>function_parameter - First argument of the Char function - the number from the character set in your platform to be converted to a character.</comment>
  </data>
  <data name="AboutChar_number" xml:space="preserve">
    <value>A code number from the character set on your platform.</value>
  </data>
  <data name="AboutCharT" xml:space="preserve">
    <value>Returns a table of characters specified by the code numbers from the character set on your platform.</value>
    <comment>Description of 'Char' function (table overload).</comment>
  </data>
  <data name="CharTArg1" xml:space="preserve">
    <value>column_of_numbers</value>
    <comment>function_parameter - First argument of the Char function - a table column of code numbers from the character set in your platform to be converted to characters. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="AboutChar_column_of_numbers" xml:space="preserve">
    <value>A column of code numbers from the character set on your platform.</value>
  </data>
  <data name="AboutParseJSON" xml:space="preserve">
    <value>Converts a JSON string into an object.</value>
    <comment>Description of 'ParseJSON' function.</comment>
  </data>
  <data name="ParseJSONArg1" xml:space="preserve">
    <value>input</value>
    <comment>function_parameter - First argument of the ParseJSON function - String type.</comment>
  </data>
  <data name="AboutParseJSON_input" xml:space="preserve">
    <value>A JSON string to process.</value>
  </data>
  <data name="AboutIndex" xml:space="preserve">
    <value>Returns the record in a table at a given index.</value>
    <comment>Description of 'Index' function.</comment>
  </data>
  <data name="IndexArg1" xml:space="preserve">
    <value>table</value>
    <comment>function_parameter - First argument of the Index function - Table type.</comment>
  </data>
  <data name="IndexArg2" xml:space="preserve">
    <value>index</value>
    <comment>function_parameter - Second argument of the Index function - Number type.</comment>
  </data>
  <data name="AboutIndex_table" xml:space="preserve">
    <value>A table.</value>
  </data>
  <data name="AboutIndex_index" xml:space="preserve">
    <value>The index of the record to be retrieved.</value>
    <comment>function_parameter - Second argument of the Index function - Number type.</comment>
  </data>
  <data name="ListItemTemplate_Single_Name" xml:space="preserve">
    <value>Single</value>
    <comment>{Locked} List item single line template enum name.</comment>
  </data>
  <data name="ListItemTemplate_Double_Name" xml:space="preserve">
    <value>Double</value>
    <comment>{Locked} List item double line template enum name.</comment>
  </data>
  <data name="ListItemTemplate_Person_Name" xml:space="preserve">
    <value>Person</value>
    <comment>{Locked} List item person (image with details) template enum name.</comment>
  </data>
  <data name="Screen_Name_DisplayName" xml:space="preserve">
    <value>Name</value>
    <comment>Display text for the Name property of the screen</comment>
  </data>
  <data name="Screen_Printing_DisplayName" xml:space="preserve">
    <value>Printing</value>
    <comment>Display text for the Printing property of the screen</comment>
  </data>
  <data name="Screen_ImagePosition_DisplayName" xml:space="preserve">
    <value>Image position</value>
    <comment>Display text for position of background image on the screen.</comment>
  </data>
  <data name="Screen_Size_DisplayName" xml:space="preserve">
    <value>Size</value>
    <comment>Display text for the property to fetch the current size of the screen.</comment>
  </data>
  <data name="barcode_Type_DisplayName" xml:space="preserve">
    <value>Barcode type</value>
    <comment>Display text for Barcode Type</comment>
  </data>
  <data name="BarcodeType_Auto_Name" xml:space="preserve">
    <value>Auto</value>
    <comment>{Locked} Locale-specific name for this enum value.</comment>
  </data>
  <data name="BarcodeType_Aztec_Name" xml:space="preserve">
    <value>Aztec</value>
    <comment>{Locked} Locale-specific name for this enum value.</comment>
  </data>
  <data name="BarcodeType_Codabar_Name" xml:space="preserve">
    <value>Codabar</value>
    <comment>{Locked} Locale-specific name for this enum value.</comment>
  </data>
  <data name="BarcodeType_DataMatrix_Name" xml:space="preserve">
    <value>DataMatrix</value>
    <comment>{Locked} Locale-specific name for this enum value.</comment>
  </data>
  <data name="BarcodeType_Ean_Name" xml:space="preserve">
    <value>Ean</value>
    <comment>{Locked} Locale-specific name for this enum value.</comment>
  </data>
  <data name="BarcodeType_QRCode_Name" xml:space="preserve">
    <value>QRCode</value>
    <comment>{Locked} Locale-specific name for this enum value.</comment>
  </data>
  <data name="BarcodeType_RssExpanded_Name" xml:space="preserve">
    <value>RssExpanded</value>
    <comment>{Locked} Locale-specific name for this enum value.</comment>
  </data>
  <data name="BarcodeType_Upc_Name" xml:space="preserve">
    <value>Upc</value>
    <comment>{Locked} Locale-specific name for this enum value.</comment>
  </data>
  <data name="camera_Contrast_DisplayName" xml:space="preserve">
    <value>Contrast</value>
    <comment>Display text for Contrast</comment>
  </data>
  <data name="camera_Zoom_DisplayName" xml:space="preserve">
    <value>Zoom</value>
    <comment>Display text for Zoom</comment>
  </data>
  <data name="camera_Camera_DisplayName" xml:space="preserve">
    <value>Camera</value>
    <comment>Display text for Camera</comment>
  </data>
  <data name="export_Data_DisplayName" xml:space="preserve">
    <value>Data</value>
    <comment>Display text for Data</comment>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
    <comment>Value of label</comment>
  </data>
  <data name="Dust" xml:space="preserve">
    <value>Dust</value>
    <comment>Value of checkbox</comment>
  </data>
  <data name="image_Image_DisplayName" xml:space="preserve">
    <value>Image</value>
    <comment>Display text for Image</comment>
  </data>
  <data name="icon_Icon_DisplayName" xml:space="preserve">
    <value>Icon</value>
    <comment>Display text for Icon</comment>
  </data>
  <data name="icon_Rotation_DisplayName" xml:space="preserve">
    <value>Rotation</value>
    <comment>Display text for Rotation</comment>
  </data>
  <data name="image_ImagePosition_DisplayName" xml:space="preserve">
    <value>Image position</value>
    <comment>Display text for ImagePosition</comment>
  </data>
  <data name="image_ImageRotation_DisplayName" xml:space="preserve">
    <value>Rotate</value>
    <comment>Display text for Image Rotation. An enumeration describing what degree of rotation should be applied to the image of this control.</comment>
  </data>
  <data name="label_Live_DisplayName" xml:space="preserve">
    <value>Live</value>
    <comment>Display text for Live. Live as in live announcement. Equivalent to HTML attribute "aria-live", which determines how text changes should be announced by screen readers.</comment>
  </data>
  <data name="label_Overflow_DisplayName" xml:space="preserve">
    <value>Overflow</value>
    <comment>Display text for Overflow</comment>
  </data>
  <data name="DatePicker_DateTimeZone_DisplayName" xml:space="preserve">
    <value>Date time zone</value>
    <comment>The kind of date (local / UTC) that the picker will use</comment>
  </data>
  <data name="DatePicker_Format_DisplayName" xml:space="preserve">
    <value>Format</value>
    <comment>Display text for the Format property of DatePicker control.</comment>
  </data>
  <data name="DatePicker_Language_DisplayName" xml:space="preserve">
    <value>Language</value>
    <comment>Display text for the Language property of DatePicker control.</comment>
  </data>
  <data name="Calendar_Width_DisplayName" xml:space="preserve">
    <value>Calendar width</value>
    <comment>Display name for the Width of the calendar</comment>
  </data>
  <data name="Hide_Calendar_DisplayName" xml:space="preserve">
    <value>Hide calendar</value>
    <comment>Display name for hiding the calendar</comment>
  </data>
  <data name="Calendar_StartOfWeek_DisplayName" xml:space="preserve">
    <value>Start of week</value>
    <comment>The property that specifies which weekday is the first day of a week</comment>
  </data>
  <data name="microphone_Mic_DisplayName" xml:space="preserve">
    <value>Mic</value>
    <comment>Display text for Mic</comment>
  </data>
  <data name="text_Default_DisplayName" xml:space="preserve">
    <value>Default</value>
    <comment>Display text for Default</comment>
  </data>
  <data name="text_Mode_DisplayName" xml:space="preserve">
    <value>Mode</value>
    <comment>Display text for Mode</comment>
  </data>
  <data name="text_Format_DisplayName" xml:space="preserve">
    <value>Format</value>
    <comment>Display text for Format</comment>
  </data>
  <data name="text_VirtualKeyboardMode_DisplayName" xml:space="preserve">
    <value>Virtual keyboard mode</value>
    <comment>Text input property for which type of virtual keyboard will be used for the text input control</comment>
  </data>
  <data name="text_TeamsTheme_DisplayName" xml:space="preserve">
    <value>Teams theme</value>
    <comment>Text input property for which Teams theme will be used</comment>
  </data>
  <data name="text_Clear_DisplayName" xml:space="preserve">
    <value>Clear button</value>
    <comment>Display text for Clear</comment>
  </data>
  <data name="AboutIsNumeric" xml:space="preserve">
    <value>Checks whether a value is a number, and returns true or false.</value>
    <comment>Description of 'IsNumeric' function.</comment>
  </data>
  <data name="IsNumericArg1" xml:space="preserve">
    <value>value</value>
    <comment>function_parameter - First argument to the IsNumeric function - a value that will be tested</comment>
  </data>
  <data name="AboutIsNumeric_value" xml:space="preserve">
    <value>The value to test.</value>
  </data>
  <data name="SupportedDateTimeLanguageCodes" xml:space="preserve">
    <value>"bg-BG","ca-ES","cs-CZ","da","da-DK","de","de-DE","el-GR","en","en-GB","en-US","es","es-ES","es-MX","et-EE","eu-ES","fi-FI","fr","fr-FR","gl-ES","hi-IN","hr-HR","hu-HU","id-ID","it","it-IT","ja","ja-JP","kk-KZ","ko","ko-KR","lt-LT","lv-LV","ms-MY","nb-NO","nl","nl-NL","pl","pl-PL","pt","pt-BR","pt-PT","ro-RO","ru","ru-RU","sk-SK","sl-SL","sr-cyrl-RS","sr-latn-RS","sv","sv-SE","th-TH","tr-TR","uk-UA","vi-VN","zh-CN","zh-TW"</value>
    <comment>{Locked}Supported DateTime language codes.</comment>
  </data>
  <data name="AboutDateTimeValue" xml:space="preserve">
    <value>Converts a date and time in the form of text to a number that represents the date in Power Apps date-time code.</value>
    <comment>Description of 'DateTimeValue' function.</comment>
  </data>
  <data name="DateTimeValueArg1" xml:space="preserve">
    <value>time_text</value>
    <comment>function_parameter - First argument of the DateTimeValue function - the text to be parsed. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="DateTimeValueArg2" xml:space="preserve">
    <value>language_code</value>
    <comment>function_parameter - Second argument of the DateTimeValue function - the language code in which the text to be parsed is defined. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="AboutDateTimeValue_time_text" xml:space="preserve">
    <value>A text representation of a date/time stamp, in a platform supported format.</value>
  </data>
  <data name="AboutDateTimeValue_language_code" xml:space="preserve">
    <value>Language code of the supplied text.</value>
  </data>
  <data name="AboutTable" xml:space="preserve">
    <value>Creates a table from the specified records and tables, with as many columns as there are unique record fields. For example: Table({key1: val1, key2: val2, ...}, ...)</value>
    <comment>Description of 'Table' function.</comment>
  </data>
  <data name="TableArg1" xml:space="preserve">
    <value>record_or_table</value>
    <comment>function_parameter - Argument of the Table function - a record or a table that will be part of the the resulting table. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="AboutTable_record_or_table" xml:space="preserve">
    <value>A record or a table that will be part of the the resulting table.</value>
    <comment>Description of parameter to table function.</comment>
  </data>
  <data name="AboutShowColumns" xml:space="preserve">
    <value>Returns a table with all columns removed from the 'source' table except the specified columns.</value>
    <comment>Description of ShowColumns function.</comment>
  </data>
  <data name="ShowColumnsArg1" xml:space="preserve">
    <value>source</value>
    <comment>function_parameter - First argument of the ShowColumns function - the data source from which columns will be selected.</comment>
  </data>
  <data name="ShowColumnsArg2" xml:space="preserve">
    <value>column_name</value>
    <comment>function_parameter - Second argument of the ShowColumns function - the name of the column to be selected. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="AboutShowColumns_source" xml:space="preserve">
    <value>A table or record value to remove columns from.</value>
  </data>
  <data name="AboutShowColumns_column_name" xml:space="preserve">
    <value>The name of a column to keep.</value>
  </data>
  <data name="AboutIsToday" xml:space="preserve">
    <value>Checks whether the given date is today, and returns true or false.</value>
    <comment>Description of 'IsToday' function</comment>
  </data>
  <data name="AboutIsToday_date" xml:space="preserve">
    <value>The date value to test.</value>
  </data>
  <data name="IsTodayFuncArg1" xml:space="preserve">
    <value>date</value>
    <comment>function_parameter - First argument to the IsToday function - the date to be tested.</comment>
  </data>
  <data name="AboutIsUTCToday" xml:space="preserve">
    <value>Checks whether the given date is today in UTC, and returns true or false.</value>
    <comment>Description of 'IsUTCToday' function</comment>
  </data>
  <data name="AboutIsUTCToday_date" xml:space="preserve">
    <value>The date value to test.</value>
  </data>
  <data name="IsUTCTodayFuncArg1" xml:space="preserve">
    <value>date</value>
    <comment>function_parameter - First argument to the IsUTCToday function - the date to be tested.</comment>
  </data>
  <data name="AboutMod" xml:space="preserve">
    <value>Returns the remainder after a number is divided by a divisor. The result has the same sign as the divisor.</value>
    <comment>Description of 'Mod' function.</comment>
  </data>
  <data name="AboutModT" xml:space="preserve">
    <value>Returns a column containing the remainder after a number (or a column of numbers) is divided by a divisor (or a column of divisors).</value>
    <comment>Description of 'ModT' function.</comment>
  </data>
  <data name="AboutMod_divisor" xml:space="preserve">
    <value>The number to divide by.</value>
  </data>
  <data name="AboutMod_divisor_or_column" xml:space="preserve">
    <value>The number or column of numbers to divide by.</value>
  </data>
  <data name="AboutMod_number" xml:space="preserve">
    <value>The number to find the remainder for.</value>
  </data>
  <data name="AboutMod_number_or_column" xml:space="preserve">
    <value>The number or column of numbers to find the remainder for.</value>
  </data>
  <data name="ModFuncArg1" xml:space="preserve">
    <value>number</value>
    <comment>function_parameter - First argument of the Mod function - the number to find the reminder for.</comment>
  </data>
  <data name="ModFuncArg2" xml:space="preserve">
    <value>divisor</value>
    <comment>function_parameter - Second argument of the Mod function - the number to divide by.</comment>
  </data>
  <data name="ModTFuncArg1" xml:space="preserve">
    <value>number_or_column</value>
    <comment>function_parameter - First argument of the Mod function - the number or column of numbers to find the reminder for. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="ModTFuncArg2" xml:space="preserve">
    <value>divisor_or_column</value>
    <comment>function_parameter - Second argument of the Mod function - the number or column of numbers to divide by. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="pdfViewer_Document_DisplayName" xml:space="preserve">
    <value>Document</value>
    <comment>Display text for Document</comment>
  </data>
  <data name="pdfViewer_Zoom_DisplayName" xml:space="preserve">
    <value>Zoom</value>
    <comment>Display text for Zoom</comment>
  </data>
  <data name="pdfViewer_Password_DisplayName" xml:space="preserve">
    <value>Password</value>
    <comment>Display text for Password</comment>
  </data>
  <data name="pdfViewer_PasswordState_DisplayName" xml:space="preserve">
    <value>Password state</value>
    <comment>Display text for PasswordState</comment>
  </data>
  <data name="DataDescriptionInvalidFormat_Reason" xml:space="preserve">
    <value>The data description is invalid: {0}</value>
  </data>
  <data name="DataDescriptionParserUnknownException" xml:space="preserve">
    <value>An unknown error occurred trying to parse the data description.</value>
  </data>
  <data name="AboutForAll" xml:space="preserve">
    <value>Applies a given formula on each row in a data source, then returns a new table with results per row.</value>
    <comment>Description of 'ForAll' function.</comment>
  </data>
  <data name="AboutForAll_source" xml:space="preserve">
    <value>The data source or table to operate on.</value>
  </data>
  <data name="AboutForAll_formula" xml:space="preserve">
    <value>The formula to evaluate for all rows of the table.</value>
  </data>
  <data name="ForAllArg1" xml:space="preserve">
    <value>source</value>
    <comment>function_parameter - First argument to the ForAll function - the data source (table / collection) to operate on.</comment>
  </data>
  <data name="ForAllArg2" xml:space="preserve">
    <value>formula</value>
    <comment>function_parameter - Second argument to the ForAll function - the formula to evaluate for all rows in the source.</comment>
  </data>
  <data name="AboutSummarize" xml:space="preserve">
    <value>Returns a grouping of the specified table, combining with aggregation functions.</value>
    <comment>Description of 'Patch' function.</comment>
  </data>
  <data name="SummarizeArg1" xml:space="preserve">
    <value>source</value>
    <comment>function_parameter - First argument to the Summarize function - the data source (table / collection) to operate on.</comment>
  </data>
  <data name="SummarizeArg2" xml:space="preserve">
    <value>grouping_column</value>
    <comment>function_parameter - Second argument to the Summarize function - the name of the column by which the data source will be grouped. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="SummarizeArg3" xml:space="preserve">
    <value>aggregation</value>
    <comment>function_parameter - Third argument to the Summarize function - a call to an aggregation function.</comment>
  </data>
  <data name="AboutSummarize_source" xml:space="preserve">
    <value>The table or collection to group.</value>
    <comment>Description for this parameter</comment>
  </data>
  <data name="AboutSummarize_grouping_column" xml:space="preserve">
    <value>The name of a column to group the data by.</value>
    <comment>Description for this parameter</comment>
  </data>
  <data name="AboutSummarize_aggregation" xml:space="preserve">
    <value>A call to an aggregation function.</value>
    <comment>Description for this parameter</comment>
  </data>
  <data name="AboutPower" xml:space="preserve">
    <value>Raises a number x to the power of another number y. Same as x^y.</value>
    <comment>Description of 'Power' function.</comment>
  </data>
  <data name="AboutPower_base" xml:space="preserve">
    <value>The base number to be raised.</value>
  </data>
  <data name="AboutPower_exponent" xml:space="preserve">
    <value>The exponent by which the base will be raised.</value>
  </data>
  <data name="PowerFuncArg1" xml:space="preserve">
    <value>base</value>
    <comment>function_parameter - First argument to the Power function - the base number to be raised.</comment>
  </data>
  <data name="PowerFuncArg2" xml:space="preserve">
    <value>exponent</value>
    <comment>function_parameter - Second argument to the power function - the exponent by which the base will be raised.</comment>
  </data>
  <data name="AboutStartsWith" xml:space="preserve">
    <value>Returns true if the provided text starts with the provided start string.</value>
    <comment>Description of 'StartsWith' function.</comment>
  </data>
  <data name="AboutStartsWith_text" xml:space="preserve">
    <value>The text to be checked.</value>
  </data>
  <data name="AboutStartsWith_start" xml:space="preserve">
    <value>The starting string. The function returns true if the text starts with this string.</value>
  </data>
  <data name="StartsWithArg1" xml:space="preserve">
    <value>text</value>
    <comment>function_parameter - First argument to the StartsWith function - the text to be checked.</comment>
  </data>
  <data name="StartsWithArg2" xml:space="preserve">
    <value>start</value>
    <comment>function_parameter - Second argument to the StartsWith function - the text to be checked whether is on the beginning of the given text.</comment>
  </data>
  <data name="AboutEndsWith" xml:space="preserve">
    <value>Returns true if the provided text ends with the provided end string.</value>
    <comment>Description of 'EndsWith' function.</comment>
  </data>
  <data name="AboutEndsWith_text" xml:space="preserve">
    <value>The text to be checked.</value>
  </data>
  <data name="AboutEndsWith_end" xml:space="preserve">
    <value>The ending string. The function returns true if the text ends with this string.</value>
  </data>
  <data name="EndsWithArg1" xml:space="preserve">
    <value>text</value>
    <comment>function_parameter - First argument to the EndsWith function - the text to be checked.</comment>
  </data>
  <data name="EndsWithArg2" xml:space="preserve">
    <value>end</value>
    <comment>function_parameter - Second argument to the EndsWith function - the text to be checked whether is on the end of the given text.</comment>
  </data>
  <data name="AboutBlank" xml:space="preserve">
    <value>Returns a null (blank) value</value>
  </data>
  <data name="AboutPowerT" xml:space="preserve">
    <value>Raises a number x (or column of numbers) to the power of another number y (or column of numbers). Same as x^y.</value>
    <comment>Description of 'Power' function.</comment>
  </data>
  <data name="AboutPower_base_or_column" xml:space="preserve">
    <value>The base number (or column of base numbers) to be raised.</value>
  </data>
  <data name="AboutPower_exponent_or_column" xml:space="preserve">
    <value>The exponent (or column of exponents) by which the base will be raised.</value>
  </data>
  <data name="PowerTFuncArg1" xml:space="preserve">
    <value>base_or_column</value>
    <comment>function_parameter - First argument to the Power function - the base number (or column of numbers) to be raised. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="PowerTFuncArg2" xml:space="preserve">
    <value>exponent_or_column</value>
    <comment>function_parameter - Second argument to the Power function - the exponent (or column of numbers) by which the base will be raised. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="SuggestRemoteExecutionHint_OpNotSupportedByClient" xml:space="preserve">
    <value>Part of this formula cannot be evaluated remotely. '{0}' operation is currently not supported in this context.</value>
    <comment>Suggestion emitted when non-delegable parts of the expression found which could be made delegable by rearranging the formula.</comment>
  </data>
  <data name="SuggestRemoteExecutionHint_StringMatchSecondParam" xml:space="preserve">
    <value>Part of this formula cannot be evaluated remotely. The '{0}' function cannot be delegated if a field name appears in the second argument.</value>
    <comment>Suggestion emitted when non-delegable parts of the expression found which could be made delegable by rearranging the formula.</comment>
  </data>
  <data name="entityForm_EntityForm_DisplayName" xml:space="preserve">
    <value>Entity form</value>
    <comment>Display text for internal hidden property</comment>
  </data>
  <data name="TeamsTheme_Default_DisplayName" xml:space="preserve">
    <value>Default theme</value>
    <comment>Display text representing the Default value of TeamsTheme enum (TeamsTheme_Default_Name). The possible values for this enumeration are: Default, Dark, Contrast.</comment>
  </data>
  <data name="TeamsTheme_Dark_DisplayName" xml:space="preserve">
    <value>Dark theme</value>
    <comment>Display text representing the Dark value of TeamsTheme enum (TeamsTheme_Dark_Name). The possible values for this enumeration are: Default, Dark, Contrast.</comment>
  </data>
  <data name="TeamsTheme_Contrast_DisplayName" xml:space="preserve">
    <value>Contrast theme</value>
    <comment>Display text representing the Contrast value of TeamsTheme enum (TeamsTheme_Contrast_Name). The possible values for this enumeration are: Default, Dark, Contrast.</comment>
  </data>
  <data name="AboutCollect" xml:space="preserve">
    <value>Adds records to a data source.</value>
    <comment>Description of 'Clear' function.</comment>
  </data>
  <data name="CollectDataSourceArg" xml:space="preserve">
    <value>data_source</value>
    <comment>function_parameter - First parameter for the Collect function. The data source that you want to add data to. Translate this string. When translating, maintain as a single word (i.e., do not add spaces).</comment>
  </data>
  <data name="CollectRecordArg" xml:space="preserve">
    <value>record</value>
    <comment>function_parameter - Second parameter for the Collect function. The record to be added.</comment>
  </data>
  <data name="AboutClear" xml:space="preserve">
    <value>Deletes all the records of a collection. The columns of the collection will remain.</value>
    <comment>Description of 'Clear' function.</comment>
  </data>
  <data name="AboutClearCollect" xml:space="preserve">
    <value>Deletes all the records from a collection. And then adds a different set of records to the same collection.</value>
    <comment>Description of 'Clear' function.</comment>
  </data>
  <data name="ClearCollectionArg" xml:space="preserve">
    <value>data_source</value>
    <comment>function_parameter - First parameter for the Clear function. The data source that you want to clear from all elements. Translate this string. When translating, maintain as a single word (i.e., do not add spaces).</comment>
  </data>
  <data name="ClearCollectDataSourceArg" xml:space="preserve">
    <value>data_source</value>
    <comment>function_parameter - First parameter for the ClearCollect function. The data source that contains the records that you want to modify or will contain the records that you want to create. Translate this string. When translating, maintain as a single word (i.e., do not add spaces).</comment>
  </data>
  <data name="ClearCollectRecordArg" xml:space="preserve">
    <value>record</value>
    <comment>function_parameter - Second parameter for the ClearCollect function. The record to be added.</comment>
  </data>
  <data name="AboutPatch" xml:space="preserve">
    <value>Applies the updates to the specified row and changes the row in the specified datasource. Returns the updated row.</value>
    <comment>Description of 'Patch' function.</comment>
  </data>
  <data name="AboutPatchSingleRecord" xml:space="preserve">
    <value>Takes a single record with primary keys and updated values and updates the corresponding row in the specified datasource. Returns the updated row.</value>
    <comment>Description of 'Patch' function.</comment>
  </data>
  <data name="AboutPatchAggregate" xml:space="preserve">
    <value>Takes a table of rows and applies the updates specified in a table of updates in a one-to-one fashion. Returns a table of updated rows.</value>
    <comment>Description of 'Patch' function.</comment>
  </data>
  <data name="AboutPatchAggregateSingleTable" xml:space="preserve">
    <value>Takes a table of rows with primary keys and updated fields and applies those updates to the datasource. Returns a table of updated rows.</value>
    <comment>Description of 'Patch' function.</comment>
  </data>
  <data name="AboutPatchRecord" xml:space="preserve">
    <value>Returns row with updates applied.</value>
    <comment>Description of 'Patch' function.</comment>
  </data>
  <data name="AboutPatch_source" xml:space="preserve">
    <value>The data source to be patched.</value>
  </data>
  <data name="AboutPatch_record" xml:space="preserve">
    <value>The record that has to be patched.</value>
  </data>
  <data name="AboutPatch_update" xml:space="preserve">
    <value>The update that needs to be patched to the given record.</value>
  </data>
  <data name="AboutPatch_rows" xml:space="preserve">
    <value>The table of rows to be patched.</value>
  </data>
  <data name="AboutPatch_updates" xml:space="preserve">
    <value>The table of updates that need to be patched to the given rows.</value>
  </data>
  <data name="PatchArg_Source" xml:space="preserve">
    <value>source</value>
    <comment>function_parameter - First argument of the Patch function - the source (collection / table) to be updated.</comment>
  </data>
  <data name="PatchArg_Record" xml:space="preserve">
    <value>record</value>
    <comment>function_parameter - Second argument of the Patch function - the record to be updated.</comment>
  </data>
  <data name="PatchArg_Update" xml:space="preserve">
    <value>update</value>
    <comment>function_parameter - Third argument of the Patch function - the updates to be made to the record.</comment>
  </data>
  <data name="PatchArg_Rows" xml:space="preserve">
    <value>rows</value>
    <comment>function_parameter - First argument to the Patch function - the rows to be updated.</comment>
  </data>
  <data name="PatchArg_Updates" xml:space="preserve">
    <value>updates</value>
    <comment>function_parameter - Second argument to the Patch function - the updates to be applied to the given rows.</comment>
  </data>
  <data name="AboutRemove" xml:space="preserve">
    <value>Removes a specific record or records from a data source</value>
    <comment>Description of 'Remove' function.</comment>
  </data>
  <data name="RemoveDataSourceArg" xml:space="preserve">
    <value>data_source</value>
    <comment>function_parameter - First parameter for the Remove function. The data source that contains the records that you want to remove from. Translate this string. When translating, maintain as a single word (i.e., do not add spaces).</comment>
  </data>
  <data name="RemoveRecordsArg" xml:space="preserve">
    <value>remove_record(s)</value>
    <comment>function_parameter - One or more records to be removed. Translate this string. When translating, maintain as a single word (i.e., do not add spaces).</comment>
  </data>
  <data name="ErrRemoveAllArg" xml:space="preserve">
    <value>If provided, last argument must be 'RemoveFlags.All'. Is there a typo?</value>
    <comment>{Locked=RemoveFlags.All} Error Message, RemoveFlags.All is an enum value that does not get localized.</comment>
  </data>
  <data name="NotificationType_Error_DisplayName" xml:space="preserve">
    <value>Error</value>
    <comment>Display text representing the Error value of NotificationType enum (NotificationType_Error_Name). This describes showing an error notification. The possible values for this enumeration are: Error, Warning, Success, Information.</comment>
  </data>
  <data name="NotificationType_Warning_DisplayName" xml:space="preserve">
    <value>Warning</value>
    <comment>Display text representing the Warning value of NotificationType enum (NotificationType_Warning_Name). This describes showing an warning notification. The possible values for this enumeration are: Error, Warning, Success, Information.</comment>
  </data>
  <data name="NotificationType_Success_DisplayName" xml:space="preserve">
    <value>Success</value>
    <comment>Display text representing the Error value of NotificationType enum (NotificationType_Success_Name). This describes showing an success notification. The possible values for this enumeration are: Error, Warning, Success, Information.</comment>
  </data>
  <data name="NotificationType_Information_DisplayName" xml:space="preserve">
    <value>Information</value>
    <comment>Display text representing the Error value of NotificationType enum (NotificationType_Information_Name). This describes showing an information notification. The possible values for this enumeration are: Error, Warning, Success, Information.</comment>
  </data>
  <data name="AboutIsError" xml:space="preserve">
    <value>Returns whether an error occurred when evaluating the given argument.</value>
    <comment>Description text for the 'IsError' function.</comment>
  </data>
  <data name="IsErrorArg" xml:space="preserve">
    <value>value</value>
    <comment>function_parameter - First argument to the IsError function - any value, to check if there was an error in producing it.</comment>
  </data>
  <data name="AboutIsError_value" xml:space="preserve">
    <value>The value to check for errors.</value>
    <comment>Description of the first parameter to IsError</comment>
  </data>
  <data name="ErrBadArityMinimum" xml:space="preserve">
    <value>Invalid number of arguments: received {0}, expected {1} or more.</value>
    <comment>Error Message. {0} Will be a number, and {1} will be a number, the minimum number of arguments.</comment>
  </data>
  <data name="ErrBadArityRange" xml:space="preserve">
    <value>Invalid number of arguments: received {0}, expected {1}-{2}.</value>
    <comment>Error Message. {0} Will be a number, and {1} will be the minimum arity and {2} will be the maximum arity</comment>
  </data>
  <data name="ErrGeneralError" xml:space="preserve">
    <value>{0}</value>
    <comment>Error message. {0} will be replaced with the contents of the message. In a few specific instances, we pull error messages from a source other than this file, but we need a error key in this file to attach it to, hence why we have an error message that is only a format specifier.</comment>
  </data>
  <data name="ErrorResource_ErrOperandExpected_ShortMessage" xml:space="preserve">
    <value>Expected an operand. The formula or expression expects a valid operand. For example, you can add the operand '2' to the expression ' 1 +_' so that the result is '3'. Or, you can add the operand "there" to the expression '"Hi "&amp; _ ' so that the result is 'Hi there'.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrorResource_ErrOperandExpected_HowToFix_1" xml:space="preserve">
    <value>Supply an operand value that will complete the expression. Ensure that the operand's type (text, number, date, or true/false) fits the expression. Match numbers with numbers, text with text, and so on. For example, '1 + "Hi"' isn't valid, but '1 + 2' is valid.</value>
    <comment>How to fix the error.</comment>
  </data>
  <data name="ErrorResource_ErrBadToken_ShortMessage" xml:space="preserve">
    <value>Unexpected characters. Characters are used in the formula in an unexpected way.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrorResource_ErrBadToken_LongMessage" xml:space="preserve">
    <value>For example, the character '\' isn't expected after a number, like this: '32\'. A space ('32') would be expected so that it's just the number 32, or another number (as in '323') would be expected.</value>
  </data>
  <data name="ErrorResource_ErrBadToken_HowToFix_1" xml:space="preserve">
    <value>Remove or replace the unexpected characters.</value>
    <comment>1 How to fix the error. </comment>
  </data>
  <data name="ErrorResource_ErrBadToken_Link_1" xml:space="preserve">
    <value>Article: Formula reference for Power Apps</value>
    <comment>Article: Formula reference for Power Apps</comment>
  </data>
  <data name="ErrorResource_ErrBadToken_Link_1_URL" xml:space="preserve">
    <value>https://go.microsoft.com/fwlink/?linkid=2132478</value>
    <comment>{Locked}</comment>
  </data>
  <data name="ErrorResource_UnexpectedCharacterToken_ShortMessage" xml:space="preserve">
    <value>Unexpected character '{0}' at position '{1}' in the formula.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrorResource_UnexpectedCharacterToken_LongMessage" xml:space="preserve">
    <value>For example, the character '\' isn't expected after a number, like this: '32\'. A space ('32') would be expected so that it's just the number 32, or another number (as in '323') would be expected.</value>
  </data>
  <data name="ErrorResource_UnexpectedCharacterToken_HowToFix_1" xml:space="preserve">
    <value>Remove or replace the unexpected character.</value>
  </data>
  <data name="ErrorResource_UnexpectedCharacterToken_Link_1" xml:space="preserve">
    <value>Article: Formula reference for Power Apps</value>
    <comment>Article: Formula reference for Power Apps</comment>
  </data>
  <data name="ErrorResource_UnexpectedCharacterToken_Link_1_URL" xml:space="preserve">
    <value>https://go.microsoft.com/fwlink/?linkid=2132478</value>
    <comment>{Locked}</comment>
  </data>
  <data name="ErrorResource_ErrMissingEndOfBlockComment_ShortMessage" xml:space="preserve">
    <value>Missing end-comment identifier. The block comment has no end-comment identifier.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrorResource_ErrMissingEndOfBlockComment_LongMessage" xml:space="preserve">
    <value>Each block comment must start with '/*' and end with '*/'. If you don't end each block comment properly, all code after the comment becomes part of that comment. If a comment comprises only one line, you can start it with '//' and not identify the end of the comment.</value>
  </data>
  <data name="ErrorResource_ErrMissingEndOfBlockComment_HowToFix_1" xml:space="preserve">
    <value>Add '*/' to the end of your block comment, or change it to a set of line comments.</value>
    <comment>1 How to fix the error. </comment>
  </data>
  <data name="ErrorResource_ErrMissingEndOfBlockComment_Link_1" xml:space="preserve">
    <value>Article: Formula reference for Power Apps</value>
    <comment>Article: Formula reference for Power Apps</comment>
  </data>
  <data name="ErrorResource_ErrMissingEndOfBlockComment_Link_1_URL" xml:space="preserve">
    <value>https://go.microsoft.com/fwlink/?linkid=2132478</value>
    <comment>{Locked}</comment>
  </data>
  <data name="ErrorResource_ErrExpectedFound_Ex_Fnd_ShortMessage" xml:space="preserve">
    <value>Unexpected characters. The formula contains '{0}' where '{1}' is expected.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrorResource_ErrExpectedFound_Ex_Fnd_LongMessage" xml:space="preserve">
    <value>This error occurs if, for example, a formula contains '{{Val@ 7}}' instead of '{{Val: 7}}'. When you set a variable, the syntax requires a colon instead of an "at" symbol.</value>
  </data>
  <data name="ErrorResource_ErrExpectedFound_Ex_Fnd_HowToFix_1" xml:space="preserve">
    <value>Remove or replace the unexpected characters with an expected character.</value>
    <comment>1 How to fix the error. </comment>
  </data>
  <data name="ErrorResource_ErrExpectedFound_Ex_Fnd_Link_1" xml:space="preserve">
    <value>Article: Formula reference for Power Apps</value>
    <comment>Article: Formula reference for Power Apps</comment>
  </data>
  <data name="ErrorResource_ErrExpectedFound_Ex_Fnd_Link_1_URL" xml:space="preserve">
    <value>https://go.microsoft.com/fwlink/?linkid=2132478</value>
    <comment>{Locked}</comment>
  </data>
  <data name="ErrorResource_ErrInvalidName_ShortMessage" xml:space="preserve">
    <value>Name isn't valid. '{0}' isn't recognized.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrorResource_ErrInvalidName_LongMessage" xml:space="preserve">
    <value>This error appears most commonly when a formula refers to something that no longer exists (for example, a control that you've deleted).</value>
  </data>
  <data name="ErrorResource_ErrInvalidName_HowToFix_1" xml:space="preserve">
    <value>Remove or correct the reference to the name that isn't valid.</value>
    <comment>1 How to fix the error. </comment>
  </data>
  <data name="ErrorResource_ErrInvalidName_Link_1" xml:space="preserve">
    <value>Article: Formula reference for Power Apps</value>
    <comment>Article: Formula reference for Power Apps</comment>
  </data>
  <data name="ErrorResource_ErrInvalidName_Link_1_URL" xml:space="preserve">
    <value>https://go.microsoft.com/fwlink/?linkid=2132478</value>
    <comment>{Locked}</comment>
  </data>
  <data name="ErrorResource_ErrInvalidIdentifier_ShortMessage" xml:space="preserve">
    <value>Name isn't valid. This identifier isn't recognized.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrorResource_ErrInvalidIdentifier_LongMessage" xml:space="preserve">
    <value>This error appears most commonly when a formula refers to something that no longer exists (for example, a control that you've deleted).</value>
  </data>
  <data name="ErrorResource_ErrInvalidIdentifier_HowToFix_1" xml:space="preserve">
    <value>Remove or correct the reference to the name that isn't valid.</value>
    <comment>1 How to fix the error. </comment>
  </data>
  <data name="ErrorResource_ErrInvalidIdentifier_Link_1" xml:space="preserve">
    <value>Article: Formula reference for Power Apps</value>
    <comment>Article: Formula reference for Power Apps</comment>
  </data>
  <data name="ErrorResource_ErrInvalidIdentifier_Link_1_URL" xml:space="preserve">
    <value>https://go.microsoft.com/fwlink/?linkid=2132478</value>
    <comment>{Locked}</comment>
  </data>
  <data name="ErrorResource_ErrInvalidPropertyReference_ShortMessage" xml:space="preserve">
    <value>Property reference isn't valid.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrorResource_ErrInvalidPropertyReference_LongMessage" xml:space="preserve">
    <value>This error appears when a formula refers to component function properties with invalid syntax. (For example, Component.CustomFunction instead of Component.CustomFunction())</value>
  </data>
  <data name="ErrorResource_ErrInvalidPropertyReference_HowToFix_1" xml:space="preserve">
    <value>Use correct syntax to refer to component function property. For example, Component.CustomFunction()</value>
    <comment>1 How to fix the error. </comment>
  </data>
  <data name="ErrorResource_ErrInvalidPropertyReference_Link_1" xml:space="preserve">
    <value>Article: Formula reference for PowerApps</value>
    <comment>Article: Formula reference for PowerApps</comment>
  </data>
  <data name="ErrorResource_ErrInvalidPropertyReference_Link_1_URL" xml:space="preserve">
    <value>https://go.microsoft.com/fwlink/?linkid=2132478</value>
    <comment>{Locked}</comment>
  </data>
  <data name="ErrorResource_ErrInvalidParentUse_ShortMessage" xml:space="preserve">
    <value>'Parent' reference isn't valid. You can't reference a parent control in this context.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrorResource_ErrInvalidParentUse_LongMessage" xml:space="preserve">
    <value>You can't use the Parent operator with a control that doesn't have a parent control. This operator refers to the control that hosts the given control and makes all of its properties available.</value>
  </data>
  <data name="ErrorResource_ErrInvalidParentUse_HowToFix_1" xml:space="preserve">
    <value>Remove the 'Parent' operator.</value>
    <comment>1 How to fix the error. </comment>
  </data>
  <data name="ErrorResource_ErrInvalidParentUse_Link_1" xml:space="preserve">
    <value>Article: Add and configure a canvas-app control in Power Apps</value>
    <comment>Article on UI design - working with controls </comment>
  </data>
  <data name="ErrorResource_ErrInvalidParentUse_Link_1_URL" xml:space="preserve">
    <value>https://go.microsoft.com/fwlink/?linkid=2119116</value>
    <comment>{Locked}</comment>
  </data>
  <data name="ErrorResource_ErrTooManyUps_ShortMessage" xml:space="preserve">
    <value>Row-scope nesting too deep. Your formula's row scope exceeds 63 nesting levels.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrorResource_ErrTooManyUps_LongMessage" xml:space="preserve">
    <value>Complexity increases with each nesting level, so Power Apps supports row-scope nesting only up to 63 levels.</value>
  </data>
  <data name="ErrorResource_ErrTooManyUps_HowToFix_1" xml:space="preserve">
    <value>Rewrite the formula with fewer nesting levels.</value>
    <comment>1 How to fix the error. </comment>
  </data>
  <data name="ErrorResource_ErrRuleNestedTooDeeply_ShortMessage" xml:space="preserve">
    <value>Expression nesting too deep. An expression in your formula is nested more than 50 levels.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrorResource_ErrRuleNestedTooDeeply_LongMessage" xml:space="preserve">
    <value>Power Apps supports expression nesting up to only 50 levels. An expression this deep is difficult to understand and maintain.</value>
  </data>
  <data name="ErrorResource_ErrRuleNestedTooDeeply_HowToFix_1" xml:space="preserve">
    <value>Rewrite the formula with fewer nesting levels.</value>
    <comment>1 How to fix the error. </comment>
  </data>
  <data name="ErrorResource_ErrOperatorExpected_ShortMessage" xml:space="preserve">
    <value>Expected operator. We expect an operator such as +, *, or &amp; at this point in the formula.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrorResource_ErrOperatorExpected_LongMessage" xml:space="preserve">
    <value>Operators join two operands together. This error occurs if you put two functions (operands) together with no operator between them -- for example, Len("mytext")Len("mytext").</value>
  </data>
  <data name="ErrorResource_ErrOperatorExpected_HowToFix_1" xml:space="preserve">
    <value>Edit your formula so that it includes an operator between the operands.</value>
    <comment>1 How to fix the error. </comment>
  </data>
  <data name="ErrorResource_ErrOperatorExpected_Link_1" xml:space="preserve">
    <value>Module: Use basic formulas</value>
    <comment>3 crown link on basic formulas</comment>
  </data>
  <data name="ErrorResource_ErrOperatorExpected_Link_1_URL" xml:space="preserve">
    <value>https://go.microsoft.com/fwlink/?linkid=2132396</value>
    <comment>{Locked}</comment>
  </data>
  <data name="ErrorResource_ErrNumberExpected_ShortMessage" xml:space="preserve">
    <value>Expected number. We expect a number at this point in the formula.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrorResource_ErrNumberExpected_LongMessage" xml:space="preserve">
    <value>This error will occur if you use a function that requires a number but you supply, for example, an image instead.</value>
  </data>
  <data name="ErrorResource_ErrNumberExpected_HowToFix_1" xml:space="preserve">
    <value>Edit your formula so that it evaluates to a number at this point in the formula.</value>
    <comment>1 How to fix the error. </comment>
  </data>
  <data name="ErrorResource_ErrNumberExpected_Link_1" xml:space="preserve">
    <value>Article: Formula reference for Power Apps</value>
    <comment>Article: Formula reference for Power Apps</comment>
  </data>
  <data name="ErrorResource_ErrNumberExpected_Link_1_URL" xml:space="preserve">
    <value>https://go.microsoft.com/fwlink/?linkid=2132478</value>
    <comment>{Locked}</comment>
  </data>
  <data name="ErrorResource_ErrBooleanExpected_ShortMessage" xml:space="preserve">
    <value>Expected boolean. We expect a boolean (true/false) at this point in the formula.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrorResource_ErrBooleanExpected_LongMessage" xml:space="preserve">
    <value>A boolean is also known as a true/false value in applications such as Microsoft Excel. This error will occur if you use a function that requires a boolean but you supply, for example, a date instead.</value>
  </data>
  <data name="ErrorResource_ErrBooleanExpected_HowToFix_1" xml:space="preserve">
    <value>Edit your formula so that it evaluates to a boolean at this point in the formula.</value>
    <comment>1 How to fix the error. </comment>
  </data>
  <data name="ErrorResource_ErrBooleanExpected_Link_1" xml:space="preserve">
    <value>Article: Formula reference for Power Apps</value>
    <comment>Article: Formula reference for Power Apps</comment>
  </data>
  <data name="ErrorResource_ErrBooleanExpected_Link_1_URL" xml:space="preserve">
    <value>https://go.microsoft.com/fwlink/?linkid=2132478</value>
    <comment>{Locked}</comment>
  </data>
  <data name="ErrorResource_ErrColonExpected_ShortMessage" xml:space="preserve">
    <value>Expected colon. We expect a colon (:) at this point in the formula.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrorResource_ErrColonExpected_LongMessage" xml:space="preserve">
    <value>A colon separates a field name, sometimes called a column name, from a field value in a record (for example, {Month:"1"}, {Month:"2"} …). A colon also separates hours from minutes and seconds (for example, "3:04").</value>
  </data>
  <data name="ErrorResource_ErrColonExpected_HowToFix_1" xml:space="preserve">
    <value>Edit your formula so that it includes a colon.</value>
    <comment>1 How to fix the error. </comment>
  </data>
  <data name="ErrorResource_ErrColonExpected_Link_1" xml:space="preserve">
    <value>Article: Show text, dates, and times in Power Apps</value>
    <comment>Article: Show text, dates, and times </comment>
  </data>
  <data name="ErrorResource_ErrColonExpected_Link_1_URL" xml:space="preserve">
    <value>https://go.microsoft.com/fwlink/?linkid=2132645</value>
    <comment>{Locked}</comment>
  </data>
  <data name="ErrorResource_ErrBehaviorPropertyExpected_ShortMessage" xml:space="preserve">
    <value>Behavior function in a non-behavior property. You can't use this property to change values elsewhere in the app.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrorResource_ErrBehaviorPropertyExpected_LongMessage" xml:space="preserve">
    <value>Behavior functions change the state of the app by changing values elsewhere in the app. 'Navigate', 'Patch', 'UpdateContext', and 'Collect' are common behavior functions. 'OnSelect', 'OnVisible', and other 'On …' properties are common behavior-based properties.</value>
  </data>
  <data name="ErrorResource_ErrBehaviorPropertyExpected_HowToFix_1" xml:space="preserve">
    <value>Move the behavior function to a behavior-based property.</value>
    <comment>1 How to fix the error. </comment>
  </data>
  <data name="ErrorResource_ErrBehaviorPropertyExpected_Link_1" xml:space="preserve">
    <value>Article: Understand behavior formulas for canvas apps in Power Apps</value>
    <comment>Article: Understand behavior formulas</comment>
  </data>
  <data name="ErrorResource_ErrBehaviorPropertyExpected_Link_1_URL" xml:space="preserve">
    <value>https://go.microsoft.com/fwlink/?linkid=2132570</value>
    <comment>{Locked}</comment>
  </data>
  <data name="ErrorResource_ErrTestPropertyExpected_ShortMessage" xml:space="preserve">
    <value>Test function in a non-test property. You can't use this property to invoke test-only functions.</value>
    <comment>Error Message. The term 'Test' is an adjective ('Test function' = 'function for testing').</comment>
  </data>
  <data name="ErrorResource_ErrTestPropertyExpected_LongMessage" xml:space="preserve">
    <value>Test functions are those that can be used to simulate user input when testing an app. 'SetProperty', 'SelectRow', and 'Assert' are common test functions. They can only be used in the in test cases.</value>
  </data>
  <data name="ErrorResource_ErrTestPropertyExpected_HowToFix_1" xml:space="preserve">
    <value>Use the function in a test case, not in the app itself.</value>
    <comment>How to fix the error. </comment>
  </data>
  <data name="ErrorResource_ErrCannotCoerce_SourceType_TargetType_ShortMessage" xml:space="preserve">
    <value>Can't convert this data type. Power Apps can't convert this {0} to a {1}.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrorResource_ErrCannotCoerce_SourceType_TargetType_LongMessage" xml:space="preserve">
    <value>Power Apps can convert some types of data in your formula to other types for you. For example, it can convert "1" (a string) to a 1 (a number), but it can't all data types to all other data type. For example, it can't convert an image to a number.</value>
  </data>
  <data name="ErrorResource_ErrCannotCoerce_SourceType_TargetType_HowToFix_1" xml:space="preserve">
    <value>Edit your formula so that you convert the data in question to the expected type.</value>
    <comment>1 How to fix the error. </comment>
  </data>
  <data name="ErrorResource_ErrStringExpected_ShortMessage" xml:space="preserve">
    <value>Expected text. We expect text at this point in the formula.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrorResource_ErrStringExpected_LongMessage" xml:space="preserve">
    <value>This error occurs if you use a function that requires a text (or string) argument and you supply, for example, a date instead.</value>
  </data>
  <data name="ErrorResource_ErrStringExpected_HowToFix_1" xml:space="preserve">
    <value>Edit your formula so that it evaluates to text at this point in the formula.</value>
    <comment>1 How to fix the error. </comment>
  </data>
  <data name="ErrorResource_ErrStringExpected_Link_1" xml:space="preserve">
    <value>Article: Formula reference for Power Apps</value>
    <comment>Article: Formula reference for Power Apps</comment>
  </data>
  <data name="ErrorResource_ErrStringExpected_Link_1_URL" xml:space="preserve">
    <value>https://go.microsoft.com/fwlink/?linkid=2132478</value>
    <comment>{Locked}</comment>
  </data>
  <data name="ErrorResource_ErrNumberOrStringExpected_ShortMessage" xml:space="preserve">
    <value>Expected text or number. We expect text or a number at this point in the formula.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrorResource_ErrNumberOrStringExpected_LongMessage" xml:space="preserve">
    <value>This error will occur if you use a function that requires either text or a number but you supply, for example, a boolean (true/false) value.</value>
  </data>
  <data name="ErrorResource_ErrNumberOrStringExpected_HowToFix_1" xml:space="preserve">
    <value>Edit your formula so that it evaluates to text or a number at this point in the formula.</value>
    <comment>1 How to fix the error. </comment>
  </data>
  <data name="ErrorResource_ErrNumberOrStringExpected_Link_1" xml:space="preserve">
    <value>Article: Formula reference for Power Apps</value>
    <comment>Article: Formula reference for Power Apps</comment>
  </data>
  <data name="ErrorResource_ErrNumberOrStringExpected_Link_1_URL" xml:space="preserve">
    <value>https://go.microsoft.com/fwlink/?linkid=2132478</value>
    <comment>{Locked}</comment>
  </data>
  <data name="ErrorResource_ErrClosingBracketExpected_ShortMessage" xml:space="preserve">
    <value>Expected closing bracket. We expect a closing bracket (}) at this point in the formula.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrorResource_ErrClosingBracketExpected_LongMessage" xml:space="preserve">
    <value>A closing bracket indicates the end of a record (for example, {Month:"1"}, {Month:"2"} …).</value>
  </data>
  <data name="ErrorResource_ErrClosingBracketExpected_HowToFix_1" xml:space="preserve">
    <value>Edit your formula so that it includes a bracket.</value>
    <comment>1 How to fix the error. </comment>
  </data>
  <data name="ErrorResource_ErrEmptyInvalidIdentifier_ShortMessage" xml:space="preserve">
    <value>The identifier has no valid text.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrorResource_ErrEmptyInvalidIdentifier_HowToFix_1" xml:space="preserve">
    <value>Ensure you have text for your identifier. This error occurs when the identifier is all blanks or spaces.</value>
    <comment>1 How to fix the error. </comment>
  </data>
  <data name="ErrUnOrderedTypeForComparison_Type" xml:space="preserve">
    <value>Unable to compare values of type {0}.</value>
    <comment>Error message when the user attempts to compare (using Less Than, Greater Than, Less Than or Equal, Greater Than or Equal) values of non-numeric types. {0} will be canonical type representations like "Number" or "Boolean".</comment>
  </data>
  <data name="ErrorResource_ErrIncompatibleTypesForEquality_Left_Right_ShortMessage" xml:space="preserve">
    <value>Incompatible types for comparison. These types can't be compared: {0}, {1}.</value>
    <comment>Error message when the user attempts to check equality between two values that don't make sense together. {0} and {1} will be canonical type representations like "Number" or "Boolean".</comment>
  </data>
  <data name="ErrorResource_ErrIncompatibleTypesForEquality_Left_Right_LongMessage" xml:space="preserve">
    <value>We can't evaluate your formula because the values being compared in the formula aren’t the same type.</value>
  </data>
  <data name="ErrorResource_ErrIncompatibleTypesForEquality_Left_Right_HowToFix_1" xml:space="preserve">
    <value>You might need to convert the value to be the same type, such as converting a date string (e.g., "12/31/2018") to a date value.</value>
    <comment>1 How to fix the error. </comment>
  </data>
  <data name="ErrorResource_ErrIncompatibleTypesForEquality_Left_Right_HowToFix_2" xml:space="preserve">
    <value>If you’re comparing records or tables, the field or column types must match exactly.</value>
    <comment>2 How to fix the error.</comment>
  </data>
  <data name="ErrorResource_ErrIncompatibleTypesForEquality_Left_Right_Link_1" xml:space="preserve">
    <value>Module: Use basic formulas</value>
    <comment>3 crown link on basic formulas</comment>
  </data>
  <data name="ErrorResource_ErrIncompatibleTypesForEquality_Left_Right_Link_1_URL" xml:space="preserve">
    <value>https://go.microsoft.com/fwlink/?linkid=2132396</value>
    <comment>{Locked}</comment>
  </data>
  <data name="ErrorResource_ErrIncompatibleTypesForEquality_Left_Right_Link_2" xml:space="preserve">
    <value>Module: Author basic formulas with tables and records</value>
    <comment>3 crown link on tables and records</comment>
  </data>
  <data name="ErrorResource_ErrIncompatibleTypesForEquality_Left_Right_Link_2_URL" xml:space="preserve">
    <value>https://go.microsoft.com/fwlink/?linkid=2132700</value>
    <comment>{Locked}</comment>
  </data>
  <data name="ErrorResource_ErrServiceFunctionUnknownOptionalParam_Name_ShortMessage" xml:space="preserve">
    <value>No parameter. This function has no optional parameter named '{0}'.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrorResource_ErrServiceFunctionUnknownOptionalParam_Name_HowToFix_1" xml:space="preserve">
    <value>How to fix: Remove or rename the parameter in your formula.</value>
    <comment>1 How to fix the error. </comment>
  </data>
  <data name="ErrorResource_ErrServiceFunctionUnknownOptionalParam_Name_Link_1" xml:space="preserve">
    <value>Article: Formula reference for Power Apps</value>
    <comment>Article: Formula reference for Power Apps</comment>
  </data>
  <data name="ErrorResource_ErrServiceFunctionUnknownOptionalParam_Name_Link_1_URL" xml:space="preserve">
    <value>https://go.microsoft.com/fwlink/?linkid=2132478</value>
    <comment>{Locked}</comment>
  </data>
  <data name="ErrorResource_ErrColumnTypeMismatch_ColName_ExpectedType_ActualType_ShortMessage" xml:space="preserve">
    <value>Incompatible type. The '{0}' column in the data source you’re updating expects a '{1}' type and you’re using a '{2}' type.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrorResource_ErrColumnTypeMismatch_ColName_ExpectedType_ActualType_HowToFix_1" xml:space="preserve">
    <value>You might need to convert the value to the same type, such as converting a date string (e.g., "12/31/2018") to a date value or a string to a number.</value>
    <comment>1 How to fix the error. </comment>
  </data>
  <data name="ErrorResource_ErrColumnTypeMismatch_ColName_ExpectedType_ActualType_Link_1" xml:space="preserve">
    <value>Module: Use basic formulas</value>
    <comment>3 crown link on basic formulas</comment>
  </data>
  <data name="ErrorResource_ErrColumnTypeMismatch_ColName_ExpectedType_ActualType_Link_1_URL" xml:space="preserve">
    <value>https://go.microsoft.com/fwlink/?linkid=2132396</value>
    <comment>{Locked}</comment>
  </data>
  <data name="ErrorResource_ErrColumnTypeMismatch_ColName_ExpectedType_ActualType_Link_2" xml:space="preserve">
    <value>Module: Author basic formulas with tables and records</value>
    <comment>3 crown link on tables and records</comment>
  </data>
  <data name="ErrorResource_ErrColumnTypeMismatch_ColName_ExpectedType_ActualType_Link_2_URL" xml:space="preserve">
    <value>https://go.microsoft.com/fwlink/?linkid=2132700</value>
    <comment>{Locked}</comment>
  </data>
  <data name="ErrorResource_ErrColumnMissing_ColName_ExpectedType_ShortMessage" xml:space="preserve">
    <value>Missing column. Your formula is missing a column '{0}' with a type of '{1}'.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrorResource_ErrColumnMissing_ColName_ExpectedType_HowToFix_1" xml:space="preserve">
    <value>Add a column to your formula.</value>
    <comment>1 How to fix the error. </comment>
  </data>
  <data name="ErrorResource_ErrColumnMissing_ColName_ExpectedType_Link_1" xml:space="preserve">
    <value>Article: Formula reference for Power Apps</value>
    <comment>Article: Formula reference for Power Apps</comment>
  </data>
  <data name="ErrorResource_ErrColumnMissing_ColName_ExpectedType_Link_1_URL" xml:space="preserve">
    <value>https://go.microsoft.com/fwlink/?linkid=2132478</value>
    <comment>{Locked}</comment>
  </data>
  <data name="ErrorResource_ErrRecordDoesNotAcceptThisType_ShortMessage" xml:space="preserve">
    <value>Incompatible type. The item you are trying to put into a record has a type that is not compatible with the record.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrorResource_ErrTableDoesNotAcceptThisType_ShortMessage" xml:space="preserve">
    <value>Incompatible type. The item you are trying to put into a table has a type that is not compatible with the table.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrorResource_ErrTableDoesNotAcceptThisType_HowToFix_1" xml:space="preserve">
    <value>Ensure that the type of the item you want to push into the table is compatible with the table. You may need to convert the type of the item, for instance, to a record.</value>
    <comment>1 How to fix the error. </comment>
  </data>
  <data name="ErrorResource_ErrTableDoesNotAcceptThisType_Link_1" xml:space="preserve">
    <value>Module: Use basic formulas</value>
    <comment>3 crown link on basic formulas</comment>
  </data>
  <data name="ErrorResource_ErrTableDoesNotAcceptThisType_Link_1_URL" xml:space="preserve">
    <value>https://go.microsoft.com/fwlink/?linkid=2132396</value>
    <comment>{Locked}</comment>
  </data>
  <data name="ErrorResource_ErrTableDoesNotAcceptThisType_Link_2" xml:space="preserve">
    <value>Module: Author basic formulas with tables and records</value>
    <comment>3 crown link on tables and records</comment>
  </data>
  <data name="ErrorResource_ErrTableDoesNotAcceptThisType_Link_2_URL" xml:space="preserve">
    <value>https://go.microsoft.com/fwlink/?linkid=2132700</value>
    <comment>{Locked}</comment>
  </data>
  <data name="ErrorResource_ErrTypeError_ShortMessage" xml:space="preserve">
    <value>Incompatible type. We can't evaluate your formula because of a type error.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrorResource_ErrTypeError_LongMessage" xml:space="preserve">
    <value>The data may not match the expected type. (text, number, date, table, record.)</value>
  </data>
  <data name="ErrorResource_ErrTypeError_HowToFix_1" xml:space="preserve">
    <value>Check the types of the values involved in the formula and ensure the types match.</value>
    <comment>1 How to fix the error. </comment>
  </data>
  <data name="ErrorResource_ErrTypeError_Link_1" xml:space="preserve">
    <value>Module: Use basic formulas</value>
    <comment>3 crown link on basic formulas</comment>
  </data>
  <data name="ErrorResource_ErrTypeError_Link_1_URL" xml:space="preserve">
    <value>https://go.microsoft.com/fwlink/?linkid=2132396</value>
    <comment>{Locked}</comment>
  </data>
  <data name="ErrorResource_ErrTypeError_Link_2" xml:space="preserve">
    <value>Module: Author basic formulas with tables and records</value>
    <comment>3 crown link on tables and records</comment>
  </data>
  <data name="ErrorResource_ErrTypeError_Link_2_URL" xml:space="preserve">
    <value>https://go.microsoft.com/fwlink/?linkid=2132700</value>
    <comment>{Locked}</comment>
  </data>
  <data name="ErrorResource_ErrDateExpected_ShortMessage" xml:space="preserve">
    <value>Expected date. We expect a date at this point in the formula.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrorResource_ErrDateExpected_LongMessage" xml:space="preserve">
    <value>This error will occur if you use a function that requires a date but you supply, for example, text instead.</value>
  </data>
  <data name="ErrorResource_ErrDateExpected_HowToFix_1" xml:space="preserve">
    <value>Edit your formula so that it evaluates to a date at this point in the formula.</value>
    <comment>1 How to fix the error. </comment>
  </data>
  <data name="ErrorResource_ErrDateExpected_Link_1" xml:space="preserve">
    <value>Article: Formula reference for Power Apps</value>
    <comment>Article: Formula reference for Power Apps</comment>
  </data>
  <data name="ErrorResource_ErrDateExpected_Link_1_URL" xml:space="preserve">
    <value>https://go.microsoft.com/fwlink/?linkid=2132478</value>
    <comment>{Locked}</comment>
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_ShortMessage" xml:space="preserve">
    <value>Delegation warning. The "{0}" part of this formula might not work correctly on large data sets.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_LongMessage" xml:space="preserve">
    <value>The data source might not be able to process the formula and might return an incomplete data set. Your application might not return correct results or behave correctly if the data set is incomplete.</value>
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_HowToFix_1" xml:space="preserve">
    <value>If your data set exceeds the 500 record limit but contains less than 2,000 records, try resetting the limit.</value>
    <comment>1 How to fix the error. </comment>
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_HowToFix_2" xml:space="preserve">
    <value>Try simplifying the formula.</value>
    <comment>2 How to fix the error.</comment>
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_HowToFix_3" xml:space="preserve">
    <value>Try moving your data to a different data source.</value>
    <comment>3 How to fix the error.</comment>
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_Link_1" xml:space="preserve">
    <value>Article: Understand delegation in a canvas app</value>
    <comment>Article on delegation</comment>
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_Link_1_URL" xml:space="preserve">
    <value>https://go.microsoft.com/fwlink/?linkid=2132701</value>
    <comment>{Locked}</comment>
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_Link_2" xml:space="preserve">
    <value>Blog: Data row limits for delegation</value>
    <comment>Blog: Data row limits for delegation</comment>
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_Link_2_URL" xml:space="preserve">
    <value>https://go.microsoft.com/fwlink/?linkid=2132702</value>
    <comment>{Locked}</comment>
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_OpNotSupportedByColumn_ShortMessage" xml:space="preserve">
    <value>Delegation warning. The highlighted part of this formula might not work correctly with column "{0}" on large data sets.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_OpNotSupportedByColumn_LongMessage" xml:space="preserve">
    <value>The data source might not be able to process the formula and might return an incomplete data set. Your application might not return correct results or behave correctly if the data set is incomplete.</value>
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_OpNotSupportedByColumn_HowToFix_1" xml:space="preserve">
    <value>If your data set exceeds the 500 record limit but contains less than 2,000 records, try resetting the limit.</value>
    <comment>1 How to fix the error. </comment>
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_OpNotSupportedByColumn_HowToFix_2" xml:space="preserve">
    <value>Try simplifying the formula.</value>
    <comment>2 How to fix the error.</comment>
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_OpNotSupportedByColumn_HowToFix_3" xml:space="preserve">
    <value>Try moving your data to a different data source.</value>
    <comment>3 How to fix the error.</comment>
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_OpNotSupportedByColumn_Link_1" xml:space="preserve">
    <value>Article: Understand delegation in a canvas app</value>
    <comment>Article on delegation</comment>
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_OpNotSupportedByColumn_Link_1_URL" xml:space="preserve">
    <value>https://go.microsoft.com/fwlink/?linkid=2132701</value>
    <comment>{Locked}</comment>
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_OpNotSupportedByColumn_Link_2" xml:space="preserve">
    <value>Blog: Data row limits for delegation</value>
    <comment>Blog: Data row limits for delegation</comment>
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_OpNotSupportedByColumn_Link_2_URL" xml:space="preserve">
    <value>https://go.microsoft.com/fwlink/?linkid=2132702</value>
    <comment>{Locked}</comment>
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_InOpRhs_ShortMessage" xml:space="preserve">
    <value>Delegation warning. The highlighted part of this formula might not work correctly on large data sets.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_InOpRhs_LongMessage" xml:space="preserve">
    <value> The right side of the "in" operator should be a column name from the correct data source. The data source might not be able to process the formula and might return an incomplete data set. Your application might not return correct results or behave correctly if the data set is incomplete.</value>
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_InOpRhs_HowToFix_1" xml:space="preserve">
    <value>Change the item to the right of the "in" operator to be a column from the correct data source.</value>
    <comment>1 How to fix the error. </comment>
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_InOpRhs_HowToFix_2" xml:space="preserve">
    <value>If your data set exceeds the 500 record limit but contains less than 2,000 records, try resetting the limit.</value>
    <comment>2 How to fix the error. </comment>
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_InOpRhs_HowToFix_3" xml:space="preserve">
    <value>Try simplifying the formula.</value>
    <comment>3 How to fix the error.</comment>
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_InOpRhs_HowToFix_4" xml:space="preserve">
    <value>Try moving your data to a different data source.</value>
    <comment>4 How to fix the error.</comment>
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_InOpRhs_Link_1" xml:space="preserve">
    <value>Article: Understand delegation in a canvas app</value>
    <comment>Article on delegation</comment>
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_InOpRhs_Link_1_URL" xml:space="preserve">
    <value>https://go.microsoft.com/fwlink/?linkid=2132701</value>
    <comment>{Locked}</comment>
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_InOpRhs_Link_2" xml:space="preserve">
    <value>Blog: Data row limits for delegation</value>
    <comment>Blog: Data row limits for delegation</comment>
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_InOpRhs_Link_2_URL" xml:space="preserve">
    <value>https://go.microsoft.com/fwlink/?linkid=2132702</value>
    <comment>{Locked}</comment>
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_InOpInvalidColumn_ShortMessage" xml:space="preserve">
    <value>The highlighted part of this formula might not work correctly on large data sets. </value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_InOpInvalidColumn_LongMessage" xml:space="preserve">
    <value> The right side of the "in" operator is not a column from the correct data source . The data source might not be able to process the formula and might return an incomplete data set. Your application might not return correct results or behave correctly if the data set is incomplete.
      </value>
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_InOpInvalidColumn_HowToFix_1" xml:space="preserve">
    <value>Change the item to the right of the "in" operator to be a column from the correct data source.</value>
    <comment>1 How to fix the error. </comment>
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_InOpInvalidColumn_HowToFix_2" xml:space="preserve">
    <value>If your data set exceeds the 500 record limit but contains less than 2,000 records, try resetting the limit.
      </value>
    <comment>2 How to fix the error. </comment>
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_InOpInvalidColumn_HowToFix_3" xml:space="preserve">
    <value>Try simplifying the formula.</value>
    <comment>3 How to fix the error.</comment>
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_InOpInvalidColumn_HowToFix_4" xml:space="preserve">
    <value>Try moving your data to a different data source.</value>
    <comment>4 How to fix the error.</comment>
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_InOpInvalidColumn_Link_1" xml:space="preserve">
    <value>Article: Understand delegation in a canvas app</value>
    <comment>Article on delegation</comment>
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_InOpInvalidColumn_Link_1_URL" xml:space="preserve">
    <value>https://go.microsoft.com/fwlink/?linkid=2132701</value>
    <comment>{Locked}</comment>
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_InOpInvalidColumn_Link_2" xml:space="preserve">
    <value>Blog: Data row limits for delegation</value>
    <comment>Blog: Data row limits for delegation</comment>
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_InOpInvalidColumn_Link_2_URL" xml:space="preserve">
    <value>https://go.microsoft.com/fwlink/?linkid=2132702</value>
    <comment>{Locked}</comment>
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_OpNotSupportedByService_ShortMessage" xml:space="preserve">
    <value>Delegation warning. The highlighted part of this formula might not work correctly on large data sets. The "{0}" operation is not supported by this connector.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_OpNotSupportedByService_LongMessage" xml:space="preserve">
    <value>The data source might not be able to process the formula and might return an incomplete data set. Your application might not return correct results or behave correctly if the data set is incomplete.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_OpNotSupportedByService_HowToFix_1" xml:space="preserve">
    <value>If your data set exceeds the 500 record limit but contains less than 2,000 records, try resetting the limit.</value>
    <comment>1 How to fix the error. </comment>
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_OpNotSupportedByService_HowToFix_2" xml:space="preserve">
    <value>Try simplifying the formula.</value>
    <comment>2 How to fix the error.</comment>
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_OpNotSupportedByService_HowToFix_3" xml:space="preserve">
    <value>Try moving your data to a different data source.</value>
    <comment>3 How to fix the error.</comment>
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_OpNotSupportedByService_Link_1" xml:space="preserve">
    <value>Article: Understand delegation in a canvas app</value>
    <comment>Article on delegation</comment>
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_OpNotSupportedByService_Link_1_URL" xml:space="preserve">
    <value>https://go.microsoft.com/fwlink/?linkid=2132701</value>
    <comment>{Locked}</comment>
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_OpNotSupportedByService_Link_2" xml:space="preserve">
    <value>Blog: Data row limits for delegation</value>
    <comment>Blog: Data row limits for delegation</comment>
  </data>
  <data name="ErrorResource_SuggestRemoteExecutionHint_OpNotSupportedByService_Link_2_URL" xml:space="preserve">
    <value>https://go.microsoft.com/fwlink/?linkid=2132702</value>
    <comment>{Locked}</comment>
  </data>
  <data name="ErrorResource_ErrOnlyOneViewExpected_ShortMessage" xml:space="preserve">
    <value>Expected only one view. We expect only one view at this point in the formula.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrorResource_ErrOnlyOneViewExpected_HowToFix_1" xml:space="preserve">
    <value>Edit your formula so that it only has one view at this point in the formula.</value>
    <comment>How to fix the error.</comment>
  </data>
  <data name="ErrorResource_ErrViewFromCurrentTableExpected_ShortMessage" xml:space="preserve">
    <value>Expected a view from data source {0}.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrorResource_ErrViewFromCurrentTableExpected_HowToFix_1" xml:space="preserve">
    <value>Edit your formula so that it has view from data source {0}.</value>
    <comment>How to fix the error.</comment>
  </data>
  <data name="ErrorResource_ErrInvalidControlReference_ShortMessage" xml:space="preserve">
    <value>This control reference cannot be used in this property</value>
    <comment>Error message.</comment>
  </data>
  <data name="ErrorResource_ErrInvalidControlReference_HowToFix_1" xml:space="preserve">
    <value>This property only supports references to global variables, collections, and some control and screen properties. See the link for a list of supported control properties.</value>
    <comment>How to fix message for an error</comment>
  </data>
  <data name="ErrorResource_ErrInvalidControlReference_Link_1" xml:space="preserve">
    <value>Reference: ConfirmExit for Canvas Apps</value>
    <comment>Reference: ConfirmExit for Canvas Apps</comment>
  </data>
  <data name="ErrorResource_ErrInvalidControlReference_Link_1_URL" xml:space="preserve">
    <value>https://go.microsoft.com/fwlink/?linkid=2132703</value>
    <comment>{Locked}</comment>
  </data>
  <data name="ErrorResource_ErrInvalidStringInterpolation_ShortMessage" xml:space="preserve">
    <value>Expressions which appear inside an interpolated string must evaluate to a Text value or to a compatible type.</value>
    <comment>Error message. The term "interpolated string" should be translated using the same terms used in the C# documentation.</comment>
  </data>
  <data name="ErrorResource_ErrInvalidStringInterpolation_HowToFix_1" xml:space="preserve">
    <value>Check the types of the expressions inside the interpolated string.</value>
    <comment>How to fix message for an error. The term "interpolated string" should be translated using the same terms used in the C# documentation.</comment>
  </data>
  <data name="ErrorResource_ErrEmptyIsland_ShortMessage" xml:space="preserve">
    <value>Empty expressions cannot appear inside an interpolated string.</value>
    <comment>Error message. The term "interpolated string" should be translated using the same terms used in the C# documentation.</comment>
  </data>
  <data name="ErrorResource_ErrEmptyIsland_HowToFix_1" xml:space="preserve">
    <value>Check for empty expressions inside the interpolated string.</value>
    <comment>How to fix message for an error. The term "interpolated string" should be translated using the same terms used in the C# documentation.</comment>
  </data>
  <data name="ErrorResource_ErrAsNotInContext_ShortMessage" xml:space="preserve">
    <value>As is not permitted in this context</value>
    <comment>{Locked=As} This is an error message that shows up when the As keyword is used but is not valid</comment>
  </data>
  <data name="ErrorResource_ErrUntypedObjectScope_ShortMessage" xml:space="preserve">
    <value>Untyped objects cannot be used as the first argument to functions which support record scopes.</value>
    <comment>This error message shows up when using untyped objects as the first arugment to functions with lambda overloads</comment>
  </data>
  <data name="ErrNamedFormula_MissingSemicolon" xml:space="preserve">
    <value>Named formula must end with a semicolon.</value>
    <comment>A semicolon must terminate named formulas. For example, a=10;</comment>
  </data>
  <data name="ErrNamedFormula_MissingValue" xml:space="preserve">
    <value>Named formula must be an expression.</value>
    <comment>This error message shows up when Named formula is not an expression. For example, a = ;</comment>
  </data>
  <data name="ErrUDF_MissingFunctionBody" xml:space="preserve">
    <value>User defined function must have a body.</value>
    <comment>This error message shows up when user defined function does not have a body</comment>
  </data>
  <data name="ErrUDF_FunctionAlreadyDefined" xml:space="preserve">
    <value>Function {0} is already defined.</value>
    <comment>This error message shows up when user tries to define a function that already exists</comment>
  </data>
  <data name="ErrUDF_DuplicateParameter" xml:space="preserve">
    <value>Parameter {0} is a duplicate.</value>
    <comment>This error message shows up when user defined function has a duplicate parameter</comment>
  </data>
  <data name="ErrUDF_UnknownType" xml:space="preserve">
    <value>Unknown type {0}.</value>
    <comment>This error message shows up when an invalid type is used</comment>
  </data>
  <data name="ErrUDF_ReturnTypeDoesNotMatch" xml:space="preserve">
    <value>The stated function return type does not match the return type of the function body.</value>
    <comment>This error message shows up when expected return type does not match with actual return type</comment>
  </data>
  <data name="ErrUDF_MissingReturnType" xml:space="preserve">
    <value>Missing function return type, for example the ":Number" in "FindMonth( d:Text ):Number = Month( DateParse( d ));"</value>
    <comment>This error message shows up when return type is not provided for user defined function, the term FindMonth is a function name, and if translated it should remain a single word {Locked=Number} {Locked=Text} {Locked=Month} {Locked=DateParse}</comment>
  </data>
  <data name="ErrUDF_MissingParamType" xml:space="preserve">
    <value>Missing function argument type, for example the ":Text" in "FindMonth( d:Text ):Number = Month( DateParse( d ))"</value>
    <comment>This error message shows up when argument type is not provided for the parameters in user defined function, the term FindMonth is a function name, and if translated it should remain a single word {Locked=Number} {Locked=Text} {Locked=Month} {Locked=DateParse}</comment>
  </data>
  <data name="ErrNamedFormula_AlreadyDefined" xml:space="preserve">
    <value>NamedFormula '{0}' already exists.</value>
  </data>
  <data name="ErrorResource_NameConflict" xml:space="preserve">
    <value>Can't create a {0} named '{1}' because that name is already used for a {2}.</value>
    <comment>{0} - Entity that is about to be created/renamed, {1} - Name of the entity, {2} - Type of entity that is already using the name.</comment>
  </data>
  <data name="ErrNeedValidVariableName_Arg" xml:space="preserve">
    <value>The first argument of '{0}' should be a valid variable name, and cannot conflict with any existing control, screen, collection, or data source names. Found type '{1}'</value>
    <comment>Error Message</comment>
  </data>
  <data name="AboutSet" xml:space="preserve">
    <value>Create and set a global variable.</value>
    <comment>Description of 'Set' function.</comment>
  </data>
  <data name="SetArg2" xml:space="preserve">
    <value>value</value>
    <comment>function_parameter - Second argument to the Set function - any Power Apps value.</comment>
  </data>
  <data name="AboutDec2Hex" xml:space="preserve">
    <value>Converts a decimal number to hexadecimal</value>
    <comment>Description of 'Dec2Hex' function.</comment>
  </data>
  <data name="Dec2HexArg1" xml:space="preserve">
    <value>number</value>
  </data>
  <data name="AboutDec2Hex_number" xml:space="preserve">
    <value>A numeric decimal value to convert to hexadecimal string.</value>
    <comment>Description of 'Dec2HexArg1' function parameter.</comment>
  </data>
  <data name="Dec2HexArg2" xml:space="preserve">
    <value>places</value>
  </data>
  <data name="AboutDec2Hex_places" xml:space="preserve">
    <value>A numeric value to add padding to hexadecimal string.</value>
    <comment>Description of 'Dec2HexArg2' function parameter.</comment>
  </data>
  <data name="AboutDec2HexT" xml:space="preserve">
    <value>Converts a column of decimal numbers to hexadecimals</value>
    <comment>Description of 'Dec2HexT' function.</comment>
  </data>
  <data name="Dec2HexTArg1" xml:space="preserve">
    <value>table</value>
  </data>
  <data name="Dec2HexTArg2" xml:space="preserve">
    <value>places</value>
  </data>
  <data name="AboutDec2HexT_places" xml:space="preserve">
    <value>A numeric value or array of values to add padding to hexadecimal strings.</value>
    <comment>Description of 'Dec2HexArgT2' function parameter.</comment>
  </data>
  <data name="AboutDec2Hex_table" xml:space="preserve">
    <value>A column of numeric decimal values to convert to hexadecimals.</value>
    <comment>Description of 'Dec2HexTArg1' function parameter.</comment>
  </data>
  <data name="AboutHex2Dec" xml:space="preserve">
    <value>Converts a hexadecimal number to decimal</value>
    <comment>Description of 'Hex2Dec' function.</comment>
  </data>
  <data name="Hex2DecArg1" xml:space="preserve">
    <value>number</value>
  </data>
  <data name="AboutHex2Dec_number" xml:space="preserve">
    <value>A hexadecimal string convert to decimal.</value>
    <comment>Description of 'Hex2DecArg1' function parameter.</comment>
  </data>
  <data name="AboutHex2DecT" xml:space="preserve">
    <value>Converts a column of hexadecimal numbers to decimals</value>
    <comment>Description of 'Hex2DecT' function.</comment>
  </data>
  <data name="Hex2DecTArg1" xml:space="preserve">
    <value>table</value>
  </data>
  <data name="AboutHex2Dec_table" xml:space="preserve">
    <value>A column of hexadecimal strings to convert to decimals.</value>
    <comment>Description of 'Hex2DecTArg1' function parameter.</comment>
  </data>
  <data name="ErrDeprecated" xml:space="preserve">
    <value>This feature is deprecated and is no longer supported.</value>
    <comment>An error message for deprecated features.</comment>
  </data>
  <data name="ErrUnsupportedFunction" xml:space="preserve">
    <value>In namespace {1}, function {0} is not supported.</value>
    <comment>An error message when a function is not supported.</comment>
  </data>
  <data name="WarnDeferredType" xml:space="preserve">
    <value>Warning: Deferred type provided.</value>
    <comment>Warning given when the input has deferred Type. Deferred type is unknown type at compile time and correct type will be supplied by user before evaluation.</comment>
  </data>
  <data name="ErrExpectedIdentifierArg_Name" xml:space="preserve">
    <value>Expected identifier name</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrInvalidFunction" xml:space="preserve">
    <value>This function is ambiguous, it contains lambda expressions and column identifiers for the same argument.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="OptionSetOptionNotSupported" xml:space="preserve">
    <value>The value of option {0} is not of expected type {1}.</value>
    <comment>Error Message. When BooleanOptionSet option has an invalid value.</comment>
  </data>
  <data name="AboutOptionSetInfo" xml:space="preserve">
    <value>Returns logical name of the given option set value.</value>
    <comment>Description of 'OptionSetInfo' function.</comment>
  </data>
  <data name="AboutOptionSetInfoArg1" xml:space="preserve">
    <value>option</value>
  </data>
  <data name="AboutOptionSetInfo_option" xml:space="preserve">
    <value>An option set value whose logical name will be returned.</value>
  </data>
  <data name="AboutLanguage" xml:space="preserve">
    <value>Get the default locale set at runtime.</value>
    <comment>Description of 'Language' function.</comment>
  </data>
  <data name="AboutEncodeUrl" xml:space="preserve">
    <value>Encodes a URL string, replacing certain non-alphanumeric characters with % and a hexadecimal number.</value>
    <comment>Description of 'EncodeUrl' function.</comment>
  </data>
  <data name="EncodeUrlArg1" xml:space="preserve">
    <value>url</value>
    <comment>Function_parameter - First parameter for the EncodeUrl function - the URL(string) to encode. Translate this string. Maintain as a single word (do not add spaces)</comment>
  </data>
  <data name="AboutEncodeUrl_url" xml:space="preserve">
    <value>A url to be encoded.</value>
  </data>
  <data name="AboutEncodeHTML" xml:space="preserve">
    <value>Converts a text to an HTML-encoded text.</value>
    <comment>Description of 'EncodeHTML' function.</comment>
  </data>
  <data name="EncodeHTMLArg1" xml:space="preserve">
    <value>value</value>
    <comment>Function_parameter - First parameter for the EncodeHTML function - the value (string) to encode.</comment>
  </data>
  <data name="AboutEncodeHTML_value" xml:space="preserve">
    <value>A text to be encoded.</value>
  </data>
  <data name="ErrUnimplementedFunction" xml:space="preserve">
    <value>'{0}' is a recognized but not supported function.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="InvalidCast" xml:space="preserve">
    <value>Type conversion failed because the given value was of type '{0}', expected '{1}' type.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="WrnSortByColumnsNonConstantColumnName" xml:space="preserve">
    <value>The expression '{0}' may represent a column that is not part of the data source or has not been downloaded. Consider using the column name directly instead.</value>
    <comment>Warning message.</comment>
  </data>
  <data name="WrnDelegationTableNotSupported" xml:space="preserve">
    <value>This operation on table '{0}' may not work if it has more than {1} rows.</value>
    <comment>Warning message.</comment>
  </data>
  <data name="WrnDelegationPredicate" xml:space="preserve">
    <value>This predicate will always be true. Did you mean to use ThisRecord or [@ ]?</value>
    <comment>Warning message.</comment>
  </data>
  <data name="WrnDelegationOnlyPrimaryKeyField" xml:space="preserve">
    <value>Can't delegate {0}: only support delegation for lookup on primary key field '{1}'.</value>
    <comment>Warning message.</comment>
  </data>
  <data name="WrnDelegationRefersThisRecord" xml:space="preserve">
    <value>Can't delegate {0}: Expression compares multiple fields.</value>
    <comment>Warning message.</comment>
  </data>
  <data name="WrnDelegationBehaviorFunction" xml:space="preserve">
    <value>Can't delegate {0}: contains a behavior function '{1}'.</value>
    <comment>Warning message.</comment>
  </data>
  <data name="AboutIsMatch" xml:space="preserve">
    <value>Determines if the supplied text has a match of the supplied text format.</value>
    <comment>Description of 'IsMatch' function.</comment>
  </data>
  <data name="AboutIsMatch_text" xml:space="preserve">
    <value>The text to be compared against the format.</value>
  </data>
  <data name="AboutIsMatch_format" xml:space="preserve">
    <value>The format to check the text against. It may be a value of the TextFormat enum or a regular expression.</value>
  </data>
  <data name="AboutIsMatch_extent" xml:space="preserve">
    <value>This determines what part of the text we want to match. It may be a value of the MatchOptions enum.</value>
    <comment>{Locked=MatchOptions} Tooltip for the third argument of the IsMatch function.</comment>
  </data>
  <data name="IsMatchArg1" xml:space="preserve">
    <value>text</value>
    <comment>function_parameter - First argument to the IsMatch function - the text to be compared against the format.</comment>
  </data>
  <data name="IsMatchArg2" xml:space="preserve">
    <value>format</value>
    <comment>function_parameter - Second argument to the IsMatch function - a regular expression format used to match the input text.</comment>
  </data>
  <data name="IsMatchArg3" xml:space="preserve">
    <value>extent</value>
    <comment>function_parameter - Third argument to the IsMatch function. An optional parameter of flags used to determine the extent with which the format is matched to the text.</comment>
  </data>
  <data name="AboutMatch" xml:space="preserve">
    <value>Searches the supplied text for the specified regular expression, returning the first match from it.</value>
    <comment>Description of 'Match' function.</comment>
  </data>
  <data name="AboutMatchAll" xml:space="preserve">
    <value>Searches the supplied text for the specified regular expression, returning all matches from it.</value>
    <comment>Description of 'MatchAll' function.</comment>
  </data>
  <data name="AboutMatch_text" xml:space="preserve">
    <value>The text to be searched against the regular expression.</value>
    <comment>Tooltip for the first argument of the Match function.</comment>
  </data>
  <data name="AboutMatch_regular_expression" xml:space="preserve">
    <value>The regular expression to check the text against. It can contain captures (values between parenthesis) that will be returned in case of a successful match.</value>
    <comment>Tooltip for the second argument of the Match function.</comment>
  </data>
  <data name="AboutMatch_options" xml:space="preserve">
    <value>This determines what part of the text we want to match. It may be a value of the MatchOptions enum.</value>
    <comment>{Locked=MatchOptions} Tooltip for the third argument of the MatchAll function.</comment>
  </data>
  <data name="AboutMatchAll_text" xml:space="preserve">
    <value>The text to be searched against the regular expression.</value>
    <comment>Tooltip for the first argument of the MatchAll function.</comment>
  </data>
  <data name="AboutMatchAll_regular_expression" xml:space="preserve">
    <value>The regular expression to check the text against. It can contain captures (values between parenthesis) that will be returned in case of a successful match.</value>
    <comment>Tooltip for the second argument of the MatchAll function.</comment>
  </data>
  <data name="AboutMatchAll_options" xml:space="preserve">
    <value>This determines what part of the text we want to match. It may be a value of the MatchOptions enum.</value>
    <comment>{Locked=MatchOptions} Tooltip for the third argument of the MatchAll function.</comment>
  </data>
  <data name="MatchArg1" xml:space="preserve">
    <value>text</value>
    <comment>function_parameter - First argument to the Match function - the text to be compared against the regular expression.</comment>
  </data>
  <data name="MatchArg2" xml:space="preserve">
    <value>regular_expression</value>
    <comment>function_parameter - Second argument to the Match function - a regular expression to match against the input text. Translate this string. Maintain as a single word (do not add spaces)</comment>
  </data>
  <data name="MatchArg3" xml:space="preserve">
    <value>options</value>
    <comment>function_parameter - Third argument to the Match function. An optional parameter of flags used to determine the extent with which the regular expression is matched to the text.</comment>
  </data>
  <data name="AboutRefresh" xml:space="preserve">
    <value>Refreshes the specified data source.</value>
    <comment>Description of 'Refresh' function.</comment>
  </data>
  <data name="RefreshArg1" xml:space="preserve">
    <value>connected_data_source</value>
    <comment>function_parameter - Parameter for the Refresh function, the name of a data source that needs to be refreshed locally. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="ErrNeedAgg" xml:space="preserve">
    <value>Expected a record or table value.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="AboutRefresh_connected_data_source" xml:space="preserve">
    <value>A connected data source to refresh.</value>
  </data>
  <data name="ErrDataSourceCannotBeRefreshed" xml:space="preserve">
    <value>Only managed connections can be refreshed.</value>
    <comment>Error message on non-service data sources passed to Refresh.</comment>
  </data>
  <data name="ErrorResource_ErrInvalidRegEx_ShortMessage" xml:space="preserve">
    <value>Invalid regular expression.</value>
    <comment>Error message indicating that the regular expression entered by the user is invalid.</comment>
  </data>
  <data name="ErrorResource_ErrVariableRegEx_ShortMessage" xml:space="preserve">
    <value>Regular expressions must be constant values.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrorResource_MutationFunctionCannotBeUsedWithImmutableValue" xml:space="preserve">
    <value>The value passed to the '{0}' function cannot be changed.</value>
    <comment>Error message shown to the user if they try to use a mutation function (such as Patch / Collect) with a value that cannot be mutated.</comment>
  </data>
  <data name="InfoRegExCaptureNameHidesPredefinedFullMatchField" xml:space="preserve">
    <value>The capture name '{0}' is hiding the predefined property that returns the full match of the regular expression. Consider renaming it if you want to use that named property to extract the full match in the specified text.</value>
    <comment>Information message indicating that the maker used a group name that will hide the property 'FullMatch' in the function result.</comment>
  </data>
  <data name="InfoRegExCaptureNameHidesPredefinedSubMatchesField" xml:space="preserve">
    <value>The capture name '{0}' is hiding the predefined property that returns the group matches in the regular expression. Consider renaming it if you want to use that named property to extract all the sub-matches in the specified text.</value>
    <comment>Information message indicating that the maker used a group name that will hide the property 'SubMatches' in the function result.</comment>
  </data>
  <data name="InfoRegExCaptureNameHidesPredefinedStartMatchField" xml:space="preserve">
    <value>The capture name '{0}' is hiding the predefined property that returns the location of the match of the regular expression. Consider renaming it if you want to use that named property to extract the position of the full match in the specified text.</value>
    <comment>Information message indicating that the maker used a group name that will hide the property 'StartMatch' in the function result.</comment>
  </data>
  <data name="AboutPlainText" xml:space="preserve">
    <value>Removes all formatting and returns a plain text value.</value>
    <comment>Description of 'PlainText' function.</comment>
  </data>
  <data name="PlainTextArg1" xml:space="preserve">
    <value>text</value>
    <comment>Function_parameter - First argument of the PlainText function - the text to have its HTML and XML tags removed.</comment>
  </data>
  <data name="AboutPlainText_text" xml:space="preserve">
    <value>The text to have its HTML and XML tags removed.</value>
  </data>
  <data name="ErrFilterFunctionBahaviorAsPredicate" xml:space="preserve">
    <value>Filter functions don't allow behavior functions as predicates.</value>
    <comment>When a filter function (like LookUp) contains a function as predicate that will trigger a side effect.</comment>
  </data>
  <data name="ErrFilterFunction_OnlyTwoArgs" xml:space="preserve">
    <value>Use the And operator to combine multiple predicates into the second argument.</value>
    <comment>{Locked=And} Limiting the Filter funciton to just two arguments, like the LookUp function, allowing us to add a third argument later also like LookUp.</comment>
  </data>
  <data name="ErrSetVariableWithRelationshipNotAllowTable" xml:space="preserve">
    <value>This table cannot be copied. Instead, create an inline table using the ForAll function and {...} notation to copy the individual columns desired.</value>
  </data>
  <data name="ErrSetVariableWithRelationshipNotAllowRecord" xml:space="preserve">
    <value>This record cannot be copied. Instead, create an inline record using {...} notation to copy the individual fields desired.</value>
  </data>
  <data name="ErrNotSupportedFormat_Func" xml:space="preserve">
    <value>The second argument of the '{0}' function is only supported for numeric and date/time values.</value>
    <comment>Error message when function use the second argument for non numeric or date/time value.</comment>
  </data>
  <data name="WrnSetExpandableType" xml:space="preserve">
    <value>Set a variable with an online datasource value (table or record) can cause multiple requests to the server. Soon this will be blocked.</value>
    <comment>Warning for makers that a certain capability should be avoided.</comment>
  </data>
  <data name="ErrTypeLiteral_InvalidTypeDefinition" xml:space="preserve">
    <value>Type literal declaration was invalid</value>
    <comment>Error message when type binding is invalid</comment>
  </data>
  <data name="ErrExpectedRVExtraFields" xml:space="preserve">
    <value>Type mismatch between source and target record types. Given type has extra fields: {0}.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrExpectedRVMissingFields" xml:space="preserve">
    <value>Type mismatch between source and target record types. Given type has missing fields: {0}.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrExpectedRVFieldNotFound" xml:space="preserve">
    <value>Type mismatch between source and target record types. Field name: {0} not found.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrExpectedRVFieldTypeMismatch" xml:space="preserve">
    <value>Type mismatch between source and target record types. Field name: {0} Expected {1}; Found {2}.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrExpectedRVCannotCoerceType" xml:space="preserve">
    <value>Given {0} type cannot be coerced to source type {1}.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrExpectedRVTypeMismatch" xml:space="preserve">
    <value>Type mismatch between source and target types. Expected {0}; Found {1}.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="AboutJSON" xml:space="preserve">
    <value>Generates a JSON text string for a table, record, or value.</value>
    <comment>Description of the 'JSON' function.</comment>
  </data>
  <data name="JSONArg1" xml:space="preserve">
    <value>data</value>
    <comment>function_parameter - First argument to the JSON function - the data (table, record or value) to be converted to the JSON format.</comment>
  </data>
  <data name="AboutJSON_data" xml:space="preserve">
    <value>The data structure to be converted to JSON. Tables, records, and primitive values are supported, arbitrarily nested.</value>
    <comment>Tooltip for the first argument of the JSON function.</comment>
  </data>
  <data name="JSONArg2" xml:space="preserve">
    <value>format</value>
    <comment>function_parameter - Second argument to the JSON function - The format for the JSON conversion. Member of the JSONFormat enum value.</comment>
  </data>
  <data name="AboutJSON_format" xml:space="preserve">
    <value>The format to be used in the JSON conversion. The value will be a member of the JSONFormat enumeration.</value>
    <comment>{Locked=JSONFormat} Tooltip for the second argument of the JSON function.</comment>
  </data>
  <data name="AboutTrace" xml:space="preserve">
    <value>Logs information to Application Insights when enabled, and logs in a test studio session that will be available in the test results.</value>
    <comment>Description of 'Trace' function.</comment>
  </data>
  <data name="TraceArg1" xml:space="preserve">
    <value>message</value>
    <comment>function_parameter - First argument to the Trace function - the message that will be logged to the test results and/or Application Insights.</comment>
  </data>
  <data name="TraceArg2" xml:space="preserve">
    <value>severity</value>
    <comment>Trace severity - a value that goes to an Application Insights TrackTrace API SeverityLevel </comment>
  </data>
  <data name="TraceArg3" xml:space="preserve">
    <value>custom_record</value>
    <comment>Custom dimensions - key value pairs that go to Application Insights. 'Record' is used as a noun in this string, not as a verb. Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="TraceArg4" xml:space="preserve">
    <value>trace_options</value>
    <comment>Trace options - additional options passed to the Trace function. 'Trace' is used as an adjective in this string, not as a verb (options for the trace function). Translate this string. Maintain as a single word (do not add spaces).</comment>
  </data>
  <data name="AboutTrace_message" xml:space="preserve">
    <value>The information to be traced.</value>
    <comment>Description of the first parameter to the 'Trace' function.</comment>
  </data>
  <data name="AboutTrace_severity" xml:space="preserve">
    <value>The severity level to be traced to Application Insights.</value>
    <comment>Description of the second parameter to the 'Trace' function.</comment>
  </data>
  <data name="AboutTrace_custom_record" xml:space="preserve">
    <value>A record containing custom data that will be traced to Application Insights.</value>
    <comment>Description of the third parameter to the 'Trace' function.</comment>
  </data>
  <data name="AboutTrace_trace_options" xml:space="preserve">
    <value>Additional options to the Trace function.</value>
    <comment>{Locked=Trace} Description of the fourth parameter to the 'Trace' function.</comment>
  </data>
  <data name="ErrFunctionArg2ParamMustBeConstant" xml:space="preserve">
    <value>The '{1}' parameter to the {0} function must be a constant value.</value>
    <comment>Error message shown to the user if they use a non-constant value for the a function that requires a constant value. The first parameter is the function name, and the second parameter is the function parameter name.</comment>
  </data>
  <data name="ErrJSONArg2IncompatibleOptions" xml:space="preserve">
    <value>The JSONFormat values '{0}' and '{1}' cannot be used together.</value>
    <comment>{Locked=JSONFormat} Error message shown to the user if they try to use incompatible values from the JSONFormat enumeration. The parameters are string values, members of that enumeration. For example: The JSONFormat values 'IgnoreBinaryData' and 'IncludeBinaryData' cannot be used together.</comment>
  </data>
  <data name="ErrJSONArg2UnsupportedOption" xml:space="preserve">
    <value>The value '{0}' is not supported as an option in the JSON function.</value>
    <comment>{Locked=JSON} Error message shown to the user if they try to pass an option that is not supported to the JSON function. The parameter is a single-character string value. For example: The value '$' is not supported as an option in the JSON function.</comment>
  </data>
  <data name="ErrJSONArg1ContainsUnsupportedMedia" xml:space="preserve">
    <value>The value passed to the JSON function contains media, and it is not supported by default. To allow JSON serialization of media values, make sure to use the IncludeBinaryData option in the 'format' parameter.</value>
    <comment>{Locked=JSON}{Locked=IncludeBinaryData}. Error message shown to the user if they try to serialize an object that contains media values, without specifying the flag that would allow that operation to happen. Media values are any form of media (audio, images, video) that are included as part of a record or a table. The term 'format' should be translated like the term 'JSONArg2' in this same file.</comment>
  </data>
  <data name="ErrJSONArg1UnsupportedType" xml:space="preserve">
    <value>The JSON function cannot serialize objects of type '{0}'.</value>
    <comment>{Locked=JSON}. Error message shown to the user if they try to serialize an object which is not supported in the JSON function.</comment>
  </data>
  <data name="ErrJSONArg1UnsupportedNestedType" xml:space="preserve">
    <value>The JSON function cannot serialize tables / objects with a nested property called '{0}' of type '{1}'.</value>
    <comment>{Locked=JSON}. Error message shown to the user if they try to serialize an object which contain a nested property of a type which is not supported in the JSON function. Both parameters are strings. E.g.: The JSON function cannot serialize tables / objects with a nested property called 'value' of type 'Polymorphic'.</comment>
  </data>
  <data name="ErrJSONArg1UnsupportedTypeWithNonBehavioral" xml:space="preserve">
    <value>The JSON function cannot serialize binary data in non-behavioral expression.</value>
  </data>
  <data name="ErrTraceInvalidCustomRecordType" xml:space="preserve">
    <value>The parameter {0} contains a property of type {1} which is not supported.</value>
    <comment>Error shown to the user when they try to use a custom record with an unsupported type. The first argument is the name of the parameter, the second argument is the type name.</comment>
  </data>
  <data name="ErrRecordContainsInvalidFields_Arg" xml:space="preserve">
    <value>The specified column is read-only and can't be modified: {0}.</value>
    <comment>Error shown to the user when they try to change the value of a read-only field.</comment>
  </data>
  <data name="AboutSearch" xml:space="preserve">
    <value>Searches text in 'source'. Returns rows where text is found. Comparison is done in case-insensitive manner.</value>
    <comment>Description of 'Search' function.</comment>
  </data>
  <data name="AboutSearch_source" xml:space="preserve">
    <value>Table to search.</value>
  </data>
  <data name="AboutSearch_text" xml:space="preserve">
    <value>Search text.</value>
  </data>
  <data name="AboutSearch_column" xml:space="preserve">
    <value>Column to search.</value>
  </data>
  <data name="SearchArg1" xml:space="preserve">
    <value>source</value>
    <comment>function_parameter - First argument to the Search function - the data source (table / collection) to search.</comment>
  </data>
  <data name="SearchArg2" xml:space="preserve">
    <value>text</value>
    <comment>function_parameter - Second argument to the Search function - the text to search.</comment>
  </data>
  <data name="SearchArg3" xml:space="preserve">
    <value>column</value>
    <comment>function_parameter - Third argument to the Search function - the column to search.</comment>
  </data>
  <data name="ErrSearchWrongType" xml:space="preserve">
    <value>Wrong column type. Expects text type.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrSearchWrongTableType" xml:space="preserve">
    <value>Table doesn't contain any column of text type.</value>
    <comment>Error Message.</comment>
  </data>
  <data name="ErrDeprecatedDotUseShowColumns" xml:space="preserve">
    <value>Deprecated use of '.'. Please use the 'ShowColumns' function instead.</value>
    <comment>{Locked='ShowColumns'}</comment>
  </data>
  <data name="IntellisenseAiDisclaimer" xml:space="preserve">
    <value>**Disclaimer:** AI-generated content can have mistakes. Make sure it's accurate and appropriate before using it. [See terms](https://go.microsoft.com/fwlink/?linkid=2225491)</value>
    <comment>The disclaimer we show on AI functions. This is github flavored markdown. So ** marks text in bold. </comment>
  </data>
  <data name="AboutUniChar" xml:space="preserve">
    <value>Returns the Unicode character that is referenced by the given numeric value.</value>
    <comment>Description of 'UniChar' function.</comment>
  </data>
  <data name="AboutUniChar_number" xml:space="preserve">
    <value>Numeric value to be converted into a Unicode character.</value>
  </data>
  <data name="UniCharArg1" xml:space="preserve">
    <value>number</value>
    <comment>function_parameter - First argument to the UniChar function - numberic value to be converted into a Unicode character.</comment>
  </data>
  <data name="AboutUniCharT" xml:space="preserve">
    <value>Converts a table of numeric values to a table of Unicode characters.</value>
    <comment>Description of 'UniChar' function (table overload).</comment>
  </data>
  <data name="UniCharTArg1" xml:space="preserve">
    <value>column_of_numbers</value>
    <comment>function_parameter - First argument to the UniChar function - a table column of numeric values to be converted into Unicode characters. Translate this string. When translating, maintain as a single word (i.e., do not add spaces).</comment>
  </data>
  <data name="AboutUniChar_column_of_numbers" xml:space="preserve">
    <value>A table column of numeric values to be converted into Unicode characters.</value>
  </data>
  <data name="ErrOnlyPartialAttribute" xml:space="preserve">
    <value>Unsupported attribute kind</value>
    <comment>Error message when the user attempted to use the attribute syntax on a named formula definition, but we didn't recognize the attribute name they specified.</comment>
  </data>
  <data name="ErrOperationDoesntMatch" xml:space="preserve">
    <value>All Partial operators on matching named formulas must be the same.</value>
    <comment>{Locked=Partial} Error message when the user attempted to use a partial operator on multiple named formulas, but didn't specify the same operator on each one.
      A partial operator is the 2nd part of a statement `[Partial Op]` and can be one of "And", "Or", "Table" or "Record".
      It's used to determine how to combine multiple expressions with the same name and operator.</comment>
  </data>
  <data name="ErrUnknownPartialOp" xml:space="preserve">
    <value>Unknown Partial operator.</value>
    <comment>{Locked=Partial}. Error message when the user attempted to use a Partial operator that we don't recognize.
      A partial operator is the 2nd part of a statement `[Partial Op]` and can be one of "And", "Or", "Table" or "Record".
      It's used to determine how to combine multiple expressions with the same name and operator.</comment>
  </data>
  <data name="ErrTruncatedArgWarning" xml:space="preserve">
    <value>Delegation warning. The result of this argument '{0}' may be truncated for large data sets before being passed to the '{1}' function.</value>
    <comment>Error message when an argument to non-delegable function has possible delegation and resulting rows may be truncated</comment>
  </data>
  <data name="ErrNeedPrimitive" xml:space="preserve">
    <value>Expected a text, numeric, boolean, or date/time value.</value>
    <comment>Error message shown to the user when a function expects an expression that returns a primitive value but it doesn't.</comment>
  </data>
  <data name="ErrSummarizeNoGroupBy" xml:space="preserve">
    <value>Summarize requires at least one grouping column.</value>
    <comment>Summarize is the function name. Error message shown to the user when a function expects an grouping columns but none is present. {Locked=Summarize} </comment>
  </data>
  <data name="ErrSummarizeInvalidArg" xml:space="preserve">
    <value>Summarize arguments must be either existing column names to group by or formulas named with the 'As' keyword.</value>
    <comment>Summarize is the function name. Error message shown to the user when any argument index greater than 0 is not an existing column name nor a formulas named with the As keyword. {Locked=Summarize} {Locked='As'}</comment>
  </data>
  <data name="ErrSummarizeThisGroupColumnName" xml:space="preserve">
    <value>Column 'ThisGroup' conflicts with a reserved name. Use the 'RenameColumns' function to pick a different name.</value>
    <comment>Error message shown to the user when an argument conflicts with 'ThisGroup' reserved word. {Locked='ThisGroup'} {Locked='RenameColumns'}</comment>
  </data>
  <data name="ErrSummarizeDataSourceContainsThisGroupColumn" xml:space="preserve">
    <value>The data source contains a column named 'ThisGroup', which conflicts with a reserved name. Use the 'RenameColumns' function to pick a different name.</value>
    <comment>Error message shown to the user when the provided data source contains a field called 'ThisGroup'. {Locked='ThisGroup'} {Locked='RenameColumns'}</comment>
  </data>
  <data name="ErrSummarizeDataSourceScopeNotSupported" xml:space="preserve">
    <value>Scoping the data source (usage of 'As' keyword) is not supported.</value>
    <comment>Error message shown to the user when the provided data source is followed by 'As' reserved word. {Locked='As'}</comment>
  </data>
</root>