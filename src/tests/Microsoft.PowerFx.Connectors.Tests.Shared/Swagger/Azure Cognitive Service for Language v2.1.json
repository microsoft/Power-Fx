{
  "swagger": "2.0",
  "info": {
    "version": "v2.1",
    "title": "Azure Cognitive Service for Language",
    "description": "Azure Cognitive Service for Language, previously known as 'Text Analytics' connector detects language, sentiment and more of the text you provide.",
    "contact": {
      "name": "Microsoft",
      "url": "https://gallery.cortanaanalytics.com/MachineLearningAPI/Text-Analytics-2",
      "email": "mlapi@microsoft.com"
    },
    "x-ms-api-annotation": {
      "status": "Production"
    }
  },
  "host": "westus.api.cognitive.microsoft.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v2/text/analytics/v2.1/keyPhrases": {
      "post": {
        "tags": [
          "Key Phrases"
        ],
        "summary": "Key Phrases (V2)",
        "description": "Returns a list of strings denoting the key talking points in the input text for each document.",
        "operationId": "KeyPhrasesV3",
        "parameters": [
          {
            "name": "input",
            "in": "body",
            "x-ms-summary": "Documents",
            "description": "The documents to analyze. Documents can contain a language field to indicate the text language.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MultiLanguageInputs"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/KeyPhraseResults"
            }
          }
        },
        "deprecated": true,
        "x-ms-visibility": "important",
        "x-ms-safe-operation": true,
        "x-ms-api-annotation": {
          "status": "Production",
          "family": "KeyPhrases",
          "revision": 3
        }
      }
    },
    "/v2/text/analytics/v2.1/languages": {
      "post": {
        "tags": [
          "Detect Language"
        ],
        "summary": "Detect Language (V2)",
        "description": "Returns the detected language and a numeric score between 0 and 1 for each document. Scores close to 1 indicate 100% certainty that the identified language is true. A total of 120 languages are supported.",
        "operationId": "DetectLanguageV3",
        "parameters": [
          {
            "name": "input",
            "in": "body",
            "x-ms-summary": "Documents",
            "description": "The documents to analyze.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LanguageInputs"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LanguageResults"
            }
          }
        },
        "deprecated": true,
        "x-ms-safe-operation": true,
        "x-ms-api-annotation": {
          "status": "Production",
          "family": "DetectLanguage",
          "revision": 3
        }
      }
    },
    "/v2/text/analytics/v2.1/sentiment": {
      "post": {
        "tags": [
          "Sentiment"
        ],
        "summary": "Detect Sentiment (V2)",
        "description": "Returns a numeric score between 0 and 1 for each document. Scores close to 1 indicate positive sentiment, while scores close to 0 indicate negative sentiment. ",
        "operationId": "DetectSentimentV3",
        "parameters": [
          {
            "name": "input",
            "in": "body",
            "x-ms-summary": "Documents",
            "description": "The documents to analyze.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MultiLanguageInputs"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SentimentResults"
            }
          }
        },
        "deprecated": true,
        "x-ms-safe-operation": true,
        "x-ms-visibility": "important",
        "x-ms-api-annotation": {
          "status": "Production",
          "family": "DetectSentiment",
          "revision": 3
        }
      }
    },
    "/v2/text/analytics/v2.1/entities": {
      "post": {
        "tags": [
          "Entities"
        ],
        "summary": "Detect Entities (V2)",
        "description": "Returns a list of known entities and general named entities (\"Person\", \"Location\", \"Organization\" etc) in a given document.",
        "operationId": "DetectEntitiesV2",
        "parameters": [
          {
            "name": "input",
            "in": "body",
            "x-ms-summary": "Documents",
            "description": "The documents to analyze.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MultiLanguageInputs"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntitiesResults"
            }
          }
        },
        "deprecated": true,
        "x-ms-safe-operation": true,
        "x-ms-visibility": "important",
        "x-ms-api-annotation": {
          "status": "Production",
          "family": "DetectEntities",
          "revision": 2
        }
      }
    },
    "/text/analytics/v3.0/entities/recognition/general": {
      "post": {
        "summary": "Named Entity Recognition (V3.0)",
        "description": "The API returns a list of general named entities in a given document. For the list of supported entity types, check <a href=\"https://aka.ms/taner\">Supported Named Entity Recognition (NER) entity categories</a>.",
        "operationId": "EntitiesRecognitionGeneralV3",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "model-version",
            "in": "query",
            "x-ms-summary": "Model Version",
            "description": "(Optional) This value indicates which model will be used for scoring. If a model-version is not specified, the API should default to the latest, non-preview version. ",
            "required": false,
            "type": "string"
          },
          {
            "name": "showStats",
            "in": "query",
            "x-ms-summary": "Show Statistics",
            "description": "(Optional) if set to true, response will contain input and document level statistics.",
            "type": "boolean",
            "required": false
          },
          {
            "in": "body",
            "name": "input",
            "x-ms-summary": "Documents",
            "description": "Collection of documents to analyze.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MultiLanguageBatchInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful call results in a list of recognized entities returned for each valid document.",
            "schema": {
              "$ref": "#/definitions/EntitiesResultV3"
            }
          }
        },
        "deprecated": false,
        "x-ms-safe-operation": true,
        "x-ms-visibility": "important",
        "x-ms-api-annotation": {
          "status": "Production",
          "family": "DetectEntities",
          "revision": 3
        }
      }
    },
    "/text/analytics/v3.0/entities/linking": {
      "post": {
        "summary": "Entity Linking (V3.0)",
        "description": "The API returns a list of recognized entities with links to a well-known knowledge base. See the <a href=\"https://aka.ms/talinking\">language support</a> for the list of supported languages.",
        "operationId": "EntitiesLinkingV3",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "model-version",
            "in": "query",
            "x-ms-summary": "Model Version",
            "description": "(Optional) This value indicates which model will be used for scoring. If a model-version is not specified, the API should default to the latest, non-preview version. ",
            "type": "string"
          },
          {
            "name": "showStats",
            "in": "query",
            "x-ms-summary": "Show Statistics",
            "description": "(Optional) if set to true, response will contain input and document level statistics.",
            "type": "boolean"
          },
          {
            "in": "body",
            "name": "input",
            "x-ms-summary": "Documents",
            "description": "Collection of documents to analyze.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MultiLanguageBatchInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful call results in a list of recognized entities with links to a well-known knowledge base returned for each valid document",
            "schema": {
              "$ref": "#/definitions/EntityLinkingResult"
            }
          }
        },
        "deprecated": false,
        "x-ms-safe-operation": true,
        "x-ms-visibility": "important",
        "x-ms-api-annotation": {
          "status": "Production",
          "family": "DetectLinkedEntities",
          "revision": 1
        }
      }
    },
    "/text/analytics/v3.0/keyPhrases": {
      "post": {
        "summary": "Key Phrases (V3.0)",
        "description": "The API returns a list of strings denoting the key phrases in the input text. See the <a href=\"https://aka.ms/takeyphrases\">Language support for Key Phrase Extraction</a> for the list of supported languages.",
        "operationId": "KeyPhraseV3",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "model-version",
            "in": "query",
            "x-ms-summary": "Model Version",
            "description": "(Optional) This value indicates which model will be used for scoring. If a model-version is not specified, the API should default to the latest, non-preview version. ",
            "type": "string"
          },
          {
            "name": "showStats",
            "in": "query",
            "x-ms-summary": "Show Statistics",
            "description": "(Optional) if set to true, response will contain input and document level statistics.",
            "type": "boolean"
          },
          {
            "in": "body",
            "name": "input",
            "x-ms-summary": "Documents",
            "description": "Collection of documents to analyze. Documents can now contain a language field to indicate the text language",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MultiLanguageBatchInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response results in 0 or more key phrases identified in each valid document",
            "schema": {
              "$ref": "#/definitions/KeyPhraseResultV3"
            }
          }
        },
        "deprecated": false,
        "x-ms-api-annotation": {
          "status": "Production",
          "family": "KeyPhrases",
          "revision": 4
        }
      }
    },
    "/text/analytics/v3.0/languages": {
      "post": {
        "summary": "Detect Language (V3.0)",
        "description": "The API returns the detected language and a numeric score between 0 and 1. Scores close to 1 indicate 100% certainty that the identified language is true. See the <a href=\"https://aka.ms/tadetectlanguage\">Language support for Language Detection</a> for the list of supported languages.",
        "operationId": "LanguagesV3",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "model-version",
            "in": "query",
            "x-ms-summary": "Model Version",
            "description": "(Optional) This value indicates which model will be used for scoring. If a model-version is not specified, the API should default to the latest, non-preview version. ",
            "type": "string"
          },
          {
            "name": "showStats",
            "in": "query",
            "x-ms-summary": "Show Statistics",
            "description": "(Optional) if set to true, response will contain input and document level statistics.",
            "type": "boolean"
          },
          {
            "in": "body",
            "name": "input",
            "description": "Collection of documents to analyze.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LanguageBatchInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful call results in the detected language with the highest probability for each valid document",
            "schema": {
              "$ref": "#/definitions/LanguageResultV3"
            }
          }
        },
        "deprecated": false,
        "x-ms-safe-operation": true,
        "x-ms-api-annotation": {
          "status": "Production",
          "family": "DetectLanguage",
          "revision": 4
        }
      }
    },
    "/text/analytics/v3.0/sentiment": {
      "post": {
        "summary": "Sentiment (V3.0)",
        "description": "The API returns a sentiment prediction, as well as sentiment scores for each sentiment class (Positive, Negative, and Neutral) for the document and each sentence within it. See the <a href=\"https://aka.ms/tasentiment\">Sentiment Analysis and Opinion Mining language support</a> for the list of supported languages.",
        "operationId": "SentimentV3",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "model-version",
            "in": "query",
            "x-ms-summary": "Model Version",
            "description": "(Optional) This value indicates which model will be used for scoring. If a model-version is not specified, the API should default to the latest, non-preview version. ",
            "type": "string"
          },
          {
            "name": "showStats",
            "in": "query",
            "x-ms-summary": "Show Statistics",
            "description": "(Optional) if set to true, response will contain input and document level statistics.",
            "type": "boolean"
          },
          {
            "in": "body",
            "name": "input",
            "x-ms-summary": "Documents",
            "description": "Collection of documents to analyze.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MultiLanguageBatchInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful call results in a document sentiment prediction, as well as sentiment scores for each sentiment class (Positive, Negative, and Neutral)",
            "schema": {
              "$ref": "#/definitions/SentimentResponse"
            }
          }
        },
        "deprecated": false,
        "x-ms-safe-operation": true,
        "x-ms-visibility": "important",
        "x-ms-api-annotation": {
          "status": "Production",
          "family": "DetectSentiment",
          "revision": 4
        }
      }
    },
    "/v4/subdomain/{subdomain}/text/analytics/v3.1/entities/recognition/general": {
      "post": {
        "summary": "Named Entity Recognition (V4)",
        "description": "The API returns a list of general named entities in a given document. For the list of supported entity types, check <a href=\"https://aka.ms/taner\">Supported Named Entity Recognition (NER) entity categories</a>.",
        "operationId": "EntitiesRecognitionGeneralV4",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "subdomain",
            "in": "path",
            "description": "Azure subdomain or geographic region (e.g. westus)",
            "x-ms-summary": "Resource Subdomain or Region",
            "type": "string",
            "x-ms-url-encoding": "double",
            "x-ms-dynamic-values": {
              "operationId": "GetSubdomain",
              "parameters": {},
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "DisplayName"
            },
            "required": true
          },
          {
            "$ref": "#/parameters/ModelVersion"
          },
          {
            "$ref": "#/parameters/ShowStats"
          },
          {
            "$ref": "#/parameters/LoggingOptOut"
          },
          {
            "$ref": "#/parameters/StringIndexType"
          },
          {
            "$ref": "#/parameters/MultiLanguageInput"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful call results in a list of recognized entities returned for each valid document.",
            "schema": {
              "$ref": "#/definitions/EntitiesResult"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": false,
        "x-ms-safe-operation": true,
        "x-ms-visibility": "advanced",
        "x-ms-api-annotation": {
          "status": "Preview",
          "family": "DetectEntities",
          "revision": 5
        }
      }
    },
    "/text/analytics/v3.1/entities/recognition/general": {
      "post": {
        "summary": "Named Entity Recognition (V3.1)",
        "description": "The API returns a list of general named entities in a given document. For the list of supported entity types, check <a href=\"https://aka.ms/taner\">Supported Named Entity Recognition (NER) entity categories</a>.",
        "operationId": "EntitiesRecognitionGeneralV3_1",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ModelVersion"
          },
          {
            "$ref": "#/parameters/ShowStats"
          },
          {
            "$ref": "#/parameters/LoggingOptOut"
          },
          {
            "$ref": "#/parameters/StringIndexType"
          },
          {
            "$ref": "#/parameters/MultiLanguageInput"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful call results in a list of recognized entities returned for each valid document.",
            "schema": {
              "$ref": "#/definitions/EntitiesResult"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": false,
        "x-ms-safe-operation": true,
        "x-ms-visibility": "important",
        "x-ms-api-annotation": {
          "status": "Preview",
          "family": "DetectEntities",
          "revision": 4
        }
      }
    },
    "/v4/subdomain/{subdomain}/text/analytics/v3.1/entities/recognition/pii": {
      "post": {
        "summary": "Detect Personal Information (V4)",
        "description": "The API returns a list of entities with personal information (\\\"SSN\\\", \\\"Bank Account\\\" etc) in the document. For the list of supported entity types, check <a href=\"https://aka.ms/tapii\">Supported Personally Identifiable Information (PII) entity categories</a>. See the <a href=\"https://aka.ms/talangs\">Supported languages in Azure Cognitive Service for Language</a> for the list of supported languages.",
        "operationId": "EntitiesRecognitionPIIV4",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "subdomain",
            "in": "path",
            "description": "Azure subdomain or geographic region (e.g. westus)",
            "x-ms-summary": "Resource Subdomain or Region",
            "type": "string",
            "x-ms-url-encoding": "double",
            "x-ms-dynamic-values": {
              "operationId": "GetSubdomain",
              "parameters": {},
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "DisplayName"
            },
            "required": true
          },
          {
            "$ref": "#/parameters/ModelVersion"
          },
          {
            "$ref": "#/parameters/ShowStats"
          },
          {
            "$ref": "#/parameters/LoggingOptOut"
          },
          {
            "name": "domain",
            "in": "query",
            "description": "(Optional) if specified, will set the PII domain to include only a subset of the entity categories. Possible values include: 'PHI', 'none'.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/StringIndexType"
          },
          {
            "$ref": "#/parameters/PiiCategories"
          },
          {
            "$ref": "#/parameters/MultiLanguageInput"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful call results in a list of entities containing personal information returned for each valid document",
            "schema": {
              "$ref": "#/definitions/PiiResult"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": false,
        "x-ms-api-annotation": {
          "status": "Preview"
        }
      }
    },
    "/text/analytics/v3.1/entities/recognition/pii": {
      "post": {
        "summary": "Detect Personal Information (V3.1)",
        "description": "The API returns a list of entities with personal information (\\\"SSN\\\", \\\"Bank Account\\\" etc) in the document. For the list of supported entity types, check <a href=\"https://aka.ms/tapii\">Supported Personally Identifiable Information (PII) entity categories</a>. See the <a href=\"https://aka.ms/talangs\">Supported languages in Azure Cognitive Service for Language</a> for the list of supported languages.",
        "operationId": "EntitiesRecognitionPIIV3_1",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ModelVersion"
          },
          {
            "$ref": "#/parameters/ShowStats"
          },
          {
            "$ref": "#/parameters/LoggingOptOut"
          },
          {
            "name": "domain",
            "in": "query",
            "description": "(Optional) if specified, will set the PII domain to include only a subset of the entity categories. Possible values include: 'PHI', 'none'.",
            "type": "string"
          },
          {
            "$ref": "#/parameters/StringIndexType"
          },
          {
            "$ref": "#/parameters/PiiCategories"
          },
          {
            "$ref": "#/parameters/MultiLanguageInput"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful call results in a list of entities containing personal information returned for each valid document",
            "schema": {
              "$ref": "#/definitions/PiiResult"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": false
      }
    },
    "/v4/subdomain/{subdomain}/text/analytics/v3.1/entities/linking": {
      "post": {
        "summary": "Entity Linking (V4)",
        "description": "The API returns a list of recognized entities with links to a well known knowledge base. See the <a href=\"https://aka.ms/talinking\">language support</a> for the list of supported languages.",
        "operationId": "EntitiesLinkingV4",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "subdomain",
            "in": "path",
            "description": "Azure subdomain or geographic region (e.g. westus)",
            "x-ms-summary": "Resource Subdomain or Region",
            "type": "string",
            "x-ms-url-encoding": "double",
            "x-ms-dynamic-values": {
              "operationId": "GetSubdomain",
              "parameters": {},
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "DisplayName"
            },
            "required": true
          },
          {
            "$ref": "#/parameters/ModelVersion"
          },
          {
            "$ref": "#/parameters/ShowStats"
          },
          {
            "$ref": "#/parameters/LoggingOptOut"
          },
          {
            "$ref": "#/parameters/StringIndexType"
          },
          {
            "$ref": "#/parameters/MultiLanguageInput"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful call results in a list of recognized entities with links to a well known knowledge base returned for each valid document",
            "schema": {
              "$ref": "#/definitions/EntityLinkingResult"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": false,
        "x-ms-safe-operation": true,
        "x-ms-visibility": "advanced",
        "x-ms-api-annotation": {
          "status": "Preview",
          "family": "DetectLinkedEntities",
          "revision": 3
        }
      }
    },
    "/text/analytics/v3.1/entities/linking": {
      "post": {
        "summary": "Entity Linking (V3.1)",
        "description": "The API returns a list of recognized entities with links to a well known knowledge base. See the <a href=\"https://aka.ms/talinking\">language support</a> for the list of supported languages.",
        "operationId": "EntitiesLinkingV3_1",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ModelVersion"
          },
          {
            "$ref": "#/parameters/ShowStats"
          },
          {
            "$ref": "#/parameters/LoggingOptOut"
          },
          {
            "$ref": "#/parameters/StringIndexType"
          },
          {
            "$ref": "#/parameters/MultiLanguageInput"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful call results in a list of recognized entities with links to a well known knowledge base returned for each valid document",
            "schema": {
              "$ref": "#/definitions/EntityLinkingResult"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": false,
        "x-ms-safe-operation": true,
        "x-ms-visibility": "important",
        "x-ms-api-annotation": {
          "status": "Preview",
          "family": "DetectLinkedEntities",
          "revision": 2
        }
      }
    },
    "/v4/subdomain/{subdomain}/text/analytics/v3.1/keyPhrases": {
      "post": {
        "summary": "Key Phrases (V4)",
        "description": "The API returns a list of strings denoting the key phrases in the input text. See the <a href=\"https://aka.ms/takeyphrases\">Language support for Key Phrase Extraction</a> for the list of supported languages.",
        "operationId": "KeyPhraseV4",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "subdomain",
            "in": "path",
            "description": "Azure subdomain or geographic region (e.g. westus)",
            "x-ms-summary": "Resource Subdomain or Region",
            "type": "string",
            "x-ms-url-encoding": "double",
            "x-ms-dynamic-values": {
              "operationId": "GetSubdomain",
              "parameters": {},
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "DisplayName"
            },
            "required": true
          },
          {
            "$ref": "#/parameters/ModelVersion"
          },
          {
            "$ref": "#/parameters/ShowStats"
          },
          {
            "$ref": "#/parameters/LoggingOptOut"
          },
          {
            "$ref": "#/parameters/MultiLanguageInput"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response results in 0 or more key phrases identified in each valid document",
            "schema": {
              "$ref": "#/definitions/KeyPhraseResult"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": false,
        "x-ms-visibility": "advanced",
        "x-ms-api-annotation": {
          "status": "Preview",
          "family": "KeyPhrases",
          "revision": 6
        }
      }
    },
    "/text/analytics/v3.1/keyPhrases": {
      "post": {
        "summary": "Key Phrases (V3.1)",
        "description": "The API returns a list of strings denoting the key phrases in the input text. See the <a href=\"https://aka.ms/takeyphrases\">Language support for Key Phrase Extraction</a> for the list of supported languages.",
        "operationId": "KeyPhraseV3_1",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ModelVersion"
          },
          {
            "$ref": "#/parameters/ShowStats"
          },
          {
            "$ref": "#/parameters/LoggingOptOut"
          },
          {
            "$ref": "#/parameters/MultiLanguageInput"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response results in 0 or more key phrases identified in each valid document",
            "schema": {
              "$ref": "#/definitions/KeyPhraseResult"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": false,
        "x-ms-api-annotation": {
          "status": "Preview",
          "family": "KeyPhrases",
          "revision": 5
        }
      }
    },
    "/v4/subdomain/{subdomain}/text/analytics/v3.1/languages": {
      "post": {
        "summary": "Detect Language (V4)",
        "description": "The API returns the detected language and a numeric score between 0 and 1. Scores close to 1 indicate 100% certainty that the identified language is true. See the <a href=\"https://aka.ms/tadetectlanguage\">Language support for Language Detection</a> for the list of supported languages.",
        "operationId": "LanguagesV4",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "subdomain",
            "in": "path",
            "description": "Azure subdomain or geographic region (e.g. westus)",
            "x-ms-summary": "Resource Subdomain or Region",
            "type": "string",
            "x-ms-url-encoding": "double",
            "x-ms-dynamic-values": {
              "operationId": "GetSubdomain",
              "parameters": {},
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "DisplayName"
            },
            "required": true
          },
          {
            "$ref": "#/parameters/ModelVersion"
          },
          {
            "$ref": "#/parameters/ShowStats"
          },
          {
            "$ref": "#/parameters/LoggingOptOut"
          },
          {
            "$ref": "#/parameters/LanguageInput"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful call results in the detected language with the highest probability for each valid document",
            "schema": {
              "$ref": "#/definitions/LanguageResult"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": false,
        "x-ms-safe-operation": true,
        "x-ms-api-annotation": {
          "status": "Preview",
          "family": "DetectLanguage",
          "revision": 6
        }
      }
    },
    "/text/analytics/v3.1/languages": {
      "post": {
        "summary": "Detect Language (V3.1)",
        "description": "The API returns the detected language and a numeric score between 0 and 1. Scores close to 1 indicate 100% certainty that the identified language is true. See the <a href=\"https://aka.ms/tadetectlanguage\">Language support for Language Detection</a> for the list of supported languages.",
        "operationId": "LanguagesV3_1",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ModelVersion"
          },
          {
            "$ref": "#/parameters/ShowStats"
          },
          {
            "$ref": "#/parameters/LoggingOptOut"
          },
          {
            "$ref": "#/parameters/LanguageInput"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful call results in the detected language with the highest probability for each valid document",
            "schema": {
              "$ref": "#/definitions/LanguageResult"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": false,
        "x-ms-safe-operation": true,
        "x-ms-api-annotation": {
          "status": "Preview",
          "family": "DetectLanguage",
          "revision": 5
        }
      }
    },
    "/v4/subdomain/{subdomain}/text/analytics/v3.1/sentiment": {
      "post": {
        "summary": "Sentiment (V4)",
        "description": "The API returns a detailed sentiment analysis for the input text. The analysis is done in multiple levels of granularity, start from the a document level, down to sentence and key terms (targets and assessments).",
        "operationId": "SentimentV4",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "subdomain",
            "in": "path",
            "description": "Azure subdomain or geographic region (e.g. westus)",
            "x-ms-summary": "Resource Subdomain or Region",
            "type": "string",
            "x-ms-url-encoding": "double",
            "x-ms-dynamic-values": {
              "operationId": "GetSubdomain",
              "parameters": {},
              "value-collection": "value",
              "value-path": "Name",
              "value-title": "DisplayName"
            },
            "required": true
          },
          {
            "$ref": "#/parameters/ModelVersion"
          },
          {
            "$ref": "#/parameters/ShowStats"
          },
          {
            "$ref": "#/parameters/LoggingOptOut"
          },
          {
            "name": "opinionMining",
            "in": "query",
            "description": "(Optional) if set to true, response will contain not only sentiment prediction but also opinion mining (aspect-based sentiment analysis) results.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/StringIndexType"
          },
          {
            "$ref": "#/parameters/MultiLanguageInput"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful call results in a document sentiment prediction, as well as sentiment scores for each sentiment class (Positive, Negative, and Neutral)",
            "schema": {
              "$ref": "#/definitions/SentimentResponse"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": false,
        "x-ms-safe-operation": true,
        "x-ms-visibility": "advanced",
        "x-ms-api-annotation": {
          "status": "Preview",
          "family": "DetectSentiment",
          "revision": 6
        }
      }
    },
    "/text/analytics/v3.1/sentiment": {
      "post": {
        "summary": "Sentiment (V3.1)",
        "description": "The API returns a detailed sentiment analysis for the input text. The analysis is done in multiple levels of granularity, start from the a document level, down to sentence and key terms (targets and assessments).",
        "operationId": "SentimentV3_1",
        "consumes": [
          "application/json",
          "text/json"
        ],
        "produces": [
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/ModelVersion"
          },
          {
            "$ref": "#/parameters/ShowStats"
          },
          {
            "$ref": "#/parameters/LoggingOptOut"
          },
          {
            "name": "opinionMining",
            "in": "query",
            "description": "(Optional) if set to true, response will contain not only sentiment prediction but also opinion mining (aspect-based sentiment analysis) results.",
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/StringIndexType"
          },
          {
            "$ref": "#/parameters/MultiLanguageInput"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful call results in a document sentiment prediction, as well as sentiment scores for each sentiment class (Positive, Negative, and Neutral)",
            "schema": {
              "$ref": "#/definitions/SentimentResponse"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "deprecated": false,
        "x-ms-safe-operation": true,
        "x-ms-visibility": "important",
        "x-ms-api-annotation": {
          "status": "Preview",
          "family": "DetectSentiment",
          "revision": 5
        }
      }
    },
    "/subdomain": {
      "get": {
        "summary": "Get the subdomain of the connection",
        "description": "Get the subdomain of the connection",
        "operationId": "GetSubdomain",
        "parameters": [],
        "produces": [
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SubdomainList"
            }
          },
          "default": {
            "description": "Operation failed"
          }
        },
        "deprecated": false,
        "x-ms-visibility": "internal"
      }
    },
    "/language/:analyze-conversations": {
      "post": {
        "operationId": "ConversationAnalysis_AnalyzeConversation_Conversation",
        "description": "Analyzes the input conversation utterance.",
        "summary": "Conversations (CLU) (2022-05-01)",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "description": "A single conversational task to execute.",
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ConversationalTask"
            },
            "required": true
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The conversation analysis response.",
            "schema": {
              "$ref": "#/definitions/ConversationalTaskResult"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/language/:analyze-conversations/": {
      "post": {
        "operationId": "ConversationAnalysis_AnalyzeConversation_Orchestration",
        "description": "Analyzes the input conversation utterance.",
        "summary": "Conversations (Orchestration) (2022-05-01)",
        "parameters": [
          {
            "$ref": "#/parameters/ApiVersionParameter"
          },
          {
            "description": "A single conversational task to execute.",
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ConversationalTask_Orchestration"
            },
            "required": true
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "The conversation analysis response.",
            "schema": {
              "$ref": "#/definitions/ConversationalTaskResult_Orchestration"
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            },
            "headers": {
              "x-ms-error-code": {
                "description": "The error code for specific error that occurred.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "language/analyze-conversations/jobs": {
      "post": {
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "description": "Submit a collection of conversations for analysis. Specify one or more unique tasks to be executed.",
        "operationId": "AnalyzeConversationTranscript_SubmitJob",
        "summary": "Async Conversation PII (transcript) (2022-05-15-preview)",
        "parameters": [
          {
            "$ref": "#/parameters/ConversationalApiVersionParameter"
          },
          {
            "description": "The collection of conversations to analyze and one or more tasks to execute.",
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/TranscriptJobsInput"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Analysis job status and metadata.",
            "schema": {
              "$ref": "#/definitions/ConversationalPIITranscriptJobState"
            }
          },
          "202": {
            "description": "A successful call results with an Operation-Location header used to check the status of the analysis job.",
            "headers": {
              "Operation-Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "language/analyze-conversations/jobs/{jobId}": {
      "get": {
        "x-ms-visibility": "internal",
        "produces": [ "application/json" ],
        "description": "Get the status of an analysis job. A job may consist of one or more tasks. Once all tasks are succeeded, the job will transition to the succeeded state and results will be available for each task.",
        "operationId": "AnalyzeConversationTranscript_JobStatus",
        "summary": "Get analysis status and results",
        "parameters": [
          {
            "$ref": "#/parameters/ConversationalApiVersionParameter"
          },
          {
            "$ref": "#/parameters/JobId"
          },
          {
            "$ref": "#/parameters/ShowStats"
          }
        ],
        "responses": {
          "200": {
            "description": "Analysis job status and metadata.",
            "schema": {
              "$ref": "#/definitions/ConversationalPIITranscriptJobState"
            }
          },
          "default": {
            "description": "Error encountered.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "language/analyze-conversations/jobs/": {
      "post": {
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "description": "Submit a collection of conversations for analysis. Specify one or more unique tasks to be executed.",
        "operationId": "AnalyzeConversationText_SubmitJob",
        "summary": "Async Conversation PII (text) (2022-05-15-preview)",
        "parameters": [
          {
            "$ref": "#/parameters/ConversationalApiVersionParameter"
          },
          {
            "description": "The collection of conversations to analyze and one or more tasks to execute.",
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/TextJobsInput"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Analysis job status and metadata.",
            "schema": {
              "$ref": "#/definitions/ConversationalPIITextJobState"
            }
          },
          "202": {
            "description": "A successful call results with an Operation-Location header used to check the status of the analysis job.",
            "headers": {
              "Operation-Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "language/analyze-conversations/jobs/{jobId}/": {
      "get": {
        "x-ms-visibility": "internal",
        "produces": [ "application/json" ],
        "description": "Get the status of an analysis job. A job may consist of one or more tasks. Once all tasks are succeeded, the job will transition to the succeeded state and results will be available for each task.",
        "operationId": "AnalyzeConversationText_JobStatus",
        "summary": "Get analysis status and results",
        "parameters": [
          {
            "$ref": "#/parameters/ConversationalApiVersionParameter"
          },
          {
            "$ref": "#/parameters/JobId"
          },
          {
            "$ref": "#/parameters/ShowStats"
          }
        ],
        "responses": {
          "200": {
            "description": "Analysis job status and metadata.",
            "schema": {
              "$ref": "#/definitions/ConversationalPIITextJobState"
            }
          },
          "default": {
            "description": "Error encountered.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "language/analyze-conversations/jobs//": {
      "post": {
        "consumes": [ "application/json" ],
        "produces": [ "application/json" ],
        "description": "Submit a collection of conversations for analysis. Specify one or more unique tasks to be executed.",
        "operationId": "AnalyzeConversationSummarization_SubmitJob",
        "summary": "Async Conversation Summarization (2022-05-15-preview)",
        "parameters": [
          {
            "$ref": "#/parameters/ConversationalApiVersionParameter"
          },
          {
            "description": "The collection of conversations to analyze and one or more tasks to execute.",
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ConversationalSummarizationJobsInput"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Analysis job status and metadata.",
            "schema": {
              "$ref": "#/definitions/AnalyzeConversationSummarizationJobState"
            }
          },
          "202": {
            "description": "A successful call results with an Operation-Location header used to check the status of the analysis job.",
            "headers": {
              "Operation-Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "language/analyze-conversations/jobs/{jobId}//": {
      "get": {
        "x-ms-visibility": "internal",
        "produces": [ "application/json" ],
        "description": "Get the status of an analysis job. A job may consist of one or more tasks. Once all tasks are succeeded, the job will transition to the succeeded state and results will be available for each task.",
        "operationId": "AnalyzeConversationSummarization_JobStatus",
        "summary": "Get analysis status and results",
        "parameters": [
          {
            "$ref": "#/parameters/ConversationalApiVersionParameter"
          },
          {
            "$ref": "#/parameters/JobId"
          },
          {
            "$ref": "#/parameters/ShowStats"
          }
        ],
        "responses": {
          "200": {
            "description": "Analysis job status and metadata.",
            "schema": {
              "$ref": "#/definitions/AnalyzeConversationSummarizationJobState"
            }
          },
          "default": {
            "description": "Error encountered.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/language/analyze-text/jobs": {
      "post": {
        "x-ms-visibility": "internal",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Submit a collection of text documents for analysis. Specify one or more unique tasks to be executed as a long-running operation.",
        "operationId": "AnalyzeText_SubmitJob",
        "summary": "Submit text analysis job",
        "parameters": [
          {
            "$ref": "#/parameters/LanguageApiVersionParameter"
          },
          {
            "description": "Collection of documents to analyze and one or more tasks to execute.",
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/LanguageAnalyzeTextJobsInput"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Analysis job status and metadata.",
            "schema": {
              "$ref": "#/definitions/LanguageAnalyzeTextJobState"
            }
          },
          "202": {
            "description": "A successful call results with an Operation-Location header used to check the status of the analysis job.",
            "headers": {
              "Operation-Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/LanguageErrorResponse"
            }
          }
        }
      }
    },
    "/language/analyze-text/jobs/": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Submit a collection of text documents for key phrase extraction analysis.",
        "operationId": "AnalyzeText_SubmitJob_keyPhraseExtraction",
        "summary": "Async KeyPhrases (2022-05-01)",
        "parameters": [
          {
            "$ref": "#/parameters/LanguageApiVersionParameter"
          },
          {
            "description": "Collection of documents to analyze and one or more tasks to execute.",
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/LanguageAnalyzeTextJobsInput_KPE"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Analysis job status and metadata.",
            "schema": {
              "$ref": "#/definitions/LanguageAnalyzeTextJobState_KPE"
            }
          },
          "202": {
            "description": "A successful call results with an Operation-Location header used to check the status of the analysis job.",
            "headers": {
              "Operation-Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/LanguageErrorResponse"
            }
          }
        }
      }
    },
    "/language/analyze-text/jobs//": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Submit a collection of text documents for custom entity recognition analysis.",
        "operationId": "AnalyzeText_SubmitJob_CustomEntityRecognition",
        "summary": "Async CustomEntityRecognition (2022-05-01)",
        "parameters": [
          {
            "$ref": "#/parameters/LanguageApiVersionParameter"
          },
          {
            "description": "Collection of documents to analyze and one or more tasks to execute.",
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/LanguageAnalyzeTextJobsInput_CNER"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Analysis job status and metadata.",
            "schema": {
              "$ref": "#/definitions/LanguageAnalyzeTextJobState_CNER"
            }
          },
          "202": {
            "description": "A successful call results with an Operation-Location header used to check the status of the analysis job.",
            "headers": {
              "Operation-Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/LanguageErrorResponse"
            }
          }
        }
      }
    },
    "/language/analyze-text/jobs///": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Submit a collection of text documents for custom single classification analysis.",
        "operationId": "AnalyzeText_SubmitJob_CustomSingleClassification",
        "summary": "Async CustomSingleLabelClassification (2022-05-01)",
        "parameters": [
          {
            "$ref": "#/parameters/LanguageApiVersionParameter"
          },
          {
            "description": "Collection of documents to analyze and one or more tasks to execute.",
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/LanguageAnalyzeTextJobsInput_CSLC"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Analysis job status and metadata.",
            "schema": {
              "$ref": "#/definitions/LanguageAnalyzeTextJobState_CSLC"
            }
          },
          "202": {
            "description": "A successful call results with an Operation-Location header used to check the status of the analysis job.",
            "headers": {
              "Operation-Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/LanguageErrorResponse"
            }
          }
        }
      }
    },
    "/language/analyze-text/jobs////": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Submit a collection of text documents for custom single classification analysis.",
        "operationId": "AnalyzeText_SubmitJob_CustomMultiClassification",
        "summary": "Async CustomMultiLabelClassification (2022-05-01)",
        "parameters": [
          {
            "$ref": "#/parameters/LanguageApiVersionParameter"
          },
          {
            "description": "Collection of documents to analyze and one or more tasks to execute.",
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/LanguageAnalyzeTextJobsInput_CMLC"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Analysis job status and metadata.",
            "schema": {
              "$ref": "#/definitions/LanguageAnalyzeTextJobState_CMLC"
            }
          },
          "202": {
            "description": "A successful call results with an Operation-Location header used to check the status of the analysis job.",
            "headers": {
              "Operation-Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/LanguageErrorResponse"
            }
          }
        }
      }
    },
    "/language/analyze-text/jobs/////": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Submit a collection of text documents for entity recognition analysis.",
        "operationId": "AnalyzeText_SubmitJob_EntityRecognition",
        "summary": "Async EntityRecognition (2022-05-01)",
        "parameters": [
          {
            "$ref": "#/parameters/LanguageApiVersionParameter"
          },
          {
            "description": "Collection of documents to analyze and one or more tasks to execute.",
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/LanguageAnalyzeTextJobsInput_Entites"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Analysis job status and metadata.",
            "schema": {
              "$ref": "#/definitions/LanguageAnalyzeTextJobState_Entites"
            }
          },
          "202": {
            "description": "A successful call results with an Operation-Location header used to check the status of the analysis job.",
            "headers": {
              "Operation-Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/LanguageErrorResponse"
            }
          }
        }
      }
    },
    "/language/analyze-text/jobs//////": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Submit a collection of text documents for personal entity recognition analysis.",
        "operationId": "AnalyzeText_SubmitJob_PersonalEntityRecognition",
        "summary": "Async PiiEntityRecognition (2022-05-01)",
        "parameters": [
          {
            "$ref": "#/parameters/LanguageApiVersionParameter"
          },
          {
            "description": "Collection of documents to analyze and one or more tasks to execute.",
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/LanguageAnalyzeTextJobsInput_Pii"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Analysis job status and metadata.",
            "schema": {
              "$ref": "#/definitions/LanguageAnalyzeTextJobState_Pii"
            }
          },
          "202": {
            "description": "A successful call results with an Operation-Location header used to check the status of the analysis job.",
            "headers": {
              "Operation-Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/LanguageErrorResponse"
            }
          }
        }
      }
    },
    "/language/analyze-text/jobs///////": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Submit a collection of text documents for sentiment analysis.",
        "operationId": "AnalyzeText_SubmitJob_SentimentAnalysis",
        "summary": "Async SentimentAnalysis (2022-05-01)",
        "parameters": [
          {
            "$ref": "#/parameters/LanguageApiVersionParameter"
          },
          {
            "description": "Collection of documents to analyze and one or more tasks to execute.",
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/LanguageAnalyzeTextJobsInput_Sentiment"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Analysis job status and metadata.",
            "schema": {
              "$ref": "#/definitions/LanguageAnalyzeTextJobState_Sentiment"
            }
          },
          "202": {
            "description": "A successful call results with an Operation-Location header used to check the status of the analysis job.",
            "headers": {
              "Operation-Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/LanguageErrorResponse"
            }
          }
        }
      }
    },
    "/language/analyze-text/jobs////////": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Submit a collection of text documents for health care analysis.",
        "operationId": "AnalyzeText_SubmitJob_HealthCare",
        "summary": "Async Healthcare (2022-05-01)",
        "parameters": [
          {
            "$ref": "#/parameters/LanguageApiVersionParameter"
          },
          {
            "description": "Collection of documents to analyze and one or more tasks to execute.",
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/LanguageAnalyzeTextJobsInput_HealthCare"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Analysis job status and metadata.",
            "schema": {
              "$ref": "#/definitions/LanguageAnalyzeTextJobState_HealthCare"
            }
          },
          "202": {
            "description": "A successful call results with an Operation-Location header used to check the status of the analysis job.",
            "headers": {
              "Operation-Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/LanguageErrorResponse"
            }
          }
        }
      }
    },
    "/language/analyze-text/jobs/////////": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Submit a collection of text documents for entity linking analysis.",
        "operationId": "AnalyzeText_SubmitJob_EntityLinking",
        "summary": "Async EntityLinking (2022-05-01)",
        "parameters": [
          {
            "$ref": "#/parameters/LanguageApiVersionParameter"
          },
          {
            "description": "Collection of documents to analyze and one or more tasks to execute.",
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/LanguageAnalyzeTextJobsInput_EntityLinking"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Analysis job status and metadata.",
            "schema": {
              "$ref": "#/definitions/LanguageAnalyzeTextJobState_EntityLinking"
            }
          },
          "202": {
            "description": "A successful call results with an Operation-Location header used to check the status of the analysis job.",
            "headers": {
              "Operation-Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/LanguageErrorResponse"
            }
          }
        }
      }
    },
    "/language/analyze-text/jobs//////////": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Submit a collection of text documents for extractive summarization",
        "operationId": "AnalyzeText_SubmitJob_ExtractiveSummarization",
        "summary": "Async ExtractiveSummarization (2022-10-01-preview)",
        "parameters": [
          {
            "$ref": "#/parameters/LanguageApiVersionParameter10_01"
          },
          {
            "description": "Collection of documents to analyze and one or more tasks to execute.",
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/LanguageAnalyzeTextJobsInput_ExtractiveSummarization"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Analysis job status and metadata.",
            "schema": {
              "$ref": "#/definitions/LanguageAnalyzeTextJobState_ExtractiveSummarization"
            }
          },
          "202": {
            "description": "A successful call results with an Operation-Location header used to check the status of the analysis job.",
            "headers": {
              "Operation-Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/LanguageErrorResponse"
            }
          }
        }
      }
    },
    "/language/analyze-text/jobs///////////": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "description": "Submit a collection of text documents for abstractive summarization",
        "operationId": "AnalyzeText_SubmitJob_AbstractiveSummarization",
        "summary": "Async AbstractiveSummarization (2022-10-01-preview)",
        "parameters": [
          {
            "$ref": "#/parameters/LanguageApiVersionParameter10_01"
          },
          {
            "description": "Collection of documents to analyze and one or more tasks to execute.",
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/LanguageAnalyzeTextJobsInput_AbstractiveSummarization"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Analysis job status and metadata.",
            "schema": {
              "$ref": "#/definitions/LanguageAnalyzeTextJobState_AbstractiveSummarization"
            }
          },
          "202": {
            "description": "A successful call results with an Operation-Location header used to check the status of the analysis job.",
            "headers": {
              "Operation-Location": {
                "type": "string"
              }
            }
          },
          "default": {
            "description": "Error response.",
            "schema": {
              "$ref": "#/definitions/LanguageErrorResponse"
            }
          }
        }
      }
    },
    "/language/analyze-text/jobs/{jobId}": {
      "get": {
        "x-ms-visibility": "internal",
        "produces": [
          "application/json"
        ],
        "description": "Get the status of an analysis job.  A job may consist of one or more tasks.  Once all tasks are succeeded, the job will transition to the succeeded state and results will be available for each task.",
        "operationId": "AnalyzeText_JobStatus",
        "summary": "Get analysis status and results",
        "parameters": [
          {
            "$ref": "#/parameters/LanguageApiVersionParameter"
          },
          {
            "$ref": "#/parameters/JobId"
          },
          {
            "$ref": "#/parameters/ShowStats"
          },
          {
            "$ref": "#/parameters/LanguageTopParameter"
          },
          {
            "$ref": "#/parameters/LanguageSkipParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Analysis job status and metadata.",
            "schema": {
              "$ref": "#/definitions/LanguageAnalyzeTextJobState"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/LanguageErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "TranscriptJobsInput": {
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Optional display name for the analysis job.",
          "type": "string",
          "x-ms-visibility": "internal",
          "default": "Conversation PII Job"
        },
        "analysisInput": {
          "$ref": "#/definitions/TranscriptMultiLanguageConversationAnalysisInput"
        },
        "task": {
          "$ref": "#/definitions/ConversationalPIITranscriptTask"
        }
      },
      "required": [
        "analysisInput",
        "task"
      ]
    },
    "TranscriptMultiLanguageConversationAnalysisInput": {
      "type": "object",
      "required": [
        "conversations"
      ],
      "properties": {
        "conversations": {
          "$ref": "#/definitions/TranscriptConversation"
        }
      }
    },
    "TranscriptConversation": {
      "type": "object",
      "x-ms-discriminator-value": "transcript",
      "required": [ "conversationItems", "id", "language", "modality" ],
      "properties": {
        "conversationItems": {
          "description": "Ordered list of transcript conversation items in the conversation.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TranscriptConversationItem"
          }
        },
        "id": {
          "description": "Unique identifier for the conversation.",
          "type": "string",
          "x-ms-visibility": "internal",
          "default": "conversation_Id"
        },
        "language": {
          "description": "The language of the conversation item in BCP-47 format.",
          "type": "string"
        },
        "modality": {
          "$ref": "#/definitions/TranscriptModality"
        },
        "domain": {
          "$ref": "#/definitions/ConversationDomain"
        }
      }
    },
    "TranscriptModality": {
      "type": "string",
      "description": "Enumeration of supported conversational modalities.",
      "enum": [ "transcript" ],
      "default": "transcript",
      "x-ms-visibility": "internal",
      "x-ms-enum": {
        "name": "InputModality",
        "modelAsString": true
      }
    },
    "ConversationDomain": {
      "type": "string",
      "description": "Enumeration of supported conversational domains.",
      "enum": [ "finance", "healthcare", "generic" ],
      "x-ms-enum": {
        "name": "ConversationDomain",
        "modelAsString": true
      }
    },
    "TranscriptConversationItem": {
      "type": "object",
      "description": "Additional properties for supporting transcript conversation.",
      "properties": {
        "id": {
          "description": "The ID of a conversation item.",
          "type": "string"
        },
        "participantId": {
          "description": "The participant ID of a conversation item.",
          "type": "string"
        },
        "language": {
          "description": "The override language of a conversation item in BCP 47 language representation.",
          "type": "string"
        },
        "modality": {
          "$ref": "#/definitions/TranscriptModality"
        },
        "role": {
          "type": "string",
          "description": "The role of the participant.",
          "enum": [ "agent", "customer", "generic" ],
          "x-ms-enum": {
            "name": "role",
            "modelAsString": true
          }
        },
        "itn": {
          "type": "string",
          "description": "Inverse Text Normalization representation of input. The inverse-text-normalized form is the recognized text from Microsoft’s Speech to Text API, with phone numbers, numbers, abbreviations, and other transformations applied."
        },
        "maskedItn": {
          "type": "string",
          "description": "The Inverse Text Normalized format with profanity masking applied."
        },
        "text": {
          "type": "string",
          "description": "The display form of the recognized text from speech to text API, with punctuation and capitalization added."
        },
        "lexical": {
          "type": "string",
          "description": "The lexical form of the recognized text from speech to text API with the actual words recognized."
        },
        "audioTimings": {
          "type": "array",
          "description": "The list of word level audio timing information",
          "items": {
            "$ref": "#/definitions/WordLevelTiming"
          }
        }
      },
      "required": [ "participantId", "id" ],
      "additionalProperties": true
    },
    "WordLevelTiming": {
      "type": "object",
      "description": "Word level timing information generated by the speech to text API. The words in this object should have 1:1 correspondence with the 'lexical' input to allow for audio redaction.",
      "properties": {
        "word": {
          "type": "string",
          "description": "The word recognized."
        },
        "offset": {
          "description": "Offset from start of speech audio, in ticks. 1 tick = 100 ns.",
          "type": "integer",
          "format": "int64"
        },
        "duration": {
          "description": "Duration of word articulation, in ticks. 1 tick = 100 ns.",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "TextJobsInput": {
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Optional display name for the analysis job.",
          "type": "string",
          "x-ms-visibility": "internal",
          "default": "Conversation PII Job"
        },
        "analysisInput": {
          "$ref": "#/definitions/ConversationalPIITextMultiLanguageConversationAnalysisInput"
        },
        "task": {
          "$ref": "#/definitions/ConversationalPIITextTask"
        }
      },
      "required": [
        "analysisInput",
        "task"
      ]
    },
    "ConversationalPIITextMultiLanguageConversationAnalysisInput": {
      "type": "object",
      "required": [
        "conversations"
      ],
      "properties": {
        "conversations": {
          "$ref": "#/definitions/ConversationalPIITextConversation"
        }
      }
    },
    "ConversationalPIITextConversation": {
      "type": "object",
      "x-ms-discriminator-value": "text",
      "required": [ "conversationItems", "id", "language", "modality" ],
      "properties": {
        "conversationItems": {
          "description": "Ordered list of text conversation items in the conversation.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConversationalPIITextConversationItem"
          }
        },
        "id": {
          "description": "Unique identifier for the conversation.",
          "type": "string",
          "default": "conversation_Id",
          "x-ms-visibility": "internal"
        },
        "language": {
          "description": "The language of the conversation item in BCP-47 format.",
          "type": "string"
        },
        "modality": {
          "$ref": "#/definitions/TextModality"
        },
        "domain": {
          "$ref": "#/definitions/ConversationDomain"
        }
      }
    },
    "ConversationalPIITextConversationItem": {
      "type": "object",
      "description": "The text modality of an input conversation.",
      "properties": {
        "id": {
          "description": "The ID of a conversation item.",
          "type": "string"
        },
        "participantId": {
          "description": "The participant ID of a conversation item.",
          "type": "string"
        },
        "language": {
          "description": "The override language of a conversation item in BCP 47 language representation.",
          "type": "string"
        },
        "modality": {
          "$ref": "#/definitions/TextModality"
        },
        "role": {
          "type": "string",
          "description": "The role of the participant.",
          "enum": [ "agent", "customer", "generic" ],
          "x-ms-enum": {
            "name": "role",
            "modelAsString": true
          }
        },
        "text": {
          "description": "The text input",
          "type": "string"
        }
      },
      "required": [
        "participantId",
        "id",
        "text"
      ]
    },
    "ConversationalPIITextTask": {
      "type": "object",
      "description": "Task definition for a PII redaction in conversations.",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/ConversationPIITextTaskParameters"
        },
        "kind": {
          "$ref": "#/definitions/ConversationalPIILROTaskKind"
        },
        "taskName": {
          "type": "string",
          "x-ms-visibility": "internal",
          "default": "Conversation PII Task"
        }
      },
      "required": [ "kind" ],
      "x-ms-discriminator-value": "ConversationalPIITask"
    },
    "ConversationPIITextTaskParameters": {
      "type": "object",
      "description": "Supported parameters for a Conversational PII detection and redaction task.",
      "properties": {
        "modelVersion": {
          "type": "string",
          "default": "2022-05-15-preview",
          "x-ms-visibility": "internal"
        },
        "loggingOptOut": {
          "type": "boolean",
          "default": false
        },
        "piiCategories": {
          "$ref": "#/definitions/ConversationPIICategories"
        }
      }
    },
    "ConversationalSummarizationJobsInput": {
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Optional display name for the analysis job.",
          "type": "string",
          "x-ms-visibility": "internal",
          "default": "Conversation Summarization Job"
        },
        "analysisInput": {
          "$ref": "#/definitions/ConversationalSummarizationMultiLanguageConversationAnalysisInput"
        },
        "task": {
          "$ref": "#/definitions/ConversationSummarizationTask"
        }
      },
      "required": [
        "analysisInput",
        "task"
      ]
    },
    "ConversationalSummarizationMultiLanguageConversationAnalysisInput": {
      "type": "object",
      "required": [
        "conversations"
      ],
      "properties": {
        "conversations": {
          "$ref": "#/definitions/ConversationalSummarizationTextConversation"
        }
      }
    },
    "ConversationalSummarizationTextConversation": {
      "type": "object",
      "x-ms-discriminator-value": "text",
      "required": [ "conversationItems", "id", "language", "modality" ],
      "properties": {
        "conversationItems": {
          "description": "Ordered list of text conversation items in the conversation.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConversationalSummarizationTextConversationItem"
          }
        },
        "id": {
          "description": "Unique identifier for the conversation.",
          "type": "string",
          "x-ms-visibility": "internal",
          "default": "conversation_Id"
        },
        "language": {
          "description": "The language of the conversation item in BCP-47 format.",
          "type": "string",
          "default": "en"
        },
        "modality": {
          "$ref": "#/definitions/TextModality"
        },
        "domain": {
          "$ref": "#/definitions/ConversationDomain"
        }
      }
    },
    "TextModality": {
      "type": "string",
      "description": "Enumeration of supported conversational modalities.",
      "enum": [ "text" ],
      "default": "text",
      "x-ms-visibility": "internal",
      "x-ms-enum": {
        "name": "InputModality",
        "modelAsString": true
      }
    },
    "ConversationalSummarizationTextConversationItem": {
      "type": "object",
      "description": "The text modality of an input conversation.",
      "properties": {
        "id": {
          "description": "The ID of a conversation item.",
          "type": "string"
        },
        "participantId": {
          "description": "The participant ID of a conversation item.",
          "type": "string"
        },
        "language": {
          "description": "The override language of a conversation item in BCP 47 language representation.",
          "type": "string"
        },
        "modality": {
          "$ref": "#/definitions/TextModality"
        },
        "role": {
          "type": "string",
          "description": "The role of the participant.",
          "enum": [
            "agent",
            "customer",
            "generic"
          ],
          "x-ms-enum": {
            "name": "role",
            "modelAsString": true
          }
        },
        "text": {
          "description": "The text input",
          "type": "string"
        }
      },
      "required": [
        "participantId",
        "id",
        "text"
      ]
    },
    "ConversationalPIITranscriptTask": {
      "type": "object",
      "description": "Task definition for a PII redaction in conversations.",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/ConversationalPIITranscriptTaskParameters"
        },
        "kind": {
          "$ref": "#/definitions/ConversationalPIILROTaskKind"
        },
        "taskName": {
          "type": "string",
          "x-ms-visibility": "internal",
          "default": "Conversation PII Task"
        }
      },
      "required": [ "kind" ],
      "x-ms-discriminator-value": "ConversationalPIITask"
    },
    "ConversationalPIILROTaskKind": {
      "type": "string",
      "description": "Enumeration of supported analysis tasks on a collection of conversations.",
      "enum": [ "ConversationalPIITask" ],
      "default": "ConversationalPIITask",
      "x-ms-visibility": "internal",
      "x-ms-enum": {
        "name": "AnalyzeConversationLROTaskKind",
        "modelAsString": true
      }
    },
    "ConversationalPIITranscriptTaskParameters": {
      "type": "object",
      "description": "Supported parameters for a Conversational PII detection and redaction task.",
      "properties": {
        "modelVersion": {
          "type": "string",
          "default": "2022-05-15-preview",
          "x-ms-visibility": "internal"
        },
        "loggingOptOut": {
          "type": "boolean",
          "default": false
        },
        "piiCategories": {
          "$ref": "#/definitions/ConversationPIICategories"
        },
        "includeAudioRedaction": {
          "type": "boolean",
          "description": "Flag to indicate if audio redaction is requested. By default audio redaction will not be performed.",
          "default": false
        },
        "redactionSource": {
          "type": "string",
          "description": "For transcript conversations, this parameter provides information regarding which content type (ITN, Text, Lexical, Masked ITN) should be used for entity detection. The details of the entities detected - like the offset, length and the text itself - will correspond to the text type selected here.",
          "$ref": "#/definitions/TranscriptContentType"
        }
      }
    },
    "ConversationPIICategories": {
      "description": "Describes the PII categories to return for detection. If not provided, 'default' categories will be returned which will vary with the language.",
      "items": {
        "type": "string",
        "x-ms-enum": {
          "name": "ConversationPIICategory",
          "modelAsString": true
        },
        "enum": [
          "Address",
          "CreditCard",
          "Email",
          "Name",
          "NumericIdentifier",
          "PhoneNumber",
          "All",
          "Default"
        ]
      },
      "type": "array",
      "uniqueItems": true
    },
    "TranscriptContentType": {
      "type": "string",
      "description": "Enumeration of supported transcript content types.",
      "enum": [ "lexical", "itn", "maskedItn", "text" ],
      "x-ms-enum": {
        "name": "TranscriptContentType",
        "modelAsString": true
      }
    },
    "ConversationSummarizationTask": {
      "type": "object",
      "description": "Task definition for conversational summarization.",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/ConversationSummarizationTaskParameters"
        },
        "kind": {
          "$ref": "#/definitions/ConversationalSummarizationLROTaskKind"
        },
        "taskName": {
          "type": "string",
          "x-ms-visibility": "internal",
          "default": "Conversation Summarization Task"
        }
      },
      "required": [ "kind" ],
      "x-ms-discriminator-value": "ConversationalSummarizationTask"
    },
    "ConversationalSummarizationLROTaskKind": {
      "type": "string",
      "description": "Enumeration of supported analysis tasks on a collection of conversations.",
      "enum": [ "ConversationalSummarizationTask" ],
      "default": "ConversationalSummarizationTask",
      "x-ms-visibility": "internal",
      "x-ms-enum": {
        "name": "AnalyzeConversationLROTaskKind",
        "modelAsString": true
      }
    },
    "ConversationSummarizationTaskParameters": {
      "type": "object",
      "description": "Supported parameters for an conversational summarization task.",
      "required": [
        "summaryAspects"
      ],
      "properties": {
        "modelVersion": {
          "type": "string",
          "default": "2022-05-15-preview",
          "x-ms-visibility": "internal"
        },
        "loggingOptOut": {
          "type": "boolean",
          "default": false
        },
        "summaryAspects": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "issue",
              "resolution"
            ],
            "x-ms-enum": {
              "name": "SummaryAspect",
              "modelAsString": true
            }
          }
        }
      }
    },
    "ConversationalPIITranscriptJobState": {
      "type": "object",
      "description": "Contains the status of the analyze conversations job submitted along with related statistics.",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "createdDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "expirationDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "jobId": {
          "type": "string"
        },
        "lastUpdatedDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "enum": [
            "notStarted",
            "running",
            "succeeded",
            "partiallyCompleted",
            "failed",
            "cancelled",
            "cancelling"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "JobState"
          }
        },
        "errors": {
          "items": {
            "$ref": "#/definitions/Error"
          },
          "type": "array"
        },
        "nextLink": {
          "type": "string"
        },
        "statistics": {
          "$ref": "#/definitions/ConversationRequestStatistics"
        },
        "tasks": {
          "properties": {
            "completed": {
              "description": "Count of tasks completed successfully.",
              "type": "integer"
            },
            "failed": {
              "description": "Count of tasks that failed.",
              "type": "integer"
            },
            "inProgress": {
              "description": "Count of tasks in progress currently.",
              "type": "integer"
            },
            "total": {
              "description": "Total count of tasks submitted as part of the job.",
              "type": "integer"
            },
            "taskResult": {
              "$ref": "#/definitions/ConversationalPIITranscriptResult"
            }
          },
          "required": [
            "total",
            "completed",
            "failed",
            "inProgress"
          ],
          "type": "object"
        }
      },
      "required": [ "jobId", "lastUpdatedDateTime", "createdDateTime", "status", "tasks" ]
    },
    "ConversationRequestStatistics": {
      "type": "object",
      "description": "if showStats=true was specified in the request this field will contain information about the request payload.",
      "required": [
        "conversationsCount",
        "validConversationsCount",
        "erroneousConversationsCount",
        "documentsCount",
        "validDocumentsCount",
        "erroneousDocumentsCount",
        "transactionsCount"
      ],
      "properties": {
        "documentsCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of documents submitted in the request."
        },
        "validDocumentsCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of valid documents. This excludes empty, over-size limit or non-supported languages documents."
        },
        "erroneousDocumentsCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of invalid documents. This includes empty, over-size limit or non-supported languages documents."
        },
        "transactionsCount": {
          "type": "integer",
          "format": "int64",
          "description": "Number of transactions for the request."
        },
        "conversationsCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of conversations submitted in the request."
        },
        "validConversationsCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of conversations documents. This excludes empty, over-size limit or non-supported languages documents."
        },
        "erroneousConversationsCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of invalid documents. This includes empty, over-size limit or non-supported languages documents."
        }
      }
    },
    "ConversationalPIITranscriptResult": {
      "type": "object",
      "description": "Result from the personally identifiable information detection and redaction operation performed on a list of conversations.",
      "properties": {
        "lastUpdateDateTime": {
          "description": "The last updated time in UTC for the task.",
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "description": "The status of the task at the mentioned last update time.",
          "enum": [
            "notStarted",
            "running",
            "succeeded",
            "failed",
            "cancelled",
            "cancelling"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "State"
          }
        },
        "taskName": {
          "type": "string"
        },
        "kind": {
          "$ref": "#/definitions/ConversationalPIIResultsKind"
        },
        "results": {
          "$ref": "#/definitions/ConversationPIITranscriptResults"
        }
      },
      "required": [
        "results",
        "kind",
        "status",
        "lastUpdateDateTime"
      ],
      "x-ms-discriminator-value": "ConversationalPIIResults"
    },
    "ConversationalPIIResultsKind": {
      "type": "string",
      "description": "Enumeration of supported Conversation Analysis task results.",
      "enum": [ "ConversationalPIIResults" ],
      "x-ms-visibility": "internal",
      "x-ms-enum": {
        "name": "AnalyzeConversationResultsKind",
        "modelAsString": true
      }
    },
    "ConversationPIITranscriptResults": {
      "type": "object",
      "description": "The result from PII detection and redaction operation for each conversation.",
      "required": [
        "conversations",
        "errors",
        "modelVersion"
      ],
      "properties": {
        "conversations": {
          "type": "object",
          "properties": {
            "conversationItems": {
              "description": "Enumeration of PII detection and redaction operation results for all the conversation items in a conversation.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ConversationPIITranscriptItemResult"
              }
            },
            "id": {
              "type": "string",
              "description": "Unique, non-empty conversation identifier."
            },
            "warnings": {
              "type": "array",
              "description": "Warnings encountered while processing document.",
              "items": {
                "$ref": "#/definitions/InputWarning"
              }
            },
            "statistics": {
              "$ref": "#/definitions/ConversationStatistics"
            }
          },
          "required": [
            "conversationItems",
            "id",
            "warnings"
          ]
        },
        "errors": {
          "type": "array",
          "description": "Errors by document id.",
          "items": {
            "$ref": "#/definitions/InputError"
          }
        },
        "statistics": {
          "$ref": "#/definitions/RequestStatistics"
        },
        "modelVersion": {
          "type": "string",
          "description": "This field indicates which model is used for scoring."
        }
      }
    },
    "InputError": {
      "type": "object",
      "description": "Contains details of errors encountered during a job execution.",
      "required": [
        "id",
        "error"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the input."
        },
        "error": {
          "type": "object",
          "description": "Error encountered.",
          "$ref": "#/definitions/Error"
        }
      }
    },
    "InputWarning": {
      "type": "object",
      "description": "Contains details of warnings encountered during a job execution.",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "string",
          "description": "Warning code."
        },
        "message": {
          "type": "string",
          "description": "Warning message."
        },
        "targetRef": {
          "type": "string",
          "description": "A JSON pointer reference indicating the target object."
        }
      }
    },
    "ConversationStatistics": {
      "type": "object",
      "description": "If showStats=true was specified in the request this field will contain information about the conversation payload.",
      "required": [
        "transactionsCount"
      ],
      "properties": {
        "transactionsCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of text units for the request."
        }
      }
    },
    "ConversationPIITranscriptItemResult": {
      "type": "object",
      "required": [
        "id",
        "redactedContent",
        "entities"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "redactedContent": {
          "type": "object",
          "$ref": "#/definitions/ConversationalPIITranscriptRedactedTranscriptContent"
        },
        "entities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Entity"
          }
        }
      }
    },
    "ConversationalPIITranscriptRedactedTranscriptContent": {
      "type": "object",
      "description": "The transcript content response generated by the service with all necessary personally identifiable information redacted.",
      "properties": {
        "itn": {
          "type": "string",
          "description": "The redacted output for inverse text normalized format input."
        },
        "maskedItn": {
          "type": "string",
          "description": "The redacted output for masked inverse text normalized format input."
        },
        "text": {
          "type": "string",
          "description": "The redacted output for text (Microsoft's Speech to Text 'display') format input."
        },
        "lexical": {
          "type": "string",
          "description": "The redacted output for lexical format input."
        },
        "audioTimings": {
          "type": "array",
          "description": "The list of redacted audio segments.",
          "items": {
            "$ref": "#/definitions/AudioTiming"
          }
        }
      }
    },
    "AudioTiming": {
      "type": "object",
      "description": "The audio timing information.",
      "properties": {
        "offset": {
          "description": "Offset from start of speech audio, in ticks. 1 tick = 100 ns.",
          "type": "integer",
          "format": "int64"
        },
        "duration": {
          "description": "Duration of word articulation, in ticks. 1 tick = 100 ns.",
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "ConversationalPIITextJobState": {
      "type": "object",
      "description": "Contains the status of the analyze conversations job submitted along with related statistics.",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "createdDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "expirationDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "jobId": {
          "type": "string"
        },
        "lastUpdatedDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "enum": [
            "notStarted",
            "running",
            "succeeded",
            "partiallyCompleted",
            "failed",
            "cancelled",
            "cancelling"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "JobState"
          }
        },
        "errors": {
          "items": {
            "$ref": "#/definitions/Error"
          },
          "type": "array"
        },
        "nextLink": {
          "type": "string"
        },
        "statistics": {
          "$ref": "#/definitions/ConversationRequestStatistics"
        },
        "tasks": {
          "properties": {
            "completed": {
              "description": "Count of tasks completed successfully.",
              "type": "integer"
            },
            "failed": {
              "description": "Count of tasks that failed.",
              "type": "integer"
            },
            "inProgress": {
              "description": "Count of tasks in progress currently.",
              "type": "integer"
            },
            "total": {
              "description": "Total count of tasks submitted as part of the job.",
              "type": "integer"
            },
            "taskResult": {
              "$ref": "#/definitions/ConversationalPIITextResult"
            }
          },
          "required": [
            "total",
            "completed",
            "failed",
            "inProgress"
          ],
          "type": "object"
        }
      },
      "required": [ "jobId", "lastUpdatedDateTime", "createdDateTime", "status", "tasks" ]
    },
    "ConversationalPIITextResult": {
      "type": "object",
      "description": "Result from the personally identifiable information detection and redaction operation performed on a list of conversations.",
      "properties": {
        "lastUpdateDateTime": {
          "description": "The last updated time in UTC for the task.",
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "description": "The status of the task at the mentioned last update time.",
          "enum": [
            "notStarted",
            "running",
            "succeeded",
            "failed",
            "cancelled",
            "cancelling"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "State"
          }
        },
        "taskName": {
          "type": "string"
        },
        "kind": {
          "$ref": "#/definitions/ConversationalPIIResultsKind"
        },
        "results": {
          "$ref": "#/definitions/ConversationPIITextResults"
        }
      },
      "required": [
        "results",
        "kind",
        "status",
        "lastUpdateDateTime"
      ],
      "x-ms-discriminator-value": "ConversationalPIIResults"
    },
    "ConversationPIITextResults": {
      "type": "object",
      "description": "The result from PII detection and redaction operation for each conversation.",
      "required": [
        "conversations",
        "errors",
        "modelVersion"
      ],
      "properties": {
        "conversations": {
          "type": "object",
          "properties": {
            "conversationItems": {
              "description": "Enumeration of PII detection and redaction operation results for all the conversation items in a conversation.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/ConversationPIITextItemResult"
              }
            },
            "id": {
              "type": "string",
              "description": "Unique, non-empty conversation identifier."
            },
            "warnings": {
              "type": "array",
              "description": "Warnings encountered while processing document.",
              "items": {
                "$ref": "#/definitions/InputWarning"
              }
            },
            "statistics": {
              "$ref": "#/definitions/ConversationStatistics"
            }
          },
          "required": [
            "conversationItems",
            "id",
            "warnings"
          ]
        },
        "errors": {
          "type": "array",
          "description": "Errors by document id.",
          "items": {
            "$ref": "#/definitions/InputError"
          }
        },
        "statistics": {
          "$ref": "#/definitions/RequestStatistics"
        },
        "modelVersion": {
          "type": "string",
          "description": "This field indicates which model is used for scoring."
        }
      }
    },
    "ConversationPIITextItemResult": {
      "type": "object",
      "required": [
        "id",
        "redactedContent",
        "entities"
      ],
      "properties": {
        "id": {
          "type": "string"
        },
        "redactedContent": {
          "type": "object",
          "$ref": "#/definitions/ConversationalPIITranscriptRedactedTextContent"
        },
        "entities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Entity"
          }
        }
      }
    },
    "ConversationalPIITranscriptRedactedTextContent": {
      "type": "object",
      "description": "The transcript content response generated by the service with all necessary personally identifiable information redacted.",
      "properties": {
        "text": {
          "type": "string",
          "description": "The redacted output for text (Microsoft's Speech to Text 'display') format input."
        }
      }
    },
    "AnalyzeConversationSummarizationJobState": {
      "type": "object",
      "description": "Contains the status of the analyze conversations job submitted along with related statistics.",
      "properties": {
        "displayName": {
          "type": "string"
        },
        "createdDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "expirationDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "jobId": {
          "type": "string"
        },
        "lastUpdatedDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "enum": [
            "notStarted",
            "running",
            "succeeded",
            "partiallyCompleted",
            "failed",
            "cancelled",
            "cancelling"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "JobState"
          }
        },
        "errors": {
          "items": {
            "$ref": "#/definitions/Error"
          },
          "type": "array"
        },
        "nextLink": {
          "type": "string"
        },
        "statistics": {
          "$ref": "#/definitions/ConversationRequestStatistics"
        },
        "tasks": {
          "properties": {
            "completed": {
              "description": "Count of tasks completed successfully.",
              "type": "integer"
            },
            "failed": {
              "description": "Count of tasks that failed.",
              "type": "integer"
            },
            "inProgress": {
              "description": "Count of tasks in progress currently.",
              "type": "integer"
            },
            "total": {
              "description": "Total count of tasks submitted as part of the job.",
              "type": "integer"
            },
            "taskResult": {
              "$ref": "#/definitions/AnalyzeConversationSummarizationResult"
            }
          },
          "required": [
            "total",
            "completed",
            "failed",
            "inProgress"
          ],
          "type": "object"
        }
      },
      "required": [ "jobId", "lastUpdatedDateTime", "createdDateTime", "status", "tasks" ]
    },
    "AnalyzeConversationSummarizationResult": {
      "type": "object",
      "description": "Result for the summarization task on the conversation.",
      "properties": {
        "lastUpdateDateTime": {
          "description": "The last updated time in UTC for the task.",
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "description": "The status of the task at the mentioned last update time.",
          "enum": [
            "notStarted",
            "running",
            "succeeded",
            "failed",
            "cancelled",
            "cancelling"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "State"
          }
        },
        "taskName": {
          "type": "string"
        },
        "kind": {
          "$ref": "#/definitions/ConversationalSummarizationResultsKind"
        },
        "results": {
          "$ref": "#/definitions/SummaryResult"
        }
      },
      "required": [
        "kind",
        "results",
        "status",
        "lastUpdateDateTime"
      ],
      "x-ms-discriminator-value": "ConversationalSummarizationResults"
    },
    "ConversationalSummarizationResultsKind": {
      "type": "string",
      "description": "Enumeration of supported Conversation Analysis task results.",
      "enum": [ "ConversationalSummarizationResults" ],
      "x-ms-visibility": "internal",
      "x-ms-enum": {
        "name": "AnalyzeConversationResultsKind",
        "modelAsString": true
      }
    },
    "SummaryResult": {
      "type": "object",
      "required": [
        "conversations",
        "errors",
        "modelVersion"
      ],
      "properties": {
        "conversations": {
          "type": "object",
          "required": [
            "summaries",
            "id",
            "warnings"
          ],
          "properties": {
            "summaries": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/SummaryResultItem"
              }
            },
            "id": {
              "type": "string",
              "description": "Unique, non-empty conversation identifier."
            },
            "warnings": {
              "type": "array",
              "description": "Warnings encountered while processing document.",
              "items": {
                "$ref": "#/definitions/InputWarning"
              }
            },
            "statistics": {
              "$ref": "#/definitions/ConversationStatistics"
            }
          }
        },
        "errors": {
          "type": "array",
          "description": "Errors by document id.",
          "items": {
            "$ref": "#/definitions/InputError"
          }
        },
        "statistics": {
          "$ref": "#/definitions/RequestStatistics"
        },
        "modelVersion": {
          "type": "string",
          "description": "This field indicates which model is used for scoring."
        }
      }
    },
    "SummaryResultItem": {
      "type": "object",
      "properties": {
        "aspect": {
          "type": "string"
        },
        "text": {
          "type": "string"
        }
      },
      "required": [
        "aspect",
        "text"
      ]
    },
    "Error": {
      "type": "object",
      "description": "The error object.",
      "additionalProperties": true,
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "description": "One of a server-defined set of error codes.",
          "$ref": "#/definitions/ErrorCode"
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/Error"
          }
        },
        "innererror": {
          "description": "An object containing more specific information than the current object about the error.",
          "$ref": "#/definitions/InnerErrorModel"
        }
      }
    },
    "ErrorCode": {
      "type": "string",
      "description": "Human-readable error code.",
      "x-ms-enum": {
        "name": "ErrorCode",
        "modelAsString": true
      },
      "enum": [
        "InvalidRequest",
        "InvalidArgument",
        "Unauthorized",
        "Forbidden",
        "NotFound",
        "ProjectNotFound",
        "OperationNotFound",
        "AzureCognitiveSearchNotFound",
        "AzureCognitiveSearchIndexNotFound",
        "TooManyRequests",
        "AzureCognitiveSearchThrottling",
        "AzureCognitiveSearchIndexLimitReached",
        "InternalServerError",
        "ServiceUnavailable",
        "Timeout",
        "QuotaExceeded",
        "Conflict",
        "Warning"
      ]
    },
    "InnerErrorModel": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "additionalProperties": false,
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "description": "One of a server-defined set of error codes.",
          "$ref": "#/definitions/InnerErrorCode"
        },
        "message": {
          "type": "string",
          "description": "Error message."
        },
        "details": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Error details."
        },
        "target": {
          "type": "string",
          "description": "Error target."
        },
        "innererror": {
          "description": "An object containing more specific information than the current object about the error.",
          "$ref": "#/definitions/InnerErrorModel"
        }
      }
    },
    "InnerErrorCode": {
      "type": "string",
      "description": "Human-readable error code.",
      "x-ms-enum": {
        "name": "InnerErrorCode",
        "modelAsString": true
      },
      "enum": [
        "InvalidRequest",
        "InvalidParameterValue",
        "KnowledgeBaseNotFound",
        "AzureCognitiveSearchNotFound",
        "AzureCognitiveSearchThrottling",
        "ExtractionFailure",
        "InvalidRequestBodyFormat",
        "EmptyRequest",
        "MissingInputDocuments",
        "InvalidDocument",
        "ModelVersionIncorrect",
        "InvalidDocumentBatch",
        "UnsupportedLanguageCode",
        "InvalidCountryHint"
      ]
    },
    "LanguageAnalyzeTextTaskKind": {
      "type": "string",
      "description": "Enumeration of supported Text Analysis tasks.",
      "enum": [
        "SentimentAnalysis",
        "EntityRecognition",
        "PiiEntityRecognition",
        "KeyPhraseExtraction",
        "LanguageDetection",
        "EntityLinking"
      ],
      "x-ms-enum": {
        "name": "AnalyzeTextTaskKind",
        "modelAsString": true
      }
    },
    "LanguageAnalyzeTextLROTaskKind": {
      "type": "string",
      "description": "Enumeration of supported long-running Text Analysis tasks.",
      "enum": [
        "SentimentAnalysis",
        "EntityRecognition",
        "PiiEntityRecognition",
        "KeyPhraseExtraction",
        "EntityLinking",
        "Healthcare",
        "CustomEntityRecognition",
        "CustomSingleLabelClassification",
        "CustomMultiLabelClassification",
        "AbstractiveSummarization",
        "ExtractiveSummarization"
      ],
      "x-ms-enum": {
        "name": "AnalyzeTextLROTaskKind",
        "modelAsString": true
      }
    },
    "LanguageAnalyzeTextTaskResultsKind": {
      "type": "string",
      "description": "Enumeration of supported Text Analysis task results.",
      "enum": [
        "SentimentAnalysisResults",
        "EntityRecognitionResults",
        "PiiEntityRecognitionResults",
        "KeyPhraseExtractionResults",
        "LanguageDetectionResults",
        "EntityLinkingResults"
      ],
      "x-ms-enum": {
        "name": "AnalyzeTextTaskResultsKind",
        "modelAsString": true
      }
    },
    "LanguageAnalyzeTextLROResultsKind": {
      "type": "string",
      "description": "Enumeration of supported Text Analysis long-running operation task results.",
      "enum": [
        "SentimentAnalysisLROResults",
        "EntityRecognitionLROResults",
        "PiiEntityRecognitionLROResults",
        "KeyPhraseExtractionLROResults",
        "EntityLinkingLROResults",
        "HealthcareLROResults",
        "CustomEntityRecognitionLROResults",
        "CustomSingleLabelClassificationLROResults",
        "CustomMultiLabelClassificationLROResults"
      ],
      "x-ms-enum": {
        "name": "AnalyzeTextLROResultsKind",
        "modelAsString": true
      }
    },
    "LanguageMultiLanguageAnalysisInput": {
      "type": "object",
      "properties": {
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LanguageMultiLanguageInput"
          }
        }
      },
      "required": [
        "documents"
      ]
    },
    "LanguageDetectionAnalysisInput": {
      "properties": {
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LanguageDetectionInput"
          }
        }
      }
    },
    "LanguageAnalyzeTextTask": {
      "discriminator": "kind",
      "required": [
        "kind"
      ],
      "properties": {
        "kind": {
          "$ref": "#/definitions/LanguageAnalyzeTextTaskKind"
        }
      }
    },
    "LanguageAnalyzeTextLROTask": {
      "discriminator": "kind",
      "required": [
        "kind"
      ],
      "properties": {
        "kind": {
          "$ref": "#/definitions/LanguageAnalyzeTextLROTaskKind"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/LanguageTaskIdentifier"
        }
      ]
    },
    "LanguageAnalyzeTextTaskResult": {
      "discriminator": "kind",
      "required": [
        "kind"
      ],
      "properties": {
        "kind": {
          "$ref": "#/definitions/LanguageAnalyzeTextTaskResultsKind"
        }
      }
    },
    "LanguageAnalyzeTextEntityLinkingInput": {
      "properties": {
        "analysisInput": {
          "$ref": "#/definitions/LanguageMultiLanguageAnalysisInput"
        },
        "parameters": {
          "$ref": "#/definitions/LanguageEntityLinkingTaskParameters"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/LanguageAnalyzeTextTask"
        }
      ],
      "x-ms-discriminator-value": "EntityLinking"
    },
    "LanguageAnalyzeTextEntityRecognitionInput": {
      "properties": {
        "analysisInput": {
          "$ref": "#/definitions/LanguageMultiLanguageAnalysisInput"
        },
        "parameters": {
          "$ref": "#/definitions/LanguageEntitiesTaskParameters"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/LanguageAnalyzeTextTask"
        }
      ],
      "x-ms-discriminator-value": "EntityRecognition"
    },
    "LanguageAnalyzeTextKeyPhraseExtractionInput": {
      "properties": {
        "analysisInput": {
          "$ref": "#/definitions/LanguageMultiLanguageAnalysisInput"
        },
        "parameters": {
          "$ref": "#/definitions/LanguageKeyPhraseTaskParameters"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/LanguageAnalyzeTextTask"
        }
      ],
      "x-ms-discriminator-value": "KeyPhraseExtraction"
    },
    "LanguageAnalyzeTextPiiEntitiesRecognitionInput": {
      "properties": {
        "analysisInput": {
          "$ref": "#/definitions/LanguageMultiLanguageAnalysisInput"
        },
        "parameters": {
          "$ref": "#/definitions/LanguagePiiTaskParameters"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/LanguageAnalyzeTextTask"
        }
      ],
      "x-ms-discriminator-value": "PiiEntityRecognition"
    },
    "LanguageAnalyzeTextLanguageDetectionInput": {
      "properties": {
        "analysisInput": {
          "$ref": "#/definitions/LanguageDetectionAnalysisInput"
        },
        "parameters": {
          "$ref": "#/definitions/LanguageDetectionTaskParameters"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/LanguageAnalyzeTextTask"
        }
      ],
      "x-ms-discriminator-value": "LanguageDetection"
    },
    "LanguageAnalyzeTextSentimentAnalysisInput": {
      "properties": {
        "analysisInput": {
          "$ref": "#/definitions/LanguageMultiLanguageAnalysisInput"
        },
        "parameters": {
          "$ref": "#/definitions/LanguageSentimentAnalysisTaskParameters"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/LanguageAnalyzeTextTask"
        }
      ],
      "x-ms-discriminator-value": "SentimentAnalysis"
    },
    "LanguageAnalyzeTextJobsInput": {
      "properties": {
        "displayName": {
          "description": "Optional display name for the analysis job.",
          "type": "string"
        },
        "analysisInput": {
          "$ref": "#/definitions/LanguageMultiLanguageAnalysisInput"
        },
        "task": {
          "$ref": "#/definitions/LanguageAnalyzeTextLROTask"
        }
      },
      "required": [
        "analysisInput",
        "task"
      ]
    },
    "LanguageAnalyzeTextJobsInput_KPE": {
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Optional display name for the analysis job.",
          "type": "string",
          "x-ms-visibility": "internal"
        },
        "analysisInput": {
          "$ref": "#/definitions/LanguageMultiLanguageAnalysisInput"
        },
        "task": {
          "$ref": "#/definitions/LanguageKeyPhraseLROTask"
        }
      },
      "required": [
        "analysisInput",
        "task"
      ]
    },
    "LanguageAnalyzeTextJobsInput_CNER": {
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Optional display name for the analysis job.",
          "type": "string",
          "x-ms-visibility": "internal"
        },
        "analysisInput": {
          "$ref": "#/definitions/LanguageMultiLanguageAnalysisInput"
        },
        "task": {
          "$ref": "#/definitions/LanguageCustomEntitiesLROTask"
        }
      },
      "required": [
        "analysisInput",
        "task"
      ]
    },
    "LanguageAnalyzeTextJobsInput_CSLC": {
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Optional display name for the analysis job.",
          "type": "string",
          "x-ms-visibility": "internal"
        },
        "analysisInput": {
          "$ref": "#/definitions/LanguageMultiLanguageAnalysisInput"
        },
        "task": {
          "$ref": "#/definitions/LanguageCustomSingleLabelClassificationLROTask"
        }
      },
      "required": [
        "analysisInput",
        "task"
      ]
    },
    "LanguageAnalyzeTextJobsInput_CMLC": {
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Optional display name for the analysis job.",
          "type": "string",
          "x-ms-visibility": "internal"
        },
        "analysisInput": {
          "$ref": "#/definitions/LanguageMultiLanguageAnalysisInput"
        },
        "task": {
          "$ref": "#/definitions/LanguageCustomMultiLabelClassificationLROTask"
        }
      },
      "required": [
        "analysisInput",
        "task"
      ]
    },
    "LanguageAnalyzeTextJobsInput_Entites": {
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Optional display name for the analysis job.",
          "type": "string",
          "x-ms-visibility": "internal"
        },
        "analysisInput": {
          "$ref": "#/definitions/LanguageMultiLanguageAnalysisInput"
        },
        "task": {
          "$ref": "#/definitions/LanguageEntitiesLROTask"
        }
      },
      "required": [
        "analysisInput",
        "task"
      ]
    },
    "LanguageAnalyzeTextJobsInput_Pii": {
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Optional display name for the analysis job.",
          "type": "string",
          "x-ms-visibility": "internal"
        },
        "analysisInput": {
          "$ref": "#/definitions/LanguageMultiLanguageAnalysisInput"
        },
        "task": {
          "$ref": "#/definitions/LanguagePiiLROTask"
        }
      },
      "required": [
        "analysisInput",
        "task"
      ]
    },
    "LanguageAnalyzeTextJobsInput_Sentiment": {
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Optional display name for the analysis job.",
          "type": "string",
          "x-ms-visibility": "internal"
        },
        "analysisInput": {
          "$ref": "#/definitions/LanguageMultiLanguageAnalysisInput"
        },
        "task": {
          "$ref": "#/definitions/LanguageSentimentAnalysisLROTask"
        }
      },
      "required": [
        "analysisInput",
        "task"
      ]
    },
    "LanguageAnalyzeTextJobsInput_HealthCare": {
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Optional display name for the analysis job.",
          "type": "string",
          "x-ms-visibility": "internal"
        },
        "analysisInput": {
          "$ref": "#/definitions/LanguageMultiLanguageAnalysisInput"
        },
        "task": {
          "$ref": "#/definitions/LanguageHealthcareLROTask"
        }
      },
      "required": [
        "analysisInput",
        "task"
      ]
    },
    "LanguageAnalyzeTextJobsInput_ExtractiveSummarization": {
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Optional display name for the analysis job.",
          "type": "string",
          "x-ms-visibility": "internal"
        },
        "analysisInput": {
          "$ref": "#/definitions/LanguageMultiLanguageAnalysisInput"
        },
        "task": {
          "$ref": "#/definitions/ExtractiveSummarizationLROTask"
        }
      },
      "required": [
        "analysisInput",
        "task"
      ]
    },
    "LanguageAnalyzeTextJobsInput_AbstractiveSummarization": {
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Optional display name for the analysis job.",
          "type": "string",
          "x-ms-visibility": "internal"
        },
        "analysisInput": {
          "$ref": "#/definitions/LanguageMultiLanguageAnalysisInput"
        },
        "task": {
          "$ref": "#/definitions/AbstractiveSummarizationLROTask"
        }
      },
      "required": [
        "analysisInput",
        "task"
      ]
    },
    "LanguageAnalyzeTextJobsInput_EntityLinking": {
      "type": "object",
      "properties": {
        "displayName": {
          "description": "Optional display name for the analysis job.",
          "type": "string",
          "x-ms-visibility": "internal"
        },
        "analysisInput": {
          "$ref": "#/definitions/LanguageMultiLanguageAnalysisInput"
        },
        "task": {
          "$ref": "#/definitions/LanguageEntityLinkingLROTask"
        }
      },
      "required": [
        "analysisInput",
        "task"
      ]
    },
    "LanguageTaskIdentifier": {
      "type": "object",
      "description": "Base task object.",
      "properties": {
        "taskName": {
          "type": "string"
        }
      }
    },
    "LanguageTaskParameters": {
      "type": "object",
      "description": "Base parameters object for a text analysis task.",
      "properties": {
        "loggingOptOut": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "LanguagePreBuiltTaskParameters_05_01": {
      "type": "object",
      "description": "Parameters object for a text analysis task using pre-built models.",
      "properties": {
        "modelVersion": {
          "type": "string",
          "default": "2022-05-01"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/LanguageTaskParameters"
        }
      ]
    },
    "LanguagePreBuiltTaskParameters_10_01_preview": {
      "type": "object",
      "description": "Parameters object for a text analysis task using pre-built models.",
      "properties": {
        "modelVersion": {
          "type": "string",
          "default": "2022-10-01-preview"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/LanguageTaskParameters"
        }
      ]
    },
    "LanguagePreBuiltResult": {
      "properties": {
        "errors": {
          "type": "array",
          "description": "Errors by document id.",
          "items": {
            "$ref": "#/definitions/LanguageDocumentError"
          }
        },
        "statistics": {
          "$ref": "#/definitions/LanguageRequestStatistics"
        },
        "modelVersion": {
          "type": "string",
          "description": "This field indicates which model is used for scoring."
        }
      },
      "required": [
        "errors",
        "modelVersion"
      ]
    },
    "LanguageCustomTaskParameters": {
      "type": "object",
      "description": "Parameters object for a text analysis task using custom models.",
      "properties": {
        "projectName": {
          "type": "string",
          "description": "This field indicates the project name for the model."
        },
        "deploymentName": {
          "type": "string",
          "description": "This field indicates the deployment name for the model."
        }
      },
      "required": [
        "projectName",
        "deploymentName"
      ]
    },
    "LanguageCustomResult": {
      "properties": {
        "errors": {
          "type": "array",
          "description": "Errors by document id.",
          "items": {
            "$ref": "#/definitions/LanguageDocumentError"
          }
        },
        "statistics": {
          "$ref": "#/definitions/LanguageRequestStatistics"
        },
        "projectName": {
          "type": "string",
          "description": "This field indicates the project name for the model."
        },
        "deploymentName": {
          "type": "string",
          "description": "This field indicates the deployment name for the model."
        }
      },
      "required": [
        "errors",
        "projectName",
        "deploymentName"
      ]
    },
    "LanguageCustomEntitiesTaskParameters": {
      "type": "object",
      "description": "Supported parameters for a Custom Entities task.",
      "properties": {
        "stringIndexType": {
          "$ref": "#/definitions/LanguageStringIndexType"
        },
        "projectName": {
          "type": "string",
          "description": "This field indicates the project name for the model."
        },
        "deploymentName": {
          "type": "string",
          "description": "This field indicates the deployment name for the model."
        }
      },
      "required": [
        "projectName",
        "deploymentName"
      ]
    },
    "LanguageCustomEntitiesLROTask": {
      "type": "object",
      "description": "Use custom models to ease the process of information extraction from unstructured documents like contracts or financial documents",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/LanguageCustomEntitiesTaskParameters"
        },
        "kind": {
          "type": "string",
          "description": "Enumeration of supported long-running Text Analysis tasks.",
          "enum": [
            "CustomEntityRecognition"
          ],
          "default": "CustomEntityRecognition",
          "x-ms-visibility": "internal",
          "x-ms-enum": {
            "name": "AnalyzeTextLROTaskKind",
            "modelAsString": true
          }
        }
      },
      "required": [
        "parameters",
        "kind"
      ],
      "x-ms-discriminator-value": "CustomEntityRecognition"
    },
    "LanguageCustomEntitiesResult": {
      "type": "object",
      "properties": {
        "documents": {
          "type": "array",
          "description": "Response by document",
          "items": {
            "$ref": "#/definitions/LanguageEntitiesDocumentResult"
          }
        }
      },
      "required": [
        "documents"
      ]
    },
    "LanguageCustomSingleLabelClassificationTaskParameters": {
      "type": "object",
      "description": "Supported parameters for a Custom Single Classification task.",
      "properties": {
        "projectName": {
          "type": "string",
          "description": "This field indicates the project name for the model."
        },
        "deploymentName": {
          "type": "string",
          "description": "This field indicates the deployment name for the model."
        }
      },
      "required": [
        "projectName",
        "deploymentName"
      ]
    },
    "LanguageCustomSingleLabelClassificationLROTask": {
      "type": "object",
      "description": "Use custom models to classify text into single label taxonomy",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/LanguageCustomSingleLabelClassificationTaskParameters"
        },
        "kind": {
          "type": "string",
          "description": "Enumeration of supported long-running Text Analysis tasks.",
          "enum": [
            "CustomSingleLabelClassification"
          ],
          "default": "CustomSingleLabelClassification",
          "x-ms-visibility": "internal",
          "x-ms-enum": {
            "name": "AnalyzeTextLROTaskKind",
            "modelAsString": true
          }
        }
      },
      "required": [
        "parameters",
        "kind"
      ],
      "x-ms-discriminator-value": "CustomSingleLabelClassification"
    },
    "LanguageCustomLabelClassificationResult": {
      "type": "object",
      "properties": {
        "documents": {
          "type": "array",
          "description": "Response by document",
          "items": {
            "$ref": "#/definitions/LanguageClassificationDocumentResult"
          }
        }
      },
      "required": [
        "documents"
      ]
    },
    "LanguageClassificationResult": {
      "type": "object",
      "required": [
        "category",
        "confidenceScore"
      ],
      "properties": {
        "category": {
          "type": "string",
          "description": "Classification type."
        },
        "confidenceScore": {
          "type": "number",
          "format": "double",
          "description": "Confidence score between 0 and 1 of the recognized class."
        }
      }
    },
    "LanguageCustomMultiLabelClassificationTaskParameters": {
      "type": "object",
      "description": "Supported parameters for a Custom Multi Classification task.",
      "properties": {
        "projectName": {
          "type": "string",
          "description": "This field indicates the project name for the model."
        },
        "deploymentName": {
          "type": "string",
          "description": "This field indicates the deployment name for the model."
        }
      },
      "required": [
        "projectName",
        "deploymentName"
      ]
    },
    "LanguageCustomMultiLabelClassificationLROTask": {
      "type": "object",
      "description": "Use custom models to classify text into multi label taxonomy",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/LanguageCustomMultiLabelClassificationTaskParameters"
        },
        "kind": {
          "type": "string",
          "description": "Enumeration of supported long-running Text Analysis tasks.",
          "enum": [
            "CustomMultiLabelClassification"
          ],
          "default": "CustomMultiLabelClassification",
          "x-ms-visibility": "internal",
          "x-ms-enum": {
            "name": "AnalyzeTextLROTaskKind",
            "modelAsString": true
          }
        }
      },
      "required": [
        "parameters",
        "kind"
      ],
      "x-ms-discriminator-value": "CustomMultiLabelClassification"
    },
    "DocumentDetectedLanguage": {
      "type": "object",
      "properties": {
        "detectedLanguage": {
          "$ref": "#/definitions/DetectedLanguage",
          "description": "If 'language' is set to 'auto' for the document in the request this field will contain a 2 letter ISO 639-1 representation of the language detected for this document."
        }
      }
    },
    "DocumentResult": {
      "type": "object",
      "required": [
        "id",
        "warnings"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique, non-empty document identifier."
        },
        "warnings": {
          "type": "array",
          "description": "Warnings encountered while processing document.",
          "items": {
            "$ref": "#/definitions/LanguageDocumentWarning"
          }
        },
        "statistics": {
          "description": "if showStats=true was specified in the request this field will contain information about the document payload.",
          "$ref": "#/definitions/DocumentStatistics"
        }
      }
    },
    "LanguageClassificationDocumentResult": {
      "type": "object",
      "properties": {
        "class": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LanguageClassificationResult"
          }
        },
        "id": {
          "type": "string",
          "description": "Unique, non-empty document identifier."
        }
      },
      "required": [
        "class",
        "id"
      ]
    },
    "LanguageHealthcareTaskParameters": {
      "type": "object",
      "description": "Supported parameters for a Healthcare task.",
      "properties": {
        "stringIndexType": {
          "$ref": "#/definitions/LanguageStringIndexType"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/LanguagePreBuiltTaskParameters_05_01"
        }
      ]
    },
    "LanguageHealthcareLROTask": {
      "type": "object",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/LanguageHealthcareTaskParameters"
        },
        "kind": {
          "type": "string",
          "description": "Enumeration of supported long-running Text Analysis tasks.",
          "enum": [
            "Healthcare"
          ],
          "default": "Healthcare",
          "x-ms-visibility": "internal",
          "x-ms-enum": {
            "name": "AnalyzeTextLROTaskKind",
            "modelAsString": true
          }
        }
      },
      "required": [
        "kind"
      ],
      "x-ms-discriminator-value": "Healthcare",
      "x-ms-visibility": "internal"
    },
    "LanguageHealthcareResult": {
      "type": "object",
      "properties": {
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LanguageHealthcareEntitiesDocumentResult"
          }
        }
      },
      "required": [
        "documents"
      ]
    },
    "LanguageHealthcareEntitiesDocumentResult": {
      "type": "object",
      "properties": {
        "entities": {
          "description": "Healthcare entities.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LanguageHealthcareEntity"
          }
        },
        "relations": {
          "type": "array",
          "description": "Healthcare entity relations.",
          "items": {
            "$ref": "#/definitions/LanguageHealthcareRelation"
          }
        },
        "id": {
          "type": "string",
          "description": "Unique, non-empty document identifier."
        }
      },
      "required": [
        "entities",
        "relations",
        "id"
      ]
    },
    "LanguageHealthcareEntity": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "Entity text as appears in the request."
        },
        "category": {
          "x-ms-enum": {
            "name": "healthcareEntityCategory",
            "modelAsString": true
          },
          "type": "string",
          "description": "Healthcare Entity Category.",
          "enum": [
            "BODY_STRUCTURE",
            "AGE",
            "GENDER",
            "EXAMINATION_NAME",
            "DATE",
            "DIRECTION",
            "FREQUENCY",
            "MEASUREMENT_VALUE",
            "MEASUREMENT_UNIT",
            "RELATIONAL_OPERATOR",
            "TIME",
            "GENE_OR_PROTEIN",
            "VARIANT",
            "ADMINISTRATIVE_EVENT",
            "CARE_ENVIRONMENT",
            "HEALTHCARE_PROFESSION",
            "DIAGNOSIS",
            "SYMPTOM_OR_SIGN",
            "CONDITION_QUALIFIER",
            "MEDICATION_CLASS",
            "MEDICATION_NAME",
            "DOSAGE",
            "MEDICATION_FORM",
            "MEDICATION_ROUTE",
            "FAMILY_RELATION",
            "TREATMENT_NAME"
          ]
        },
        "subcategory": {
          "type": "string",
          "description": "(Optional) Entity sub type."
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "Start position for the entity text. Use of different 'stringIndexType' values can affect the offset returned."
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "Length for the entity text. Use of different 'stringIndexType' values can affect the length returned."
        },
        "confidenceScore": {
          "type": "number",
          "format": "double",
          "description": "Confidence score between 0 and 1 of the extracted entity."
        },
        "assertion": {
          "type": "object",
          "$ref": "#/definitions/LanguageHealthcareAssertion"
        },
        "name": {
          "description": "Preferred name for the entity. Example: 'histologically' would have a 'name' of 'histologic'.",
          "type": "string"
        },
        "links": {
          "description": "Entity references in known data sources.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LanguageHealthcareEntityLink"
          }
        }
      },
      "required": [
        "text",
        "category",
        "offset",
        "length",
        "confidenceScore"
      ]
    },
    "LanguageHealthcareRelation": {
      "type": "object",
      "description": "Every relation is an entity graph of a certain relationType, where all entities are connected and have specific roles within the relation context.",
      "required": [
        "relationType",
        "entities"
      ],
      "properties": {
        "relationType": {
          "description": "Type of relation. Examples include: `DosageOfMedication` or 'FrequencyOfMedication', etc.",
          "type": "string",
          "enum": [
            "Abbreviation",
            "DirectionOfBodyStructure",
            "DirectionOfCondition",
            "DirectionOfExamination",
            "DirectionOfTreatment",
            "DosageOfMedication",
            "FormOfMedication",
            "FrequencyOfMedication",
            "FrequencyOfTreatment",
            "QualifierOfCondition",
            "RelationOfExamination",
            "RouteOfMedication",
            "TimeOfCondition",
            "TimeOfEvent",
            "TimeOfExamination",
            "TimeOfMedication",
            "TimeOfTreatment",
            "UnitOfCondition",
            "UnitOfExamination",
            "ValueOfCondition",
            "ValueOfExamination"
          ],
          "x-ms-enum": {
            "name": "relationType",
            "modelAsString": true
          }
        },
        "entities": {
          "description": "The entities in the relation.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LanguageHealthcareRelationEntity"
          }
        }
      }
    },
    "LanguageHealthcareAssertion": {
      "type": "object",
      "properties": {
        "conditionality": {
          "description": "Describes any conditionality on the entity.",
          "type": "string",
          "enum": [
            "hypothetical",
            "conditional"
          ],
          "x-ms-enum": {
            "name": "Conditionality",
            "modelAsString": false
          }
        },
        "certainty": {
          "description": "Describes the entities certainty and polarity.",
          "type": "string",
          "enum": [
            "positive",
            "positivePossible",
            "neutralPossible",
            "negativePossible",
            "negative"
          ],
          "x-ms-enum": {
            "name": "Certainty",
            "modelAsString": false
          }
        },
        "association": {
          "description": "Describes if the entity is the subject of the text or if it describes someone else.",
          "type": "string",
          "enum": [
            "subject",
            "other"
          ],
          "x-ms-enum": {
            "name": "Association",
            "modelAsString": false
          }
        }
      }
    },
    "LanguageHealthcareRelationEntity": {
      "type": "object",
      "required": [
        "ref",
        "role"
      ],
      "properties": {
        "ref": {
          "description": "Reference link object, using a JSON pointer RFC 6901 (URI Fragment Identifier Representation), pointing to the entity .",
          "type": "string"
        },
        "role": {
          "description": "Role of entity in the relationship. For example: 'CD20-positive diffuse large B-cell lymphoma' has the following entities with their roles in parenthesis:  CD20 (GeneOrProtein), Positive (Expression), diffuse large B-cell lymphoma (Diagnosis).",
          "type": "string"
        }
      }
    },
    "LanguageHealthcareEntityLink": {
      "type": "object",
      "required": [
        "dataSource",
        "id"
      ],
      "properties": {
        "dataSource": {
          "description": "Entity Catalog. Examples include: UMLS, CHV, MSH, etc.",
          "type": "string"
        },
        "id": {
          "description": "Entity id in the given source catalog.",
          "type": "string"
        }
      }
    },
    "LanguageSentimentAnalysisTaskParameters": {
      "type": "object",
      "description": "Supported parameters for a Sentiment Analysis task.",
      "properties": {
        "opinionMining": {
          "type": "boolean",
          "default": false
        },
        "stringIndexType": {
          "$ref": "#/definitions/LanguageStringIndexType"
        }
      }
    },
    "LanguageSentimentAnalysisLROTask": {
      "type": "object",
      "description": "An object representing the task definition for a Sentiment Analysis task.",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/LanguageSentimentAnalysisTaskParameters"
        },
        "kind": {
          "type": "string",
          "description": "Enumeration of supported long-running Text Analysis tasks.",
          "enum": [
            "SentimentAnalysis"
          ],
          "default": "SentimentAnalysis",
          "x-ms-visibility": "internal",
          "x-ms-enum": {
            "name": "AnalyzeTextLROTaskKind",
            "modelAsString": true
          }
        }
      },
      "required": [ "kind" ],
      "x-ms-discriminator-value": "SentimentAnalysis"
    },
    "LanguageSentimentTaskResult": {
      "type": "object",
      "properties": {
        "results": {
          "$ref": "#/definitions/LanguageSentimentResponse"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/LanguageAnalyzeTextTaskResult"
        }
      ],
      "required": [
        "results"
      ],
      "x-ms-discriminator-value": "SentimentAnalysisResults"
    },
    "LanguageSentimentResponse": {
      "type": "object",
      "properties": {
        "documents": {
          "type": "array",
          "description": "Sentiment analysis per document.",
          "items": {
            "$ref": "#/definitions/LanguageSentimentDocumentResult"
          }
        }
      },
      "required": [
        "documents"
      ]
    },
    "LanguageSentimentDocumentResult": {
      "type": "object",
      "properties": {
        "sentiment": {
          "type": "string",
          "description": "Predicted sentiment for document (Negative, Neutral, Positive, or Mixed).",
          "enum": [
            "positive",
            "neutral",
            "negative",
            "mixed"
          ],
          "x-ms-enum": {
            "name": "DocumentSentimentValue",
            "modelAsString": false
          }
        },
        "confidenceScores": {
          "description": "Document level sentiment confidence scores between 0 and 1 for each sentiment class.",
          "$ref": "#/definitions/LanguageSentimentConfidenceScorePerLabel"
        },
        "sentences": {
          "type": "array",
          "description": "Sentence level sentiment analysis.",
          "items": {
            "$ref": "#/definitions/LanguageSentenceSentiment"
          }
        },
        "id": {
          "type": "string",
          "description": "Unique, non-empty document identifier."
        }
      },
      "required": [
        "sentiment",
        "confidenceScores",
        "sentences",
        "id"
      ]
    },
    "LanguageSentimentConfidenceScorePerLabel": {
      "type": "object",
      "required": [
        "positive",
        "neutral",
        "negative"
      ],
      "properties": {
        "positive": {
          "type": "number",
          "format": "double",
          "description": "Confidence score for positive sentiment"
        },
        "neutral": {
          "type": "number",
          "format": "double",
          "description": "Confidence score for neutral sentiment"
        },
        "negative": {
          "type": "number",
          "format": "double",
          "description": "Confidence score for negative sentiment"
        }
      },
      "description": "Represents the confidence scores between 0 and 1 across all sentiment classes: positive, neutral, negative."
    },
    "LanguageSentenceSentiment": {
      "type": "object",
      "required": [
        "text",
        "sentiment",
        "confidenceScores",
        "offset",
        "length"
      ],
      "properties": {
        "text": {
          "type": "string",
          "description": "The sentence text."
        },
        "sentiment": {
          "type": "string",
          "description": "The predicted Sentiment for the sentence.",
          "enum": [
            "positive",
            "neutral",
            "negative"
          ],
          "x-ms-enum": {
            "name": "SentenceSentimentValue",
            "modelAsString": false
          }
        },
        "confidenceScores": {
          "description": "The sentiment confidence score between 0 and 1 for the sentence for all classes.",
          "$ref": "#/definitions/LanguageSentimentConfidenceScorePerLabel"
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "The sentence offset from the start of the document."
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "The length of the sentence."
        },
        "targets": {
          "type": "array",
          "description": "The array of sentence targets for the sentence.",
          "items": {
            "$ref": "#/definitions/LanguageSentenceTarget"
          }
        },
        "assessments": {
          "type": "array",
          "description": "The array of assessments for the sentence.",
          "items": {
            "$ref": "#/definitions/LanguageSentenceAssessment"
          }
        }
      }
    },
    "LanguageSentenceTarget": {
      "type": "object",
      "required": [
        "confidenceScores",
        "length",
        "offset",
        "relations",
        "sentiment",
        "text"
      ],
      "properties": {
        "sentiment": {
          "type": "string",
          "enum": [
            "positive",
            "mixed",
            "negative"
          ],
          "x-ms-enum": {
            "name": "TokenSentimentValue",
            "modelAsString": false
          },
          "description": "Targeted sentiment in the sentence."
        },
        "confidenceScores": {
          "description": "Target sentiment confidence scores for the target in the sentence.",
          "$ref": "#/definitions/LanguageTargetConfidenceScoreLabel"
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "The target offset from the start of the sentence."
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "The length of the target."
        },
        "text": {
          "type": "string",
          "description": "The target text detected."
        },
        "relations": {
          "type": "array",
          "description": "The array of either assessment or target objects which is related to the target.",
          "items": {
            "$ref": "#/definitions/LanguageTargetRelation"
          }
        }
      }
    },
    "LanguageSentenceAssessment": {
      "type": "object",
      "required": [
        "confidenceScores",
        "isNegated",
        "length",
        "offset",
        "sentiment",
        "text"
      ],
      "properties": {
        "sentiment": {
          "type": "string",
          "enum": [
            "positive",
            "mixed",
            "negative"
          ],
          "x-ms-enum": {
            "name": "TokenSentimentValue",
            "modelAsString": false
          },
          "description": "Assessment sentiment in the sentence."
        },
        "confidenceScores": {
          "description": "Assessment sentiment confidence scores in the sentence.",
          "$ref": "#/definitions/LanguageTargetConfidenceScoreLabel"
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "The assessment offset from the start of the sentence."
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "The length of the assessment."
        },
        "text": {
          "type": "string",
          "description": "The assessment text detected."
        },
        "isNegated": {
          "type": "boolean",
          "description": "The indicator representing if the assessment is negated."
        }
      }
    },
    "LanguageTargetRelation": {
      "type": "object",
      "required": [
        "ref",
        "relationType"
      ],
      "properties": {
        "relationType": {
          "type": "string",
          "enum": [
            "assessment",
            "target"
          ],
          "x-ms-enum": {
            "name": "TargetRelationType",
            "modelAsString": false
          },
          "description": "The type related to the target."
        },
        "ref": {
          "type": "string",
          "description": "The JSON pointer indicating the linked object."
        }
      }
    },
    "LanguageTargetConfidenceScoreLabel": {
      "type": "object",
      "required": [
        "negative",
        "positive"
      ],
      "properties": {
        "positive": {
          "type": "number",
          "format": "double",
          "description": "Confidence score for positive sentiment"
        },
        "negative": {
          "type": "number",
          "format": "double",
          "description": "Confidence score for negative sentiment"
        }
      },
      "description": "Represents the confidence scores across all sentiment classes: positive and negative."
    },
    "LanguageEntitiesTaskParameters": {
      "type": "object",
      "description": "Supported parameters for an Entity Recognition task.",
      "properties": {
        "stringIndexType": {
          "$ref": "#/definitions/LanguageStringIndexType"
        }
      }
    },
    "LanguageEntitiesLROTask": {
      "type": "object",
      "description": "An object representing the task definition for an Entities Recognition task.",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/LanguageEntitiesTaskParameters"
        },
        "kind": {
          "type": "string",
          "description": "Enumeration of supported long-running Text Analysis tasks.",
          "enum": [
            "EntityRecognition"
          ],
          "default": "EntityRecognition",
          "x-ms-visibility": "internal",
          "x-ms-enum": {
            "name": "AnalyzeTextLROTaskKind",
            "modelAsString": true
          }
        }
      },
      "required": [
        "kind"
      ],
      "x-ms-visibility": "internal",
      "x-ms-discriminator-value": "EntityRecognition"
    },
    "LanguageEntitiesTaskResult": {
      "type": "object",
      "properties": {
        "results": {
          "$ref": "#/definitions/LanguageEntitiesResult"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/LanguageAnalyzeTextTaskResult"
        }
      ],
      "required": [
        "results"
      ],
      "x-ms-discriminator-value": "EntityRecognitionResults"
    },
    "LanguageEntitiesResult": {
      "type": "object",
      "properties": {
        "documents": {
          "type": "array",
          "description": "Response by document",
          "items": {
            "$ref": "#/definitions/LanguageEntitiesDocumentResult"
          }
        }
      },
      "required": [
        "documents"
      ]
    },
    "LanguageEntitiesDocumentResult": {
      "type": "object",
      "properties": {
        "entities": {
          "type": "array",
          "description": "Recognized entities in the document.",
          "items": {
            "$ref": "#/definitions/LanguageEntity"
          }
        },
        "id": {
          "type": "string",
          "description": "Unique, non-empty document identifier."
        }
      },
      "required": [
        "entities",
        "id"
      ]
    },
    "LanguageEntity": {
      "type": "object",
      "required": [
        "text",
        "category",
        "offset",
        "length",
        "confidenceScore"
      ],
      "properties": {
        "text": {
          "type": "string",
          "description": "Entity text as appears in the request."
        },
        "category": {
          "type": "string",
          "description": "Entity type."
        },
        "subcategory": {
          "type": "string",
          "description": "(Optional) Entity sub type."
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "Start position for the entity text. Use of different 'stringIndexType' values can affect the offset returned."
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "Length for the entity text. Use of different 'stringIndexType' values can affect the length returned."
        },
        "confidenceScore": {
          "type": "number",
          "format": "double",
          "description": "Confidence score between 0 and 1 of the extracted entity."
        }
      }
    },
    "LanguageEntityLinkingTaskParameters": {
      "type": "object",
      "description": "Supported parameters for an Entity Linking task.",
      "properties": {
        "stringIndexType": {
          "$ref": "#/definitions/LanguageStringIndexType"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/LanguagePreBuiltTaskParameters_05_01"
        }
      ]
    },
    "LanguageEntityLinkingLROTask": {
      "type": "object",
      "description": "An object representing the task definition for an Entity Linking task.",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/LanguageEntityLinkingTaskParameters"
        },
        "kind": {
          "type": "string",
          "description": "Enumeration of supported long-running Text Analysis tasks.",
          "enum": [
            "EntityLinking"
          ],
          "default": "EntityLinking",
          "x-ms-visibility": "internal",
          "x-ms-enum": {
            "name": "AnalyzeTextLROTaskKind",
            "modelAsString": true
          }
        }
      },
      "required": [
        "kind"
      ],
      "x-ms-visibility": "internal",
      "x-ms-discriminator-value": "EntityLinking"
    },
    "LanguageEntityLinkingTaskResult": {
      "type": "object",
      "properties": {
        "results": {
          "$ref": "#/definitions/LanguageEntityLinkingResult"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/LanguageAnalyzeTextTaskResult"
        }
      ],
      "required": [
        "results"
      ],
      "x-ms-discriminator-value": "EntityLinkingResults"
    },
    "LanguageEntityLinkingResult": {
      "type": "object",
      "properties": {
        "documents": {
          "type": "array",
          "description": "Response by document",
          "items": {
            "$ref": "#/definitions/LanguageLinkedEntitiesDocumentResult"
          }
        }
      },
      "required": [
        "documents"
      ]
    },
    "LanguageLinkedEntitiesDocumentResult": {
      "type": "object",
      "required": [
        "entities",
        "id"
      ],
      "properties": {
        "entities": {
          "type": "array",
          "description": "Recognized well known entities in the document.",
          "items": {
            "$ref": "#/definitions/LanguageLinkedEntity"
          }
        },
        "id": {
          "type": "string",
          "description": "Unique, non-empty document identifier."
        }
      }
    },
    "LanguageLinkedEntity": {
      "type": "object",
      "required": [
        "name",
        "matches",
        "language",
        "url",
        "dataSource"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Entity Linking formal name."
        },
        "matches": {
          "type": "array",
          "description": "List of instances this entity appears in the text.",
          "items": {
            "$ref": "#/definitions/LanguageMatch"
          }
        },
        "language": {
          "type": "string",
          "description": "Language used in the data source."
        },
        "id": {
          "type": "string",
          "description": "Unique identifier of the recognized entity from the data source."
        },
        "url": {
          "type": "string",
          "description": "URL for the entity's page from the data source."
        },
        "dataSource": {
          "type": "string",
          "description": "Data source used to extract entity linking, such as Wiki/Bing etc."
        },
        "bingId": {
          "type": "string",
          "description": "Bing Entity Search API unique identifier of the recognized entity."
        }
      }
    },
    "LanguageMatch": {
      "type": "object",
      "required": [
        "confidenceScore",
        "text",
        "offset",
        "length"
      ],
      "properties": {
        "confidenceScore": {
          "type": "number",
          "format": "double",
          "description": "If a well known item is recognized, a decimal number denoting the confidence level between 0 and 1 will be returned."
        },
        "text": {
          "type": "string",
          "description": "Entity text as appears in the request."
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "Start position for the entity match text."
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "Length for the entity match text."
        }
      }
    },
    "LanguagePiiTaskParameters": {
      "type": "object",
      "description": "Supported parameters for a PII Entities Recognition task.",
      "properties": {
        "domain": {
          "$ref": "#/definitions/LanguagePiiDomain"
        },
        "piiCategories": {
          "$ref": "#/definitions/LanguagePiiCategories"
        },
        "stringIndexType": {
          "$ref": "#/definitions/LanguageStringIndexType"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/LanguagePreBuiltTaskParameters_05_01"
        }
      ]
    },
    "LanguagePiiLROTask": {
      "type": "object",
      "description": "An object representing the task definition for a PII Entities Recognition task.",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/LanguagePiiTaskParameters"
        },
        "kind": {
          "type": "string",
          "description": "Enumeration of supported long-running Text Analysis tasks.",
          "enum": [
            "PiiEntityRecognition"
          ],
          "default": "PiiEntityRecognition",
          "x-ms-visibility": "internal",
          "x-ms-enum": {
            "name": "AnalyzeTextLROTaskKind",
            "modelAsString": true
          }
        }
      },
      "required": [ "kind" ],
      "x-ms-discriminator-value": "PiiEntityRecognition"
    },
    "LanguagePiiTaskResult": {
      "type": "object",
      "properties": {
        "results": {
          "$ref": "#/definitions/LanguagePiiResult"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/LanguageAnalyzeTextTaskResult"
        }
      ],
      "required": [
        "results"
      ],
      "x-ms-discriminator-value": "PiiEntityRecognitionResults"
    },
    "LanguagePiiResult": {
      "type": "object",
      "properties": {
        "documents": {
          "type": "array",
          "description": "Response by document",
          "items": {
            "$ref": "#/definitions/LanguagePiiEntitiesDocumentResult"
          }
        }
      },
      "required": [
        "documents"
      ]
    },
    "LanguagePiiDomain": {
      "type": "string",
      "description": "The PII domain used for PII Entity Recognition.",
      "default": "none",
      "enum": [
        "phi",
        "none"
      ],
      "x-ms-enum": {
        "name": "PiiDomain",
        "modelAsString": true,
        "values": [
          {
            "name": "phi",
            "description": "Indicates that entities in the Personal Health Information domain should be redacted.",
            "value": "phi"
          },
          {
            "name": "none",
            "description": "Indicates that no domain is specified.",
            "value": "none"
          }
        ]
      }
    },
    "LanguagePiiEntitiesDocumentResult": {
      "type": "object",
      "properties": {
        "redactedText": {
          "type": "string",
          "description": "Returns redacted text."
        },
        "entities": {
          "type": "array",
          "description": "Recognized entities in the document.",
          "items": {
            "$ref": "#/definitions/LanguageEntity"
          }
        },
        "id": {
          "type": "string",
          "description": "Unique, non-empty document identifier."
        }
      },
      "required": [
        "redactedText",
        "entities",
        "id"
      ]
    },
    "LanguagePiiCategories": {
      "description": "(Optional) describes the PII categories to return",
      "items": {
        "type": "string",
        "x-ms-enum": {
          "name": "PiiCategory",
          "modelAsString": true
        },
        "enum": [
          "ABARoutingNumber",
          "ARNationalIdentityNumber",
          "AUBankAccountNumber",
          "AUDriversLicenseNumber",
          "AUMedicalAccountNumber",
          "AUPassportNumber",
          "AUTaxFileNumber",
          "AUBusinessNumber",
          "AUCompanyNumber",
          "ATIdentityCard",
          "ATTaxIdentificationNumber",
          "ATValueAddedTaxNumber",
          "AzureDocumentDBAuthKey",
          "AzureIAASDatabaseConnectionAndSQLString",
          "AzureIoTConnectionString",
          "AzurePublishSettingPassword",
          "AzureRedisCacheString",
          "AzureSAS",
          "AzureServiceBusString",
          "AzureStorageAccountKey",
          "AzureStorageAccountGeneric",
          "BENationalNumber",
          "BENationalNumberV2",
          "BEValueAddedTaxNumber",
          "BRCPFNumber",
          "BRLegalEntityNumber",
          "BRNationalIDRG",
          "BGUniformCivilNumber",
          "CABankAccountNumber",
          "CADriversLicenseNumber",
          "CAHealthServiceNumber",
          "CAPassportNumber",
          "CAPersonalHealthIdentification",
          "CASocialInsuranceNumber",
          "CLIdentityCardNumber",
          "CNResidentIdentityCardNumber",
          "CreditCardNumber",
          "HRIdentityCardNumber",
          "HRNationalIDNumber",
          "HRPersonalIdentificationNumber",
          "HRPersonalIdentificationOIBNumberV2",
          "CYIdentityCard",
          "CYTaxIdentificationNumber",
          "CZPersonalIdentityNumber",
          "CZPersonalIdentityV2",
          "DKPersonalIdentificationNumber",
          "DKPersonalIdentificationV2",
          "DrugEnforcementAgencyNumber",
          "EEPersonalIdentificationCode",
          "EUDebitCardNumber",
          "EUDriversLicenseNumber",
          "EUGPSCoordinates",
          "EUNationalIdentificationNumber",
          "EUPassportNumber",
          "EUSocialSecurityNumber",
          "EUTaxIdentificationNumber",
          "FIEuropeanHealthNumber",
          "FINationalID",
          "FINationalIDV2",
          "FIPassportNumber",
          "FRDriversLicenseNumber",
          "FRHealthInsuranceNumber",
          "FRNationalID",
          "FRPassportNumber",
          "FRSocialSecurityNumber",
          "FRTaxIdentificationNumber",
          "FRValueAddedTaxNumber",
          "DEDriversLicenseNumber",
          "DEPassportNumber",
          "DEIdentityCardNumber",
          "DETaxIdentificationNumber",
          "DEValueAddedNumber",
          "GRNationalIDCard",
          "GRNationalIDV2",
          "GRTaxIdentificationNumber",
          "HKIdentityCardNumber",
          "HUValueAddedNumber",
          "HUPersonalIdentificationNumber",
          "HUTaxIdentificationNumber",
          "INPermanentAccount",
          "INUniqueIdentificationNumber",
          "IDIdentityCardNumber",
          "InternationalBankingAccountNumber",
          "IEPersonalPublicServiceNumber",
          "IEPersonalPublicServiceNumberV2",
          "ILBankAccountNumber",
          "ILNationalID",
          "ITDriversLicenseNumber",
          "ITFiscalCode",
          "ITValueAddedTaxNumber",
          "JPBankAccountNumber",
          "JPDriversLicenseNumber",
          "JPPassportNumber",
          "JPResidentRegistrationNumber",
          "JPSocialInsuranceNumber",
          "JPMyNumberCorporate",
          "JPMyNumberPersonal",
          "JPResidenceCardNumber",
          "LVPersonalCode",
          "LTPersonalCode",
          "LUNationalIdentificationNumberNatural",
          "LUNationalIdentificationNumberNonNatural",
          "MYIdentityCardNumber",
          "MTIdentityCardNumber",
          "MTTaxIDNumber",
          "NLCitizensServiceNumber",
          "NLCitizensServiceNumberV2",
          "NLTaxIdentificationNumber",
          "NLValueAddedTaxNumber",
          "NZBankAccountNumber",
          "NZDriversLicenseNumber",
          "NZInlandRevenueNumber",
          "NZMinistryOfHealthNumber",
          "NZSocialWelfareNumber",
          "NOIdentityNumber",
          "PHUnifiedMultiPurposeIDNumber",
          "PLIdentityCard",
          "PLNationalID",
          "PLNationalIDV2",
          "PLPassportNumber",
          "PLTaxIdentificationNumber",
          "PLREGONNumber",
          "PTCitizenCardNumber",
          "PTCitizenCardNumberV2",
          "PTTaxIdentificationNumber",
          "ROPersonalNumericalCode",
          "RUPassportNumberDomestic",
          "RUPassportNumberInternational",
          "SANationalID",
          "SGNationalRegistrationIdentityCardNumber",
          "SKPersonalNumber",
          "SITaxIdentificationNumber",
          "SIUniqueMasterCitizenNumber",
          "ZAIdentificationNumber",
          "KRResidentRegistrationNumber",
          "ESDNI",
          "ESSocialSecurityNumber",
          "ESTaxIdentificationNumber",
          "SQLServerConnectionString",
          "SENationalID",
          "SENationalIDV2",
          "SEPassportNumber",
          "SETaxIdentificationNumber",
          "SWIFTCode",
          "CHSocialSecurityNumber",
          "TWNationalID",
          "TWPassportNumber",
          "TWResidentCertificate",
          "THPopulationIdentificationCode",
          "TRNationalIdentificationNumber",
          "UKDriversLicenseNumber",
          "UKElectoralRollNumber",
          "UKNationalHealthNumber",
          "UKNationalInsuranceNumber",
          "UKUniqueTaxpayerNumber",
          "USUKPassportNumber",
          "USBankAccountNumber",
          "USDriversLicenseNumber",
          "USIndividualTaxpayerIdentification",
          "USSocialSecurityNumber",
          "UAPassportNumberDomestic",
          "UAPassportNumberInternational",
          "Organization",
          "Email",
          "URL",
          "Age",
          "PhoneNumber",
          "IPAddress",
          "Date",
          "Person",
          "Address",
          "All",
          "Default"
        ]
      },
      "type": "array",
      "uniqueItems": true
    },
    "LanguageKeyPhraseTaskParameters": {
      "type": "object",
      "description": "Supported parameters for a Key Phrase Extraction task.",
      "properties": {
        "modelVersion": {
          "type": "string",
          "default": "2022-05-01",
          "x-ms-visibility": "internal"
        },
        "loggingOptOut": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "LanguageKeyPhraseLROTask": {
      "type": "object",
      "description": "An object representing the task definition for a Key Phrase Extraction task.",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/LanguageKeyPhraseTaskParameters"
        },
        "kind": {
          "type": "string",
          "enum": [
            "KeyPhraseExtraction"
          ],
          "default": "KeyPhraseExtraction",
          "x-ms-visibility": "internal",
          "x-ms-enum": {
            "name": "AnalyzeTextLROTaskKind",
            "modelAsString": true
          }
        }
      },
      "required": [ "kind" ],
      "x-ms-visibility": "internal",
      "x-ms-discriminator-value": "KeyPhraseExtraction"
    },
    "LanguageKeyPhraseTaskResult": {
      "type": "object",
      "properties": {
        "results": {
          "$ref": "#/definitions/LanguageKeyPhraseResult"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/LanguageAnalyzeTextTaskResult"
        }
      ],
      "required": [
        "results"
      ],
      "x-ms-discriminator-value": "KeyPhraseExtractionResults"
    },
    "LanguageKeyPhraseResult": {
      "type": "object",
      "properties": {
        "documents": {
          "type": "array",
          "description": "Response by document",
          "items": {
            "$ref": "#/definitions/LanguageKeyPhrasesDocumentResult"
          }
        }
      },
      "required": [
        "documents"
      ]
    },
    "LanguageKeyPhrasesDocumentResult": {
      "type": "object",
      "properties": {
        "keyPhrases": {
          "type": "array",
          "description": "A list of representative words or phrases. The number of key phrases returned is proportional to the number of words in the input document.",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "string",
          "description": "Unique, non-empty document identifier."
        }
      },
      "required": [
        "keyPhrases",
        "id"
      ]
    },
    "LanguageDetectionTaskParameters": {
      "type": "object",
      "description": "Supported parameters for a Language Detection task.",
      "allOf": [
        {
          "$ref": "#/definitions/LanguagePreBuiltTaskParameters_05_01"
        }
      ]
    },
    "LanguageDetectionTaskResult": {
      "type": "object",
      "properties": {
        "results": {
          "$ref": "#/definitions/LanguageDetectionResult"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/LanguageAnalyzeTextTaskResult"
        }
      ],
      "required": [
        "results"
      ],
      "x-ms-discriminator-value": "LanguageDetectionResults"
    },
    "LanguageDetectionResult": {
      "type": "object",
      "properties": {
        "documents": {
          "type": "array",
          "description": "Response by document",
          "items": {
            "$ref": "#/definitions/LanguageDetectionDocumentResult"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/LanguagePreBuiltResult"
        }
      ],
      "required": [
        "documents"
      ]
    },
    "LanguageDetectionDocumentResult": {
      "type": "object",
      "properties": {
        "detectedLanguage": {
          "description": "Detected Language.",
          "$ref": "#/definitions/LanguageDetectedLanguage"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/LanguageDocumentResult"
        }
      ],
      "required": [
        "detectedLanguage"
      ]
    },
    "LanguageDetectedLanguage": {
      "type": "object",
      "required": [
        "name",
        "iso6391Name",
        "confidenceScore"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Long name of a detected language (e.g. English, French)."
        },
        "iso6391Name": {
          "type": "string",
          "description": "A two letter representation of the detected language according to the ISO 639-1 standard (e.g. en, fr)."
        },
        "confidenceScore": {
          "type": "number",
          "format": "double",
          "description": "A confidence score between 0 and 1. Scores close to 1 indicate 100% certainty that the identified language is true."
        }
      }
    },
    "LanguageAnalyzeTextJobState": {
      "properties": {
        "tasks": {
          "properties": {
            "completed": {
              "type": "integer",
              "x-ms-visibility": "internal"
            },
            "failed": {
              "type": "integer",
              "x-ms-visibility": "internal"
            },
            "inProgress": {
              "type": "integer",
              "x-ms-visibility": "internal"
            },
            "total": {
              "type": "integer",
              "x-ms-visibility": "internal"
            },
            "taskResult": {
              "$ref": "#/definitions/LanguageAnalyzeTextLROResult"
            }
          },
          "required": [
            "total",
            "completed",
            "failed",
            "inProgress"
          ],
          "type": "object"
        }
      },
      "required": [
        "tasks"
      ],
      "type": "object"
    },
    "LanguageAnalyzeTextJobState_KPE": {
      "type": "object",
      "properties": {
        "tasks": {
          "type": "object",
          "properties": {
            "completed": {
              "type": "integer",
              "x-ms-visibility": "internal"
            },
            "failed": {
              "type": "integer",
              "x-ms-visibility": "internal"
            },
            "inProgress": {
              "type": "integer",
              "x-ms-visibility": "internal"
            },
            "total": {
              "type": "integer",
              "x-ms-visibility": "internal"
            },
            "taskResult": {
              "$ref": "#/definitions/LanguageKeyPhraseExtractionLROResult"
            }
          },
          "required": [
            "total",
            "completed",
            "failed",
            "inProgress"
          ]
        }
      },
      "required": [
        "tasks"
      ]
    },
    "LanguageAnalyzeTextJobState_CNER": {
      "type": "object",
      "properties": {
        "tasks": {
          "type": "object",
          "properties": {
            "completed": {
              "type": "integer",
              "x-ms-visibility": "internal"
            },
            "failed": {
              "type": "integer",
              "x-ms-visibility": "internal"
            },
            "inProgress": {
              "type": "integer",
              "x-ms-visibility": "internal"
            },
            "total": {
              "type": "integer",
              "x-ms-visibility": "internal"
            },
            "taskResult": {
              "$ref": "#/definitions/LanguageCustomEntityRecognitionLROResult"
            }
          },
          "required": [
            "total",
            "completed",
            "failed",
            "inProgress"
          ]
        }
      },
      "required": [
        "tasks"
      ]
    },
    "LanguageAnalyzeTextJobState_CSLC": {
      "type": "object",
      "properties": {
        "tasks": {
          "type": "object",
          "properties": {
            "completed": {
              "type": "integer",
              "x-ms-visibility": "internal"
            },
            "failed": {
              "type": "integer",
              "x-ms-visibility": "internal"
            },
            "inProgress": {
              "type": "integer",
              "x-ms-visibility": "internal"
            },
            "total": {
              "type": "integer",
              "x-ms-visibility": "internal"
            },
            "taskResult": {
              "$ref": "#/definitions/LanguageCustomSingleLabelClassificationLROResult"
            }
          },
          "required": [
            "total",
            "completed",
            "failed",
            "inProgress"
          ]
        }
      },
      "required": [
        "tasks"
      ]
    },
    "LanguageAnalyzeTextJobState_CMLC": {
      "type": "object",
      "properties": {
        "tasks": {
          "type": "object",
          "properties": {
            "completed": {
              "type": "integer",
              "x-ms-visibility": "internal"
            },
            "failed": {
              "type": "integer",
              "x-ms-visibility": "internal"
            },
            "inProgress": {
              "type": "integer",
              "x-ms-visibility": "internal"
            },
            "total": {
              "type": "integer",
              "x-ms-visibility": "internal"
            },
            "taskResult": {
              "$ref": "#/definitions/LanguageCustomMultiLabelClassificationLROResult"
            }
          },
          "required": [
            "total",
            "completed",
            "failed",
            "inProgress"
          ]
        }
      },
      "required": [
        "tasks"
      ]
    },
    "LanguageAnalyzeTextJobState_Entites": {
      "type": "object",
      "properties": {
        "tasks": {
          "type": "object",
          "properties": {
            "completed": {
              "type": "integer",
              "x-ms-visibility": "internal"
            },
            "failed": {
              "type": "integer",
              "x-ms-visibility": "internal"
            },
            "inProgress": {
              "type": "integer",
              "x-ms-visibility": "internal"
            },
            "total": {
              "type": "integer",
              "x-ms-visibility": "internal"
            },
            "taskResult": {
              "$ref": "#/definitions/LanguageEntityRecognitionLROResult"
            }
          },
          "required": [
            "total",
            "completed",
            "failed",
            "inProgress"
          ]
        }
      },
      "required": [
        "tasks"
      ]
    },
    "LanguageAnalyzeTextJobState_Pii": {
      "type": "object",
      "properties": {
        "tasks": {
          "type": "object",
          "properties": {
            "completed": {
              "type": "integer",
              "x-ms-visibility": "internal"
            },
            "failed": {
              "type": "integer",
              "x-ms-visibility": "internal"
            },
            "inProgress": {
              "type": "integer",
              "x-ms-visibility": "internal"
            },
            "total": {
              "type": "integer",
              "x-ms-visibility": "internal"
            },
            "taskResult": {
              "$ref": "#/definitions/LanguagePiiEntityRecognitionLROResult"
            }
          },
          "required": [
            "total",
            "completed",
            "failed",
            "inProgress"
          ]
        }
      },
      "required": [
        "tasks"
      ]
    },
    "LanguageAnalyzeTextJobState_Sentiment": {
      "type": "object",
      "properties": {
        "tasks": {
          "type": "object",
          "properties": {
            "completed": {
              "type": "integer",
              "x-ms-visibility": "internal"
            },
            "failed": {
              "type": "integer",
              "x-ms-visibility": "internal"
            },
            "inProgress": {
              "type": "integer",
              "x-ms-visibility": "internal"
            },
            "total": {
              "type": "integer",
              "x-ms-visibility": "internal"
            },
            "taskResult": {
              "$ref": "#/definitions/LanguageSentimentLROResult"
            }
          },
          "required": [
            "total",
            "completed",
            "failed",
            "inProgress"
          ]
        }
      },
      "required": [
        "tasks"
      ]
    },
    "LanguageAnalyzeTextJobState_HealthCare": {
      "type": "object",
      "properties": {
        "tasks": {
          "type": "object",
          "properties": {
            "completed": {
              "type": "integer",
              "x-ms-visibility": "internal"
            },
            "failed": {
              "type": "integer",
              "x-ms-visibility": "internal"
            },
            "inProgress": {
              "type": "integer",
              "x-ms-visibility": "internal"
            },
            "total": {
              "type": "integer",
              "x-ms-visibility": "internal"
            },
            "taskResult": {
              "$ref": "#/definitions/LanguageHealthcareLROResult"
            }
          },
          "required": [
            "total",
            "completed",
            "failed",
            "inProgress"
          ]
        }
      },
      "required": [
        "tasks"
      ]
    },
    "LanguageAnalyzeTextJobState_ExtractiveSummarization": {
      "type": "object",
      "properties": {
        "tasks": {
          "type": "object",
          "properties": {
            "completed": {
              "type": "integer",
              "x-ms-visibility": "internal"
            },
            "failed": {
              "type": "integer",
              "x-ms-visibility": "internal"
            },
            "inProgress": {
              "type": "integer",
              "x-ms-visibility": "internal"
            },
            "total": {
              "type": "integer",
              "x-ms-visibility": "internal"
            },
            "taskResult": {
              "$ref": "#/definitions/ExtractiveSummarizationLROResult"
            }
          },
          "required": [
            "total",
            "completed",
            "failed",
            "inProgress"
          ]
        }
      },
      "required": [
        "tasks"
      ]
    },
    "LanguageAnalyzeTextJobState_AbstractiveSummarization": {
      "type": "object",
      "properties": {
        "tasks": {
          "type": "object",
          "properties": {
            "completed": {
              "type": "integer",
              "x-ms-visibility": "internal"
            },
            "failed": {
              "type": "integer",
              "x-ms-visibility": "internal"
            },
            "inProgress": {
              "type": "integer",
              "x-ms-visibility": "internal"
            },
            "total": {
              "type": "integer",
              "x-ms-visibility": "internal"
            },
            "taskResult": {
              "$ref": "#/definitions/AbstractiveSummarizationLROResult"
            }
          },
          "required": [
            "total",
            "completed",
            "failed",
            "inProgress"
          ]
        }
      },
      "required": [
        "tasks"
      ]
    },
    "LanguageAnalyzeTextJobState_EntityLinking": {
      "type": "object",
      "properties": {
        "tasks": {
          "type": "object",
          "properties": {
            "completed": {
              "type": "integer",
              "x-ms-visibility": "internal"
            },
            "failed": {
              "type": "integer",
              "x-ms-visibility": "internal"
            },
            "inProgress": {
              "type": "integer",
              "x-ms-visibility": "internal"
            },
            "total": {
              "type": "integer",
              "x-ms-visibility": "internal"
            },
            "taskResult": {
              "$ref": "#/definitions/LanguageEntityLinkingLROResult"
            }
          },
          "required": [
            "total",
            "completed",
            "failed",
            "inProgress"
          ]
        }
      },
      "required": [
        "tasks"
      ]
    },
    "LanguageJobErrors": {
      "properties": {
        "errors": {
          "items": {
            "$ref": "#/definitions/LanguageError"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "LanguageJobState": {
      "properties": {
        "displayName": {
          "type": "string"
        },
        "createdDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "expirationDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "jobId": {
          "type": "string"
        },
        "lastUpdatedDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "enum": [
            "notStarted",
            "running",
            "succeeded",
            "partiallyCompleted",
            "failed",
            "cancelled",
            "cancelling"
          ],
          "type": "string",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "State"
          }
        },
        "errors": {
          "items": {
            "$ref": "#/definitions/LanguageError"
          },
          "type": "array"
        },
        "nextLink": {
          "type": "string"
        }
      },
      "required": [
        "jobId",
        "lastUpdatedDateTime",
        "createdDateTime",
        "status"
      ]
    },
    "LanguageAnalyzeTextJobStatistics": {
      "properties": {
        "statistics": {
          "$ref": "#/definitions/LanguageRequestStatistics"
        }
      },
      "type": "object"
    },
    "LanguageTasksState": {
      "properties": {
        "tasks": {
          "properties": {
            "completed": {
              "type": "integer"
            },
            "failed": {
              "type": "integer"
            },
            "inProgress": {
              "type": "integer"
            },
            "total": {
              "type": "integer"
            },
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LanguageAnalyzeTextLROResult"
              }
            }
          },
          "required": [
            "total",
            "completed",
            "failed",
            "inProgress"
          ],
          "type": "object"
        }
      },
      "required": [
        "tasks"
      ],
      "type": "object"
    },
    "LanguageTaskState": {
      "properties": {
        "lastUpdateDateTime": {
          "format": "date-time",
          "type": "string"
        },
        "status": {
          "enum": [
            "notStarted",
            "running",
            "succeeded",
            "failed",
            "cancelled",
            "cancelling"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "State"
          }
        }
      },
      "required": [
        "status",
        "lastUpdateDateTime"
      ],
      "type": "object"
    },
    "LanguageAnalyzeTextLROResult": {
      "type": "object",
      "discriminator": "kind",
      "properties": {
        "kind": {
          "$ref": "#/definitions/LanguageAnalyzeTextLROResultsKind"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/LanguageTaskState"
        },
        {
          "$ref": "#/definitions/LanguageTaskIdentifier"
        }
      ],
      "required": [
        "kind"
      ]
    },
    "LanguageEntityRecognitionLROResult": {
      "type": "object",
      "properties": {
        "results": {
          "$ref": "#/definitions/LanguageEntitiesResult"
        }
      },
      "required": [
        "results"
      ],
      "x-ms-discriminator-value": "EntityRecognitionLROResults"
    },
    "LanguageCustomEntityRecognitionLROResult": {
      "type": "object",
      "properties": {
        "results": {
          "$ref": "#/definitions/LanguageCustomEntitiesResult"
        }
      },
      "required": [
        "results"
      ],
      "x-ms-discriminator-value": "CustomEntityRecognitionLROResults"
    },
    "LanguageCustomSingleLabelClassificationLROResult": {
      "type": "object",
      "properties": {
        "results": {
          "$ref": "#/definitions/LanguageCustomLabelClassificationResult"
        }
      },
      "required": [
        "results"
      ],
      "x-ms-discriminator-value": "CustomSingleLabelClassificationLROResults"
    },
    "LanguageCustomMultiLabelClassificationLROResult": {
      "type": "object",
      "properties": {
        "results": {
          "$ref": "#/definitions/LanguageCustomLabelClassificationResult"
        }
      },
      "required": [
        "results"
      ],
      "x-ms-discriminator-value": "CustomMultiLabelClassificationLROResults"
    },
    "LanguageEntityLinkingLROResult": {
      "type": "object",
      "properties": {
        "results": {
          "$ref": "#/definitions/LanguageEntityLinkingResult"
        }
      },
      "required": [
        "results"
      ],
      "x-ms-discriminator-value": "EntityLinkingLROResults"
    },
    "LanguagePiiEntityRecognitionLROResult": {
      "type": "object",
      "properties": {
        "results": {
          "$ref": "#/definitions/LanguagePiiResult"
        }
      },
      "required": [
        "results"
      ],
      "x-ms-discriminator-value": "PiiEntityRecognitionLROResults"
    },
    "LanguageHealthcareLROResult": {
      "type": "object",
      "properties": {
        "results": {
          "$ref": "#/definitions/LanguageHealthcareResult"
        }
      },
      "required": [
        "results"
      ],
      "x-ms-discriminator-value": "HealthcareLROResults"
    },
    "LanguageSentimentLROResult": {
      "type": "object",
      "properties": {
        "results": {
          "$ref": "#/definitions/LanguageSentimentResponse"
        }
      },
      "required": [
        "results"
      ],
      "x-ms-discriminator-value": "SentimentAnalysisLROResults"
    },
    "LanguageKeyPhraseExtractionLROResult": {
      "type": "object",
      "properties": {
        "results": {
          "$ref": "#/definitions/LanguageKeyPhraseResult"
        }
      },
      "required": [
        "results"
      ],
      "x-ms-discriminator-value": "KeyPhraseExtractionLROResults"
    },
    "LanguageDocumentResponse": {
      "type": "object",
      "properties": {}
    },
    "LanguageDocumentResult": {
      "type": "object",
      "required": [
        "id",
        "warnings"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique, non-empty document identifier."
        },
        "warnings": {
          "type": "array",
          "description": "Warnings encountered while processing document.",
          "items": {
            "$ref": "#/definitions/LanguageDocumentWarning"
          }
        },
        "statistics": {
          "description": "if showStats=true was specified in the request this field will contain information about the document payload.",
          "$ref": "#/definitions/LanguageDocumentStatistics"
        }
      }
    },
    "LanguageDocumentError": {
      "type": "object",
      "required": [
        "id",
        "error"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Document Id."
        },
        "error": {
          "type": "object",
          "description": "Document Error.",
          "$ref": "#/definitions/LanguageError"
        }
      }
    },
    "LanguageDocumentWarning": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "LongWordsInDocument",
            "DocumentTruncated"
          ],
          "x-ms-enum": {
            "name": "WarningCodeValue",
            "modelAsString": true
          },
          "description": "Error code."
        },
        "message": {
          "type": "string",
          "description": "Warning message."
        },
        "targetRef": {
          "type": "string",
          "description": "A JSON pointer reference indicating the target object."
        }
      }
    },
    "LanguageDocumentStatistics": {
      "type": "object",
      "required": [
        "charactersCount",
        "transactionsCount"
      ],
      "properties": {
        "charactersCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of text elements recognized in the document."
        },
        "transactionsCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of transactions for the document."
        }
      },
      "description": "if showStats=true was specified in the request this field will contain information about the document payload."
    },
    "LanguageRequestStatistics": {
      "type": "object",
      "required": [
        "documentsCount",
        "validDocumentsCount",
        "erroneousDocumentsCount",
        "transactionsCount"
      ],
      "properties": {
        "documentsCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of documents submitted in the request."
        },
        "validDocumentsCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of valid documents. This excludes empty, over-size limit or non-supported languages documents."
        },
        "erroneousDocumentsCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of invalid documents. This includes empty, over-size limit or non-supported languages documents."
        },
        "transactionsCount": {
          "type": "integer",
          "format": "int64",
          "description": "Number of transactions for the request."
        }
      },
      "description": "if showStats=true was specified in the request this field will contain information about the request payload."
    },
    "LanguageMultiLanguageInput": {
      "type": "object",
      "description": "Contains an input document to be analyzed by the service.",
      "required": [
        "id",
        "text"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "A unique, non-empty document identifier."
        },
        "text": {
          "type": "string",
          "description": "The input text to process."
        },
        "language": {
          "type": "string",
          "description": "(Optional) This is the 2 letter ISO 639-1 representation of a language. For example, use \"en\" for English; \"es\" for Spanish etc. If not set, use \"en\" for English as default."
        }
      }
    },
    "LanguageDetectionInput": {
      "type": "object",
      "required": [
        "id",
        "text"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique, non-empty document identifier."
        },
        "text": {
          "type": "string"
        },
        "countryHint": {
          "type": "string"
        }
      }
    },
    "LanguageErrorResponse": {
      "type": "object",
      "description": "Error response.",
      "additionalProperties": false,
      "properties": {
        "error": {
          "description": "The error object.",
          "$ref": "#/definitions/LanguageError"
        }
      },
      "required": [
        "error"
      ]
    },
    "LanguageError": {
      "type": "object",
      "description": "The error object.",
      "additionalProperties": true,
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "description": "One of a server-defined set of error codes.",
          "$ref": "#/definitions/LanguageErrorCode"
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "description": "An array of details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/LanguageError"
          }
        },
        "innererror": {
          "description": "An object containing more specific information than the current object about the error.",
          "$ref": "#/definitions/LanguageInnerErrorModel"
        }
      }
    },
    "LanguageInnerErrorModel": {
      "type": "object",
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "additionalProperties": false,
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "description": "One of a server-defined set of error codes.",
          "$ref": "#/definitions/LanguageInnerErrorCode"
        },
        "message": {
          "type": "string",
          "description": "Error message."
        },
        "details": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Error details."
        },
        "target": {
          "type": "string",
          "description": "Error target."
        },
        "innererror": {
          "description": "An object containing more specific information than the current object about the error.",
          "$ref": "#/definitions/LanguageInnerErrorModel"
        }
      }
    },
    "LanguageErrorCode": {
      "type": "string",
      "description": "Human-readable error code.",
      "x-ms-enum": {
        "name": "ErrorCode",
        "modelAsString": true
      },
      "enum": [
        "InvalidRequest",
        "InvalidArgument",
        "Unauthorized",
        "Forbidden",
        "NotFound",
        "ProjectNotFound",
        "OperationNotFound",
        "AzureCognitiveSearchNotFound",
        "AzureCognitiveSearchIndexNotFound",
        "TooManyRequests",
        "AzureCognitiveSearchThrottling",
        "AzureCognitiveSearchIndexLimitReached",
        "InternalServerError",
        "ServiceUnavailable",
        "Timeout",
        "QuotaExceeded",
        "Conflict",
        "Warning"
      ]
    },
    "LanguageInnerErrorCode": {
      "type": "string",
      "description": "Human-readable error code.",
      "x-ms-enum": {
        "name": "InnerErrorCode",
        "modelAsString": true
      },
      "enum": [
        "InvalidRequest",
        "InvalidParameterValue",
        "KnowledgeBaseNotFound",
        "AzureCognitiveSearchNotFound",
        "AzureCognitiveSearchThrottling",
        "ExtractionFailure",
        "InvalidRequestBodyFormat",
        "EmptyRequest",
        "MissingInputDocuments",
        "InvalidDocument",
        "ModelVersionIncorrect",
        "InvalidDocumentBatch",
        "UnsupportedLanguageCode",
        "InvalidCountryHint"
      ]
    },
    "Language": {
      "type": "string",
      "description": "Language of the text records. This is BCP-47 representation of a language. For example, use \"en\" for English; \"es\" for Spanish etc. If not set, use \"en\" for English as default."
    },
    "LanguageStringIndexType": {
      "type": "string",
      "description": "Specifies the method used to interpret string offsets.  Defaults to Text Elements (Graphemes) according to Unicode v8.0.0. For additional information see https://aka.ms/text-analytics-offsets.",
      "default": "TextElements_v8",
      "x-ms-visibility": "internal",
      "enum": [
        "TextElements_v8",
        "UnicodeCodePoint",
        "Utf16CodeUnit"
      ],
      "x-ms-enum": {
        "name": "StringIndexType",
        "modelAsString": true,
        "values": [
          {
            "value": "TextElements_v8",
            "description": "Returned offset and length values will correspond to TextElements (Graphemes and Grapheme clusters) confirming to the Unicode 8.0.0 standard. Use this option if your application is written in .Net Framework or .Net Core and you will be using StringInfo."
          },
          {
            "value": "UnicodeCodePoint",
            "description": "Returned offset and length values will correspond to Unicode code points. Use this option if your application is written in a language that support Unicode, for example Python."
          },
          {
            "value": "Utf16CodeUnit",
            "description": "Returned offset and length values will correspond to UTF-16 code units. Use this option if your application is written in a language that support Unicode, for example Java, JavaScript."
          }
        ]
      }
    },
    "LanguageAnswersResult": {
      "type": "object",
      "description": "Represents List of Question Answers.",
      "additionalProperties": false,
      "properties": {
        "answers": {
          "type": "array",
          "description": "Represents Answer Result list.",
          "items": {
            "$ref": "#/definitions/LanguageKnowledgeBaseAnswer"
          }
        }
      }
    },
    "LanguageKnowledgeBaseAnswer": {
      "type": "object",
      "description": "Represents knowledge base answer.",
      "additionalProperties": false,
      "properties": {
        "questions": {
          "type": "array",
          "description": "List of questions associated with the answer.",
          "items": {
            "type": "string"
          }
        },
        "answer": {
          "type": "string",
          "description": "Answer text."
        },
        "confidenceScore": {
          "type": "number",
          "format": "double",
          "x-ms-client-name": "confidence",
          "description": "Answer confidence score, value ranges from 0 to 1.",
          "maximum": 1,
          "minimum": 0
        },
        "id": {
          "type": "integer",
          "x-ms-client-name": "qnaId",
          "description": "ID of the QnA result.",
          "format": "int32"
        },
        "source": {
          "type": "string",
          "description": "Source of QnA result."
        },
        "metadata": {
          "type": "object",
          "description": "Metadata associated with the answer, useful to categorize or filter question answers.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "dialog": {
          "type": "object",
          "$ref": "#/definitions/LanguageKnowledgeBaseAnswerDialog"
        },
        "answerSpan": {
          "type": "object",
          "x-ms-client-name": "shortAnswer",
          "description": "Answer span object of QnA with respect to user's question.",
          "$ref": "#/definitions/LanguageAnswerSpan"
        }
      }
    },
    "LanguageKnowledgeBaseAnswerDialog": {
      "type": "object",
      "description": "Dialog associated with Answer.",
      "properties": {
        "isContextOnly": {
          "type": "boolean",
          "description": "To mark if a prompt is relevant only with a previous question or not. If true, do not include this QnA as search result for queries without context; otherwise, if false, ignores context and includes this QnA in search result."
        },
        "prompts": {
          "type": "array",
          "description": "List of prompts associated with the answer.",
          "maxItems": 20,
          "items": {
            "$ref": "#/definitions/LanguageKnowledgeBaseAnswerPrompt"
          }
        }
      }
    },
    "LanguageKnowledgeBaseAnswerPrompt": {
      "type": "object",
      "description": "Prompt for an answer.",
      "properties": {
        "displayOrder": {
          "type": "integer",
          "description": "Index of the prompt - used in ordering of the prompts.",
          "format": "int32"
        },
        "qnaId": {
          "type": "integer",
          "description": "QnA ID corresponding to the prompt.",
          "format": "int32"
        },
        "displayText": {
          "type": "string",
          "description": "Text displayed to represent a follow up question prompt.",
          "maxLength": 200
        }
      }
    },
    "LanguageAnswerSpan": {
      "type": "object",
      "description": "Answer span object of QnA.",
      "additionalProperties": false,
      "properties": {
        "text": {
          "type": "string",
          "description": "Predicted text of answer span."
        },
        "confidenceScore": {
          "type": "number",
          "x-ms-client-name": "confidence",
          "description": "Predicted score of answer span, value ranges from 0 to 1.",
          "format": "double",
          "maximum": 1,
          "minimum": 0
        },
        "offset": {
          "type": "integer",
          "description": "The answer span offset from the start of answer.",
          "format": "int32"
        },
        "length": {
          "type": "integer",
          "description": "The length of the answer span.",
          "format": "int32"
        }
      }
    },
    "LanguageAnswersOptions": {
      "type": "object",
      "description": "Parameters to query a knowledge base.",
      "additionalProperties": false,
      "properties": {
        "qnaId": {
          "type": "integer",
          "description": "Exact QnA ID to fetch from the knowledge base, this field takes priority over question.",
          "format": "int32"
        },
        "question": {
          "type": "string",
          "description": "User question to query against the knowledge base."
        },
        "top": {
          "type": "integer",
          "description": "Max number of answers to be returned for the question.",
          "format": "int32"
        },
        "userId": {
          "type": "string",
          "description": "Unique identifier for the user."
        },
        "confidenceScoreThreshold": {
          "type": "number",
          "format": "double",
          "x-ms-client-name": "confidenceThreshold",
          "description": "Minimum threshold score for answers, value ranges from 0 to 1.",
          "maximum": 1,
          "minimum": 0
        },
        "context": {
          "x-ms-client-name": "answerContext",
          "description": "Context object with previous QnA's information.",
          "$ref": "#/definitions/LanguageKnowledgeBaseAnswerContext"
        },
        "rankerType": {
          "type": "string",
          "x-ms-client-name": "rankerKind",
          "description": "Type of ranker to be used.",
          "x-ms-enum": {
            "name": "RankerKind",
            "modelAsString": true,
            "values": [
              {
                "value": "QuestionOnly",
                "description": "Question only ranker."
              },
              {
                "value": "Default",
                "description": "Default ranker."
              }
            ]
          },
          "enum": [
            "Default",
            "QuestionOnly"
          ]
        },
        "filters": {
          "description": "Filter QnAs based on given metadata list and knowledge base sources.",
          "$ref": "#/definitions/LanguageQueryFilters"
        },
        "answerSpanRequest": {
          "x-ms-client-name": "shortAnswerOptions",
          "description": "To configure Answer span prediction feature.",
          "$ref": "#/definitions/LanguageShortAnswerOptions"
        },
        "includeUnstructuredSources": {
          "type": "boolean",
          "description": "(Optional) Flag to enable Query over Unstructured Sources."
        }
      }
    },
    "LanguageKnowledgeBaseAnswerContext": {
      "type": "object",
      "description": "Context object with previous QnA's information.",
      "additionalProperties": false,
      "required": [
        "previousQnaId"
      ],
      "properties": {
        "previousQnaId": {
          "type": "integer",
          "description": "Previous turn top answer result QnA ID.",
          "format": "int32"
        },
        "previousUserQuery": {
          "type": "string",
          "x-ms-client-name": "previousQuestion",
          "description": "Previous user query."
        }
      }
    },
    "LanguageQueryFilters": {
      "type": "object",
      "description": "filters over knowledge base.",
      "additionalProperties": false,
      "properties": {
        "metadataFilter": {
          "type": "object",
          "$ref": "#/definitions/LanguageMetadataFilter"
        },
        "sourceFilter": {
          "type": "object",
          "$ref": "#/definitions/LanguageSourceFilter"
        },
        "logicalOperation": {
          "type": "string",
          "description": "Logical operation used to join metadata filter with source filter.",
          "$ref": "#/definitions/LanguageLogicalOperationKind",
          "default": "AND"
        }
      }
    },
    "LanguageMetadataFilter": {
      "type": "object",
      "description": "Find QnAs that are associated with the given list of metadata.",
      "additionalProperties": false,
      "properties": {
        "metadata": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LanguageMetadataRecord"
          }
        },
        "logicalOperation": {
          "type": "string",
          "description": "Operation used to join metadata filters.",
          "$ref": "#/definitions/LanguageLogicalOperationKind",
          "default": "AND"
        }
      }
    },
    "LanguageMetadataRecord": {
      "type": "object",
      "description": "Object to provide the key value pair for each metadata.",
      "additionalProperties": false,
      "required": [
        "key",
        "value"
      ],
      "properties": {
        "key": {
          "type": "string",
          "description": "Metadata Key from Metadata dictionary used in the QnA."
        },
        "value": {
          "type": "string",
          "description": "Metadata Value from Metadata dictionary used in the QnA."
        }
      }
    },
    "LanguageSourceFilter": {
      "type": "array",
      "description": "Find QnAs that are associated with any of the given list of sources in knowledge base.",
      "items": {
        "type": "string"
      }
    },
    "LanguageLogicalOperationKind": {
      "type": "string",
      "description": "Set to 'OR' or 'AND' for using corresponding logical operation.",
      "x-ms-enum": {
        "name": "LogicalOperationKind",
        "modelAsString": true
      },
      "enum": [
        "AND",
        "OR"
      ]
    },
    "LanguageShortAnswerOptions": {
      "type": "object",
      "description": "To configure Answer span prediction feature.",
      "additionalProperties": false,
      "required": [
        "enable"
      ],
      "properties": {
        "enable": {
          "type": "boolean",
          "description": "Enable or disable Answer Span prediction.",
          "enum": [
            true
          ],
          "x-ms-enum": {
            "name": "enable",
            "modelAsString": false
          }
        },
        "confidenceScoreThreshold": {
          "type": "number",
          "format": "double",
          "x-ms-client-name": "confidenceThreshold",
          "description": "Minimum threshold score required to include an answer span, value ranges from 0 to 1.",
          "maximum": 1,
          "minimum": 0
        },
        "topAnswersWithSpan": {
          "type": "integer",
          "x-ms-client-name": "top",
          "description": "Number of Top answers to be considered for span prediction from 1 to 10.",
          "format": "int32",
          "maximum": 10,
          "minimum": 1
        }
      }
    },
    "SubdomainList": {
      "description": "List of subdomain names",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of subdomain names",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Subdomain"
          }
        }
      }
    },
    "Subdomain": {
      "description": "Subdomain",
      "type": "object",
      "properties": {
        "Name": {
          "description": "The subdomain of the connection.",
          "type": "string",
          "x-ms-summary": "The Subdomain name"
        },
        "DisplayName": {
          "description": "The display name of the subdomain.",
          "type": "string",
          "x-ms-summary": "Subdomain display name"
        }
      }
    },
    "MultiLanguageBatchInput": {
      "type": "object",
      "required": [
        "documents"
      ],
      "properties": {
        "documents": {
          "type": "array",
          "description": "The set of documents to process as part of this batch.",
          "items": {
            "$ref": "#/definitions/MultiLanguageInputV3"
          }
        }
      },
      "description": "Contains a set of input documents to be analyzed by the service."
    },
    "MultiLanguageInputV3": {
      "type": "object",
      "required": [
        "id",
        "text"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "A unique, non-empty document identifier."
        },
        "text": {
          "type": "string",
          "description": "The input text to process."
        },
        "language": {
          "type": "string",
          "description": "(Optional) This is the 2 letter ISO 639-1 representation of a language. For example, use \"en\" for English; \"es\" for Spanish etc. If not set, use \"en\" for English as default."
        }
      },
      "description": "Contains an input document to be analyzed by the service."
    },
    "DocumentError": {
      "type": "object",
      "required": [
        "id",
        "error"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Document Id."
        },
        "error": {
          "type": "object",
          "description": "Document Error.",
          "$ref": "#/definitions/TextAnalyticsError"
        }
      }
    },
    "ErrorResponse": {
      "type": "object",
      "required": [
        "error"
      ],
      "properties": {
        "error": {
          "type": "object",
          "description": "Document Error.",
          "$ref": "#/definitions/TextAnalyticsError"
        }
      }
    },
    "TextAnalyticsError": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "invalidRequest",
            "invalidArgument",
            "internalServerError",
            "serviceUnavailable"
          ],
          "x-ms-enum": {
            "name": "ErrorCodeValue",
            "modelAsString": false
          },
          "description": "Error code."
        },
        "message": {
          "type": "string",
          "description": "Error message."
        },
        "target": {
          "type": "string",
          "description": "Error target."
        },
        "innererror": {
          "$ref": "#/definitions/InnerError",
          "description": "Inner error contains more specific information."
        },
        "details": {
          "type": "array",
          "description": "Details about specific errors that led to this reported error.",
          "items": {
            "$ref": "#/definitions/TextAnalyticsError"
          }
        }
      }
    },
    "TextAnalyticsWarning": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "LongWordsInDocument",
            "DocumentTruncated"
          ],
          "x-ms-enum": {
            "name": "WarningCodeValue",
            "modelAsString": false
          },
          "description": "Error code."
        },
        "message": {
          "type": "string",
          "description": "Warning message."
        },
        "targetRef": {
          "type": "string",
          "description": "A JSON pointer reference indicating the target object."
        }
      }
    },
    "InnerError": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "string",
          "enum": [
            "invalidParameterValue",
            "invalidRequestBodyFormat",
            "emptyRequest",
            "missingInputRecords",
            "invalidDocument",
            "modelVersionIncorrect",
            "invalidDocumentBatch",
            "unsupportedLanguageCode",
            "invalidCountryHint"
          ],
          "x-ms-enum": {
            "name": "InnerErrorCodeValue",
            "modelAsString": false
          },
          "description": "Error code."
        },
        "message": {
          "type": "string",
          "description": "Error message."
        },
        "details": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Error details."
        },
        "target": {
          "type": "string",
          "description": "Error target."
        },
        "innererror": {
          "$ref": "#/definitions/InnerError",
          "description": "Inner error contains more specific information."
        }
      }
    },
    "SentimentResponse": {
      "type": "object",
      "required": [
        "documents",
        "errors",
        "modelVersion"
      ],
      "properties": {
        "documents": {
          "type": "array",
          "description": "Sentiment analysis per document.",
          "items": {
            "$ref": "#/definitions/DocumentSentiment"
          }
        },
        "errors": {
          "type": "array",
          "description": "Errors by document id.",
          "items": {
            "$ref": "#/definitions/DocumentError"
          }
        },
        "statistics": {
          "$ref": "#/definitions/RequestStatistics"
        },
        "modelVersion": {
          "type": "string",
          "description": "This field indicates which model is used for scoring."
        }
      }
    },
    "DocumentSentiment": {
      "type": "object",
      "required": [
        "id",
        "sentiment",
        "confidenceScores",
        "sentences",
        "warnings"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique, non-empty document identifier."
        },
        "sentiment": {
          "type": "string",
          "description": "Predicted sentiment for document (Negative, Neutral, Positive, or Mixed).",
          "enum": [
            "positive",
            "neutral",
            "negative",
            "mixed"
          ],
          "x-ms-enum": {
            "name": "DocumentSentimentValue",
            "modelAsString": false
          }
        },
        "statistics": {
          "$ref": "#/definitions/DocumentStatistics"
        },
        "confidenceScores": {
          "description": "Document level sentiment confidence scores between 0 and 1 for each sentiment class.",
          "$ref": "#/definitions/SentimentConfidenceScorePerLabel"
        },
        "sentences": {
          "type": "array",
          "description": "Sentence level sentiment analysis.",
          "items": {
            "$ref": "#/definitions/SentenceSentiment"
          }
        },
        "warnings": {
          "type": "array",
          "description": "Warnings encountered while processing document.",
          "items": {
            "$ref": "#/definitions/TextAnalyticsWarning"
          }
        }
      }
    },
    "RequestStatistics": {
      "type": "object",
      "required": [
        "documentsCount",
        "validDocumentsCount",
        "erroneousDocumentsCount",
        "transactionsCount"
      ],
      "properties": {
        "documentsCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of documents submitted in the request."
        },
        "validDocumentsCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of valid documents. This excludes empty, over-size limit or non-supported languages documents."
        },
        "erroneousDocumentsCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of invalid documents. This includes empty, over-size limit or non-supported languages documents."
        },
        "transactionsCount": {
          "type": "integer",
          "format": "int64",
          "description": "Number of transactions for the request."
        }
      },
      "description": "if showStats=true was specified in the request this field will contain information about the request payload."
    },
    "DocumentStatistics": {
      "type": "object",
      "required": [
        "charactersCount",
        "transactionsCount"
      ],
      "properties": {
        "charactersCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of text elements recognized in the document."
        },
        "transactionsCount": {
          "type": "integer",
          "format": "int32",
          "description": "Number of transactions for the document."
        }
      },
      "description": "if showStats=true was specified in the request this field will contain information about the document payload."
    },
    "SentimentConfidenceScorePerLabel": {
      "type": "object",
      "required": [
        "positive",
        "neutral",
        "negative"
      ],
      "properties": {
        "positive": {
          "type": "number",
          "format": "double"
        },
        "neutral": {
          "type": "number",
          "format": "double"
        },
        "negative": {
          "type": "number",
          "format": "double"
        }
      },
      "description": "Represents the confidence scores between 0 and 1 across all sentiment classes: positive, neutral, negative."
    },
    "SentenceSentiment": {
      "type": "object",
      "required": [
        "sentiment",
        "confidenceScores",
        "offset",
        "length"
      ],
      "properties": {
        "text": {
          "type": "string",
          "description": "The sentence text."
        },
        "sentiment": {
          "type": "string",
          "description": "The predicted Sentiment for the sentence.",
          "enum": [
            "positive",
            "neutral",
            "negative"
          ],
          "x-ms-enum": {
            "name": "SentenceSentimentValue",
            "modelAsString": false
          }
        },
        "confidenceScores": {
          "description": "The sentiment confidence score between 0 and 1 for the sentence for all classes.",
          "$ref": "#/definitions/SentimentConfidenceScorePerLabel"
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "The sentence offset from the start of the document."
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "The length of the sentence by Unicode standard."
        }
      }
    },
    "DocumentEntities": {
      "type": "object",
      "required": [
        "id",
        "entities",
        "warnings"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique, non-empty document identifier."
        },
        "entities": {
          "type": "array",
          "description": "Recognized entities in the document.",
          "items": {
            "$ref": "#/definitions/Entity"
          }
        },
        "warnings": {
          "type": "array",
          "description": "Warnings encountered while processing document.",
          "items": {
            "$ref": "#/definitions/TextAnalyticsWarning"
          }
        },
        "statistics": {
          "description": "if showStats=true was specified in the request this field will contain information about the document payload.",
          "$ref": "#/definitions/DocumentStatistics"
        }
      }
    },
    "PiiDocumentEntities": {
      "type": "object",
      "required": [
        "id",
        "redactedText",
        "entities",
        "warnings"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique, non-empty document identifier."
        },
        "redactedText": {
          "type": "string",
          "description": "Returns redacted text."
        },
        "entities": {
          "type": "array",
          "description": "Recognized entities in the document.",
          "items": {
            "$ref": "#/definitions/Entity"
          }
        },
        "warnings": {
          "type": "array",
          "description": "Warnings encountered while processing document.",
          "items": {
            "$ref": "#/definitions/TextAnalyticsWarning"
          }
        },
        "statistics": {
          "description": "if showStats=true was specified in the request this field will contain information about the document payload.",
          "$ref": "#/definitions/DocumentStatistics"
        }
      }
    },
    "Entity": {
      "type": "object",
      "required": [
        "text",
        "category",
        "offset",
        "length",
        "confidenceScore"
      ],
      "properties": {
        "text": {
          "type": "string",
          "description": "Entity text as appears in the request."
        },
        "category": {
          "type": "string",
          "description": "Entity type, such as Person/Location/Org/SSN etc"
        },
        "subcategory": {
          "type": "string",
          "description": "Entity sub type, such as Age/Year/TimeRange etc"
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "Start position (in Unicode characters) for the entity text."
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "Length (in Unicode characters) for the entity text."
        },
        "confidenceScore": {
          "type": "number",
          "format": "double",
          "description": "Confidence score between 0 and 1 of the extracted entity."
        }
      }
    },
    "EntityLinkingResult": {
      "type": "object",
      "required": [
        "documents",
        "errors",
        "modelVersion"
      ],
      "properties": {
        "documents": {
          "type": "array",
          "description": "Response by document",
          "items": {
            "$ref": "#/definitions/DocumentLinkedEntities"
          }
        },
        "errors": {
          "type": "array",
          "description": "Errors by document id.",
          "items": {
            "$ref": "#/definitions/DocumentError"
          }
        },
        "statistics": {
          "$ref": "#/definitions/RequestStatistics"
        },
        "modelVersion": {
          "type": "string",
          "description": "This field indicates which model is used for scoring."
        }
      }
    },
    "DocumentLinkedEntities": {
      "type": "object",
      "required": [
        "id",
        "entities",
        "warnings"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique, non-empty document identifier."
        },
        "entities": {
          "type": "array",
          "description": "Recognized well-known entities in the document.",
          "items": {
            "$ref": "#/definitions/LinkedEntity"
          }
        },
        "warnings": {
          "type": "array",
          "description": "Warnings encountered while processing document.",
          "items": {
            "$ref": "#/definitions/TextAnalyticsWarning"
          }
        },
        "statistics": {
          "description": "if showStats=true was specified in the request this field will contain information about the document payload.",
          "$ref": "#/definitions/DocumentStatistics"
        }
      }
    },
    "LinkedEntity": {
      "type": "object",
      "required": [
        "name",
        "matches",
        "language",
        "url",
        "dataSource"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Entity Linking formal name."
        },
        "matches": {
          "type": "array",
          "description": "List of instances this entity appears in the text.",
          "items": {
            "$ref": "#/definitions/Match"
          }
        },
        "language": {
          "type": "string",
          "description": "Language used in the data source."
        },
        "id": {
          "type": "string",
          "description": "Unique identifier of the recognized entity from the data source."
        },
        "url": {
          "type": "string",
          "description": "URL for the entity's page from the data source."
        },
        "dataSource": {
          "type": "string",
          "description": "Data source used to extract entity linking, such as Wiki/Bing etc."
        }
      }
    },
    "Match": {
      "type": "object",
      "required": [
        "confidenceScore",
        "text",
        "offset",
        "length"
      ],
      "properties": {
        "confidenceScore": {
          "type": "number",
          "format": "double",
          "description": "If a well-known item is recognized, a decimal number denoting the confidence level between 0 and 1 will be returned."
        },
        "text": {
          "type": "string",
          "description": "Entity text as appears in the request."
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "Start position (in Unicode characters) for the entity match text."
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "Length (in Unicode characters) for the entity match text."
        }
      }
    },
    "DocumentKeyPhrases": {
      "type": "object",
      "required": [
        "id",
        "keyPhrases",
        "warnings"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique, non-empty document identifier."
        },
        "keyPhrases": {
          "type": "array",
          "description": "A list of representative words or phrases. The number of key phrases returned is proportional to the number of words in the input document.",
          "items": {
            "type": "string"
          }
        },
        "warnings": {
          "type": "array",
          "description": "Warnings encountered while processing document.",
          "items": {
            "$ref": "#/definitions/TextAnalyticsWarning"
          }
        },
        "statistics": {
          "description": "if showStats=true was specified in the request this field will contain information about the document payload.",
          "$ref": "#/definitions/DocumentStatistics"
        }
      }
    },
    "LanguageBatchInput": {
      "type": "object",
      "required": [
        "documents"
      ],
      "properties": {
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LanguageInputV3"
          }
        }
      }
    },
    "LanguageInputV3": {
      "type": "object",
      "required": [
        "id",
        "text"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique, non-empty document identifier."
        },
        "text": {
          "type": "string"
        },
        "countryHint": {
          "type": "string"
        }
      }
    },
    "DocumentLanguage": {
      "type": "object",
      "required": [
        "id",
        "detectedLanguage",
        "warnings"
      ],
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique, non-empty document identifier."
        },
        "detectedLanguage": {
          "description": "Detected Language.",
          "$ref": "#/definitions/DetectedLanguage"
        },
        "warnings": {
          "type": "array",
          "description": "Warnings encountered while processing document.",
          "items": {
            "$ref": "#/definitions/TextAnalyticsWarning"
          }
        },
        "statistics": {
          "description": "if showStats=true was specified in the request this field will contain information about the document payload.",
          "$ref": "#/definitions/DocumentStatistics"
        }
      }
    },
    "DetectedLanguage": {
      "type": "object",
      "required": [
        "name",
        "iso6391Name",
        "confidenceScore"
      ],
      "properties": {
        "name": {
          "type": "string",
          "description": "Long name of a detected language (e.g. English, French)."
        },
        "iso6391Name": {
          "type": "string",
          "description": "A two letter representation of the detected language according to the ISO 639-1 standard (e.g. en, fr)."
        },
        "confidenceScore": {
          "type": "number",
          "format": "double",
          "description": "A confidence score between 0 and 1. Scores close to 1 indicate 100% certainty that the identified language is true."
        }
      }
    },
    "KeyPhraseResultV3": {
      "type": "object",
      "required": [
        "documents",
        "errors",
        "modelVersion"
      ],
      "properties": {
        "documents": {
          "type": "array",
          "description": "Response by document",
          "items": {
            "$ref": "#/definitions/DocumentKeyPhrases"
          }
        },
        "errors": {
          "type": "array",
          "description": "Errors by document id.",
          "items": {
            "$ref": "#/definitions/DocumentError"
          }
        },
        "statistics": {
          "$ref": "#/definitions/RequestStatistics"
        },
        "modelVersion": {
          "type": "string",
          "description": "This field indicates which model is used for scoring."
        }
      }
    },
    "EntitiesResultV3": {
      "type": "object",
      "required": [
        "documents",
        "errors",
        "modelVersion"
      ],
      "properties": {
        "documents": {
          "type": "array",
          "description": "Response by document",
          "items": {
            "$ref": "#/definitions/DocumentEntities"
          }
        },
        "errors": {
          "type": "array",
          "description": "Errors by document id.",
          "items": {
            "$ref": "#/definitions/DocumentError"
          }
        },
        "statistics": {
          "$ref": "#/definitions/RequestStatistics"
        },
        "modelVersion": {
          "type": "string",
          "description": "This field indicates which model is used for scoring."
        }
      }
    },
    "PiiResult": {
      "type": "object",
      "required": [
        "documents",
        "errors",
        "modelVersion"
      ],
      "properties": {
        "documents": {
          "type": "array",
          "description": "Response by document",
          "items": {
            "$ref": "#/definitions/PiiDocumentEntities"
          }
        },
        "errors": {
          "type": "array",
          "description": "Errors by document id.",
          "items": {
            "$ref": "#/definitions/DocumentError"
          }
        },
        "statistics": {
          "$ref": "#/definitions/RequestStatistics"
        },
        "modelVersion": {
          "type": "string",
          "description": "This field indicates which model is used for scoring."
        }
      }
    },
    "LanguageResultV3": {
      "type": "object",
      "required": [
        "documents",
        "errors",
        "modelVersion"
      ],
      "properties": {
        "documents": {
          "type": "array",
          "description": "Response by document",
          "items": {
            "$ref": "#/definitions/DocumentLanguage"
          }
        },
        "errors": {
          "type": "array",
          "description": "Errors by document id.",
          "items": {
            "$ref": "#/definitions/DocumentError"
          }
        },
        "statistics": {
          "$ref": "#/definitions/RequestStatistics"
        },
        "modelVersion": {
          "type": "string",
          "description": "This field indicates which model is used for scoring."
        }
      }
    },
    "LanguageInputs": {
      "type": "object",
      "properties": {
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LanguageInputV2"
          }
        }
      }
    },
    "MultiLanguageInputs": {
      "type": "object",
      "properties": {
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MultiLanguageInputV2"
          }
        }
      }
    },
    "KeyPhraseResults": {
      "type": "object",
      "properties": {
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyPhraseResult"
          }
        }
      }
    },
    "EntitiesResults": {
      "type": "object",
      "properties": {
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntitiesResult"
          }
        }
      }
    },
    "LanguageResults": {
      "type": "object",
      "properties": {
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LanguageResult"
          }
        }
      }
    },
    "SentimentResults": {
      "type": "object",
      "properties": {
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/SentimentResult"
          }
        }
      }
    },
    "LanguageInputV2": {
      "type": "object",
      "required": [
        "id",
        "text"
      ],
      "properties": {
        "id": {
          "description": "Unique, non-empty document identifier.",
          "type": "string",
          "x-ms-summary": "Id"
        },
        "text": {
          "description": "The text to analyze.",
          "x-ms-summary": "Text",
          "type": "string"
        }
      }
    },
    "MultiLanguageInputV2": {
      "type": "object",
      "required": [
        "id",
        "text"
      ],
      "properties": {
        "id": {
          "description": "Unique, non-empty document identifier.",
          "type": "string",
          "x-ms-summary": "Id"
        },
        "text": {
          "description": "The text to analyze.",
          "type": "string",
          "x-ms-summary": "Text"
        },
        "language": {
          "description": "This is the 2 letter ISO 639-1 representation of a language.\r\n            For example, use \"en\" for English; \"es\" for Spanish etc.,",
          "enum": [
            "da",
            "de",
            "en",
            "es",
            "fi",
            "fr",
            "it",
            "ja",
            "nl",
            "no",
            "pl",
            "pt",
            "ru",
            "sv"
          ],
          "type": "string",
          "x-ms-visibility": "advanced",
          "x-ms-summary": "Language",
          "default": "en"
        }
      }
    },
    "KeyPhraseResult": {
      "type": "object",
      "properties": {
        "keyPhrases": {
          "description": "A list of representative words or phrases. The number of key phrases returned is proportional to the number of words in the input document.",
          "x-ms-summary": "Key Phrases",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "x-ms-summary": "Id",
          "description": "The unique document identifier.",
          "type": "string"
        }
      }
    },
    "EntitiesResult": {
      "type": "object",
      "properties": {
        "entities": {
          "description": "A list of disambiguated entities with links to more information on the web (Wikipedia and Bing).",
          "x-ms-summary": "Entities",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the entity.",
                "x-ms-summary": "Name",
                "type": "string"
              },
              "matches": {
                "description": "A list of matches for the entity.",
                "x-ms-summary": "Matches",
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              "wikipediaLanguage": {
                "description": "Wikipedia language of the entity.",
                "x-ms-summary": "Wikipedia Language",
                "type": "string"
              },
              "wikipediaId": {
                "description": "Wikipedia Id of the entity.",
                "x-ms-summary": "Wikipedia Id",
                "type": "string"
              },
              "wikipediaUrl": {
                "description": "Wikipedia url of the entity.",
                "x-ms-summary": "Wikipedia Url",
                "type": "string"
              },
              "bingId": {
                "description": "Bing Id of the entity.",
                "x-ms-summary": "Bing Id",
                "type": "string"
              },
              "type": {
                "description": "Type of the entity.",
                "x-ms-summary": "Type",
                "type": "string"
              },
              "subType": {
                "description": "Subtype of the entity.",
                "x-ms-summary": "Subtype",
                "type": "string"
              }
            }
          }
        },
        "id": {
          "x-ms-summary": "Id",
          "description": "The unique document identifier.",
          "type": "string"
        }
      }
    },
    "LanguageResult": {
      "type": "object",
      "properties": {
        "id": {
          "description": "The unique document identifier.",
          "x-ms-summary": "Id",
          "type": "string"
        },
        "detectedLanguages": {
          "description": "A list of extracted languages.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DetectedLanguageV2"
          }
        }
      }
    },
    "SentimentResult": {
      "type": "object",
      "properties": {
        "score": {
          "format": "double",
          "description": "A decimal number between 0 and 1 denoting the sentiment of the document.  A score above 0.7 usually refers to a positive document while a score below 0.3 normally has a negative connotation. Mid values refer to neutral text.",
          "type": "number",
          "x-ms-summary": "Score"
        },
        "id": {
          "description": "The unique document identifier.",
          "type": "string",
          "x-ms-summary": "Id"
        }
      }
    },
    "DetectedLanguageV2": {
      "type": "object",
      "properties": {
        "name": {
          "description": "The long name of a detected language (e.g. English, French).",
          "type": "string",
          "x-ms-summary": "Name"
        },
        "iso6391Name": {
          "description": "A two letter representation of the detected language according to the ISO 639-1 standard (e.g. en, fr).",
          "type": "string",
          "x-ms-summary": "Language Code"
        },
        "score": {
          "format": "double",
          "description": "A confidence score between 0 and 1. Scores close to 1 indicate 100% certainty that the identified language is true.",
          "type": "number",
          "x-ms-summary": "Score"
        }
      }
    },
    "ConversationalTask": {
      "type": "object",
      "description": "The input for a custom conversation task.",
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeConversationTask"
        }
      ],
      "properties": {
        "kind": {
          "$ref": "#/definitions/AnalyzeConversationTaskKind"
        },
        "analysisInput": {
          "$ref": "#/definitions/ConversationAnalysisOptions"
        },
        "parameters": {
          "$ref": "#/definitions/ConversationTaskParameters"
        }
      },
      "x-ms-discriminator-value": "Conversation",
      "required": [
        "analysisInput",
        "parameters",
        "kind"
      ]
    },
    "ConversationTaskParameters": {
      "type": "object",
      "description": "Input parameters necessary for a Conversation task.",
      "properties": {
        "projectName": {
          "type": "string",
          "description": "The name of the project to use."
        },
        "deploymentName": {
          "type": "string",
          "description": "The name of the deployment to use."
        },
        "verbose": {
          "type": "boolean",
          "description": "If true, the service will return more detailed information in the response."
        },
        "isLoggingEnabled": {
          "type": "boolean",
          "description": "If true, the service will keep the query for further review.",
          "x-ms-visibility": "internal"
        },
        "stringIndexType": {
          "$ref": "#/definitions/StringIndexType"
        },
        "directTarget": {
          "type": "string",
          "description": "The name of a target project to forward the request to.",
          "x-ms-visibility": "internal"
        },
        "targetProjectParameters": {
          "type": "object",
          "description": "A dictionary representing the parameters for each target project.",
          "additionalProperties": {
            "$ref": "#/definitions/AnalysisParameters"
          },
          "x-ms-visibility": "internal"
        }
      },
      "required": [
        "projectName",
        "deploymentName"
      ]
    },
    "ConversationalTask_Orchestration": {
      "type": "object",
      "description": "The input for a custom conversation task.",
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeConversationTask"
        }
      ],
      "properties": {
        "kind": {
          "$ref": "#/definitions/AnalyzeConversationTaskKind"
        },
        "analysisInput": {
          "$ref": "#/definitions/ConversationAnalysisOptions"
        },
        "parameters": {
          "$ref": "#/definitions/ConversationTaskParameters_Orchestration"
        }
      },
      "x-ms-discriminator-value": "Conversation",
      "required": [
        "analysisInput",
        "parameters",
        "kind"
      ]
    },
    "ConversationTaskParameters_Orchestration": {
      "type": "object",
      "description": "Input parameters necessary for a Conversation task.",
      "properties": {
        "projectName": {
          "type": "string",
          "description": "The name of the project to use."
        },
        "deploymentName": {
          "type": "string",
          "description": "The name of the deployment to use."
        },
        "verbose": {
          "type": "boolean",
          "description": "If true, the service will return more detailed information in the response."
        },
        "isLoggingEnabled": {
          "type": "boolean",
          "description": "If true, the service will keep the query for further review.",
          "x-ms-visibility": "internal"
        },
        "stringIndexType": {
          "$ref": "#/definitions/StringIndexType"
        },
        "directTarget": {
          "type": "string",
          "description": "The name of a target project to forward the request to."
        },
        "targetProjectParameters": {
          "type": "object",
          "description": "A dictionary representing the parameters for each target project.",
          "additionalProperties": {
            "$ref": "#/definitions/AnalysisParameters"
          }
        }
      },
      "required": [
        "projectName",
        "deploymentName"
      ]
    },
    "AnalysisParameters": {
      "type": "object",
      "description": "This is the parameter set of either the Orchestration project itself or one of the target services.",
      "required": [
        "targetProjectKind"
      ],
      "discriminator": "targetProjectKind",
      "properties": {
        "targetProjectKind": {
          "type": "string",
          "description": "The type of a target service.",
          "enum": [
            "Luis",
            "Conversation",
            "QuestionAnswering",
            "NonLinked"
          ],
          "x-ms-enum": {
            "name": "targetProjectKind",
            "modelAsString": true
          }
        },
        "apiVersion": {
          "type": "string",
          "description": "The API version to use when call a specific target service."
        }
      }
    },
    "StringIndexType": {
      "type": "string",
      "description": "Specifies the method used to interpret string offsets.  Defaults to Text Elements (Graphemes) according to Unicode v8.0.0. For additional information see https://aka.ms/text-analytics-offsets.",
      "default": "TextElement_V8",
      "x-ms-visibility": "internal",
      "enum": [
        "TextElement_V8",
        "UnicodeCodePoint",
        "Utf16CodeUnit"
      ],
      "x-ms-enum": {
        "name": "StringIndexType",
        "modelAsString": true,
        "values": [
          {
            "value": "TextElement_V8",
            "description": "Returned offset and length values will correspond to TextElements (Graphemes and Grapheme clusters) confirming to the Unicode 8.0.0 standard. Use this option if your application is written in .Net Framework or .Net Core and you will be using StringInfo."
          },
          {
            "value": "UnicodeCodePoint",
            "description": "Returned offset and length values will correspond to Unicode code points. Use this option if your application is written in a language that support Unicode, for example Python."
          },
          {
            "value": "Utf16CodeUnit",
            "description": "Returned offset and length values will correspond to UTF-16 code units. Use this option if your application is written in a language that support Unicode, for example Java, JavaScript."
          }
        ]
      }
    },
    "ConversationAnalysisOptions": {
      "type": "object",
      "description": "The input ConversationItem and its optional parameters",
      "required": [
        "conversationItem"
      ],
      "properties": {
        "conversationItem": {
          "$ref": "#/definitions/ConversationItemBase"
        }
      }
    },
    "ConversationItemBase": {
      "type": "object",
      "description": "The abstract base for a user input formatted conversation (e.g., Text, Transcript).",
      "properties": {
        "id": {
          "description": "The ID of a conversation item.",
          "type": "string",
          "default": "0",
          "x-ms-visibility": "internal"
        },
        "participantId": {
          "description": "The participant ID of a conversation item.",
          "type": "string",
          "default": "0",
          "x-ms-visibility": "internal"
        },
        "language": {
          "description": "The override language of a conversation item in BCP 47 language representation.",
          "type": "string"
        },
        "modality": {
          "$ref": "#/definitions/Modality"
        },
        "text": {
          "description": "The text input",
          "type": "string"
        }
      },
      "required": [
        "participantId",
        "id",
        "text"
      ],
      "additionalProperties": true
    },
    "TextConversationItem": {
      "type": "object",
      "description": "The text modality of an input conversation.",
      "allOf": [
        {
          "$ref": "#/definitions/ConversationItemBase"
        }
      ],
      "properties": {
        "text": {
          "description": "The text input",
          "type": "string"
        }
      },
      "required": [
        "text"
      ]
    },
    "Modality": {
      "type": "string",
      "description": "Enumeration of supported conversational modalities.",
      "enum": [
        "transcript",
        "text"
      ],
      "x-ms-enum": {
        "name": "InputModality",
        "modelAsString": true
      },
      "x-ms-visibility": "internal"
    },
    "AnalyzeConversationTask": {
      "type": "object",
      "description": "The base class of a conversation input task.",
      "discriminator": "kind",
      "required": [
        "kind"
      ],
      "properties": {
        "kind": {
          "$ref": "#/definitions/AnalyzeConversationTaskKind"
        }
      }
    },
    "AnalyzeConversationTaskKind": {
      "type": "string",
      "description": "Enumeration of supported Conversation tasks.",
      "enum": [
        "Conversation"
      ],
      "x-ms-enum": {
        "name": "AnalyzeConversationTaskKind",
        "modelAsString": true
      },
      "default": "Conversation",
      "x-ms-visibility": "internal"
    },
    "AnalyzeConversationTaskResult": {
      "type": "object",
      "description": "The base class of a conversation task result.",
      "discriminator": "kind",
      "required": [
        "kind"
      ],
      "properties": {
        "kind": {
          "$ref": "#/definitions/AnalyzeConversationTaskResultsKind"
        }
      }
    },
    "AnalyzeConversationTaskResultsKind": {
      "type": "string",
      "description": "Enumeration of supported conversational task results",
      "enum": [
        "ConversationResult"
      ],
      "x-ms-enum": {
        "name": "AnalyzeConversationTaskResultsKind",
        "modelAsString": true
      }
    },
    "ConversationalTaskResult": {
      "description": "The results of a Conversation task.",
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeConversationTaskResult"
        }
      ],
      "type": "object",
      "properties": {
        "kind": {
          "$ref": "#/definitions/AnalyzeConversationTaskResultsKind"
        },
        "result": {
          "$ref": "#/definitions/AnalyzeConversationResult"
        }
      },
      "required": [
        "result"
      ],
      "x-ms-discriminator-value": "ConversationResult"
    },
    "ConversationalTaskResult_Orchestration": {
      "description": "The results of a Conversation task.",
      "allOf": [
        {
          "$ref": "#/definitions/AnalyzeConversationTaskResult"
        }
      ],
      "type": "object",
      "properties": {
        "kind": {
          "$ref": "#/definitions/AnalyzeConversationTaskResultsKind"
        },
        "result": {
          "$ref": "#/definitions/AnalyzeConversationResult_Orchestration"
        }
      },
      "required": [
        "result"
      ],
      "x-ms-discriminator-value": "ConversationResult"
    },
    "AnalyzeConversationResult": {
      "type": "object",
      "description": "Represents a conversation analysis response.",
      "required": [
        "query",
        "prediction"
      ],
      "properties": {
        "query": {
          "type": "string",
          "description": "The conversation utterance given by the caller."
        },
        "detectedLanguage": {
          "type": "string",
          "description": "The system detected language for the query in BCP 47 language representation.."
        },
        "prediction": {
          "description": "The prediction result of a conversation project.",
          "$ref": "#/definitions/ConversationPrediction"
        }
      }
    },
    "AnalyzeConversationResult_Orchestration": {
      "type": "object",
      "description": "Represents a conversation analysis response.",
      "required": [
        "query",
        "prediction"
      ],
      "properties": {
        "query": {
          "type": "string",
          "description": "The conversation utterance given by the caller."
        },
        "detectedLanguage": {
          "type": "string",
          "description": "The system detected language for the query in BCP 47 language representation.."
        },
        "prediction": {
          "description": "The prediction result of a conversation project.",
          "$ref": "#/definitions/OrchestrationPrediction"
        }
      }
    },
    "BasePrediction": {
      "type": "object",
      "description": "This is the base class of prediction",
      "required": [
        "projectKind"
      ],
      "discriminator": "projectKind",
      "properties": {
        "projectKind": {
          "type": "string",
          "description": "The type of the project.",
          "enum": [
            "Conversation",
            "Orchestration"
          ],
          "x-ms-enum": {
            "name": "projectKind",
            "modelAsString": true
          }
        },
        "topIntent": {
          "type": "string",
          "description": "The intent with the highest score."
        }
      }
    },
    "ConversationPrediction": {
      "type": "object",
      "description": "Represents the prediction section of a Conversation project.",
      "x-ms-discriminator-value": "Conversation",
      "required": [
        "intents",
        "entities"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BasePrediction"
        }
      ],
      "properties": {
        "intents": {
          "description": "The intent classification results.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConversationIntent"
          }
        },
        "entities": {
          "description": "The entity extraction results.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConversationEntity"
          }
        },
        "projectKind": {
          "type": "string",
          "description": "The type of the project.",
          "enum": [
            "Conversation",
            "Orchestration"
          ],
          "x-ms-enum": {
            "name": "projectKind",
            "modelAsString": true
          }
        },
        "topIntent": {
          "type": "string",
          "description": "The intent with the highest score."
        }
      }
    },
    "ConversationIntent": {
      "type": "object",
      "description": "The intent classification result of a Conversation project.",
      "required": [
        "category",
        "confidenceScore"
      ],
      "properties": {
        "category": {
          "description": "A predicted class.",
          "type": "string"
        },
        "confidenceScore": {
          "format": "float",
          "x-ms-client-name": "confidence",
          "description": "The confidence score of the class from 0.0 to 1.0.",
          "type": "number",
          "minimum": 0,
          "maximum": 1
        }
      }
    },
    "ConversationEntity": {
      "type": "object",
      "description": "The entity extraction result of a Conversation project.",
      "required": [
        "category",
        "text",
        "offset",
        "length",
        "confidenceScore",
        "topResolution",
        "multipleResolutions"
      ],
      "properties": {
        "category": {
          "description": "The entity category.",
          "type": "string"
        },
        "text": {
          "description": "The predicted entity text.",
          "type": "string"
        },
        "offset": {
          "format": "int32",
          "description": "The starting index of this entity in the query.",
          "type": "integer"
        },
        "length": {
          "format": "int32",
          "description": "The length of the text.",
          "type": "integer"
        },
        "confidenceScore": {
          "format": "float",
          "x-ms-client-name": "confidence",
          "description": "The entity confidence score.",
          "type": "number"
        },
        "resolutions": {
          "description": "The collection of entity resolution objects.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BaseResolution"
          }
        },
        "extraInformation": {
          "description": "The collection of entity extra information objects.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BaseExtraInformation"
          }
        },
        "topResolution": {
          "description": "The preferred resolution for an entity.",
          "$ref": "#/definitions/BaseResolution"
        },
        "multipleResolutions": {
          "description": "The indicator representing if the resolutions array had multiple items.",
          "type": "boolean"
        }
      }
    },
    "EntitySubtype": {
      "description": "The concrete entity Subtype model of extra information.",
      "allOf": [
        {
          "$ref": "#/definitions/BaseExtraInformation"
        }
      ],
      "type": "object",
      "x-ms-discriminator-value": "EntitySubtype",
      "properties": {
        "extraInformationKind": {
          "description": "The extra information object kind.",
          "type": "string",
          "enum": [
            "EntitySubtype",
            "ListKey"
          ],
          "x-ms-enum": {
            "name": "ExtraInformationKind",
            "modelAsString": true
          }
        },
        "value": {
          "type": "string",
          "description": "The Subtype of an extracted entity type."
        }
      }
    },
    "ListKey": {
      "description": "The list key extra data kind.",
      "allOf": [
        {
          "$ref": "#/definitions/BaseExtraInformation"
        }
      ],
      "type": "object",
      "x-ms-discriminator-value": "ListKey",
      "properties": {
        "key": {
          "type": "string",
          "description": "The canonical form of the extracted entity."
        }
      }
    },
    "BaseExtraInformation": {
      "description": "The abstract base object for entity extra information.",
      "type": "object",
      "discriminator": "extraInformationKind",
      "properties": {
        "extraInformationKind": {
          "description": "The extra information object kind.",
          "type": "string",
          "enum": [
            "EntitySubtype",
            "ListKey"
          ],
          "x-ms-enum": {
            "name": "ExtraInformationKind",
            "modelAsString": true
          }
        }
      },
      "required": [
        "extraInformationKind"
      ]
    },
    "BaseResolution": {
      "description": "The abstract base class for entity resolutions.",
      "type": "object",
      "discriminator": "resolutionKind",
      "properties": {
        "resolutionKind": {
          "description": "The entity resolution object kind.",
          "type": "string",
          "enum": [
            "Boolean",
            "DateTime",
            "Number",
            "Ordinal",
            "Speed",
            "Weight",
            "Length",
            "Volume",
            "Area",
            "Age",
            "Information",
            "Temperature",
            "Currency",
            "NumericRange",
            "TemporalSpan",
            "TextSpan"
          ],
          "x-ms-enum": {
            "name": "ResolutionKind",
            "modelAsString": true
          }
        }
      },
      "required": [
        "resolutionKind"
      ]
    },
    "QuantityResolution": {
      "description": "Represents resolutions for quantities.",
      "type": "object",
      "properties": {
        "value": {
          "type": "number",
          "format": "double",
          "description": "The numeric value that the extracted text denotes."
        }
      },
      "required": [
        "value"
      ]
    },
    "AgeResolution": {
      "description": "Represents the Age entity resolution model.",
      "allOf": [
        {
          "$ref": "#/definitions/BaseResolution"
        },
        {
          "$ref": "#/definitions/QuantityResolution"
        }
      ],
      "type": "object",
      "x-ms-discriminator-value": "Age",
      "properties": {
        "unit": {
          "type": "string",
          "enum": [
            "Unspecified",
            "Year",
            "Month",
            "Week",
            "Day"
          ],
          "x-ms-enum": {
            "name": "AgeUnit",
            "modelAsString": true
          },
          "description": "The Age Unit of measurement"
        }
      },
      "required": [
        "unit"
      ]
    },
    "VolumeResolution": {
      "description": "Represents the volume entity resolution model.",
      "allOf": [
        {
          "$ref": "#/definitions/BaseResolution"
        },
        {
          "$ref": "#/definitions/QuantityResolution"
        }
      ],
      "type": "object",
      "x-ms-discriminator-value": "Volume",
      "properties": {
        "unit": {
          "type": "string",
          "enum": [
            "Unspecified",
            "CubicMeter",
            "CubicCentimeter",
            "CubicMillimeter",
            "Hectoliter",
            "Decaliter",
            "Liter",
            "Centiliter",
            "Milliliter",
            "CubicYard",
            "CubicInch",
            "CubicFoot",
            "CubicMile",
            "FluidOunce",
            "Teaspoon",
            "Tablespoon",
            "Pint",
            "Quart",
            "Cup",
            "Gill",
            "Pinch",
            "FluidDram",
            "Barrel",
            "Minim",
            "Cord",
            "Peck",
            "Bushel",
            "Hogshead"
          ],
          "x-ms-enum": {
            "name": "VolumeUnit",
            "modelAsString": true
          },
          "description": "The Volume Unit of measurement"
        }
      },
      "required": [
        "unit"
      ]
    },
    "SpeedResolution": {
      "description": "Represents the speed entity resolution model.",
      "allOf": [
        {
          "$ref": "#/definitions/BaseResolution"
        },
        {
          "$ref": "#/definitions/QuantityResolution"
        }
      ],
      "type": "object",
      "x-ms-discriminator-value": "Speed",
      "properties": {
        "unit": {
          "type": "string",
          "enum": [
            "Unspecified",
            "MetersPerSecond",
            "KilometersPerHour",
            "KilometersPerMinute",
            "KilometersPerSecond",
            "MilesPerHour",
            "Knot",
            "FootPerSecond",
            "FootPerMinute",
            "YardsPerMinute",
            "YardsPerSecond",
            "MetersPerMillisecond",
            "CentimetersPerMillisecond",
            "KilometersPerMillisecond"
          ],
          "x-ms-enum": {
            "name": "SpeedUnit",
            "modelAsString": true
          },
          "description": "The speed Unit of measurement"
        }
      },
      "required": [
        "unit"
      ]
    },
    "AreaResolution": {
      "description": "Represents the area entity resolution model.",
      "allOf": [
        {
          "$ref": "#/definitions/BaseResolution"
        },
        {
          "$ref": "#/definitions/QuantityResolution"
        }
      ],
      "type": "object",
      "x-ms-discriminator-value": "Area",
      "properties": {
        "unit": {
          "type": "string",
          "enum": [
            "Unspecified",
            "SquareKilometer",
            "SquareHectometer",
            "SquareDecameter",
            "SquareDecimeter",
            "SquareMeter",
            "SquareCentimeter",
            "SquareMillimeter",
            "SquareInch",
            "SquareFoot",
            "SquareMile",
            "SquareYard",
            "Acre"
          ],
          "x-ms-enum": {
            "name": "AreaUnit",
            "modelAsString": true
          },
          "description": "The area Unit of measurement"
        }
      },
      "required": [
        "unit"
      ]
    },
    "LengthResolution": {
      "description": "Represents the length entity resolution model.",
      "allOf": [
        {
          "$ref": "#/definitions/BaseResolution"
        },
        {
          "$ref": "#/definitions/QuantityResolution"
        }
      ],
      "type": "object",
      "x-ms-discriminator-value": "Length",
      "properties": {
        "unit": {
          "type": "string",
          "enum": [
            "Unspecified",
            "Kilometer",
            "Hectometer",
            "Decameter",
            "Meter",
            "Decimeter",
            "Centimeter",
            "Millimeter",
            "Micrometer",
            "Nanometer",
            "Picometer",
            "Mile",
            "Yard",
            "Inch",
            "Foot",
            "LightYear",
            "Pt"
          ],
          "x-ms-enum": {
            "name": "LengthUnit",
            "modelAsString": true
          },
          "description": "The length Unit of measurement"
        }
      },
      "required": [
        "unit"
      ]
    },
    "InformationResolution": {
      "description": "Represents the information (data) entity resolution model.",
      "allOf": [
        {
          "$ref": "#/definitions/BaseResolution"
        },
        {
          "$ref": "#/definitions/QuantityResolution"
        }
      ],
      "type": "object",
      "x-ms-discriminator-value": "Information",
      "properties": {
        "unit": {
          "type": "string",
          "enum": [
            "Unspecified",
            "Bit",
            "Kilobit",
            "Megabit",
            "Gigabit",
            "Terabit",
            "Petabit",
            "Byte",
            "Kilobyte",
            "Megabyte",
            "Gigabyte",
            "Terabyte",
            "Petabyte"
          ],
          "x-ms-enum": {
            "name": "InformationUnit",
            "modelAsString": true
          },
          "description": "The information (data) Unit of measurement."
        }
      },
      "required": [
        "unit"
      ]
    },
    "TemperatureResolution": {
      "description": "Represents the temperature entity resolution model.",
      "allOf": [
        {
          "$ref": "#/definitions/BaseResolution"
        },
        {
          "$ref": "#/definitions/QuantityResolution"
        }
      ],
      "type": "object",
      "x-ms-discriminator-value": "Temperature",
      "properties": {
        "unit": {
          "type": "string",
          "enum": [
            "Unspecified",
            "Fahrenheit",
            "Kelvin",
            "Rankine",
            "Celsius"
          ],
          "x-ms-enum": {
            "name": "TemperatureUnit",
            "modelAsString": true
          },
          "description": "The temperature Unit of measurement."
        }
      },
      "required": [
        "unit"
      ]
    },
    "WeightResolution": {
      "description": "Represents the weight entity resolution model.",
      "allOf": [
        {
          "$ref": "#/definitions/BaseResolution"
        },
        {
          "$ref": "#/definitions/QuantityResolution"
        }
      ],
      "type": "object",
      "x-ms-discriminator-value": "Weight",
      "properties": {
        "unit": {
          "type": "string",
          "enum": [
            "Unspecified",
            "Kilogram",
            "Gram",
            "Milligram",
            "Gallon",
            "MetricTon",
            "Ton",
            "Pound",
            "Ounce",
            "Grain",
            "PennyWeight",
            "LongTonBritish",
            "ShortTonUS",
            "ShortHundredWeightUS",
            "Stone",
            "Dram"
          ],
          "x-ms-enum": {
            "name": "WeightUnit",
            "modelAsString": true
          },
          "description": "The weight Unit of measurement."
        }
      },
      "required": [
        "unit"
      ]
    },
    "CurrencyResolution": {
      "description": "Represents the currency entity resolution model.",
      "allOf": [
        {
          "$ref": "#/definitions/BaseResolution"
        },
        {
          "$ref": "#/definitions/QuantityResolution"
        }
      ],
      "type": "object",
      "x-ms-discriminator-value": "Currency",
      "properties": {
        "ISO4217": {
          "type": "string",
          "description": "The alphabetic code based on another ISO standard, ISO 3166, which lists the codes for country names. The first two letters of the ISO 4217 three-letter code are the same as the code for the country name, and, where possible, the third letter corresponds to the first letter of the currency name."
        },
        "value": {
          "type": "number",
          "format": "double",
          "description": "The money amount captured in the extracted entity"
        },
        "unit": {
          "type": "string",
          "description": "The unit of the amount captured in the extracted entity"
        }
      },
      "required": [
        "value",
        "unit"
      ]
    },
    "BooleanResolution": {
      "description": "A resolution for boolean expressions",
      "allOf": [
        {
          "$ref": "#/definitions/BaseResolution"
        }
      ],
      "type": "object",
      "x-ms-discriminator-value": "Boolean",
      "properties": {
        "value": {
          "type": "boolean"
        }
      },
      "required": [
        "value"
      ]
    },
    "DateTimeResolution": {
      "description": "A resolution for datetime entity instances.",
      "allOf": [
        {
          "$ref": "#/definitions/BaseResolution"
        }
      ],
      "type": "object",
      "x-ms-discriminator-value": "DateTime",
      "properties": {
        "timex": {
          "$ref": "#/definitions/TimeExpression"
        },
        "dateTimeSubKind": {
          "type": "string",
          "enum": [
            "Time",
            "Date",
            "DateTime",
            "Duration",
            "Set"
          ],
          "x-ms-enum": {
            "name": "DateTimeSubKind",
            "modelAsString": true
          },
          "description": "The DateTime SubKind"
        },
        "value": {
          "type": "string",
          "description": "The actual time that the extracted text denote."
        },
        "modifier": {
          "$ref": "#/definitions/TemporalModifier"
        }
      },
      "required": [
        "timex",
        "dateTimeSubKind",
        "value"
      ]
    },
    "NumberResolution": {
      "description": "A resolution for numeric entity instances.",
      "allOf": [
        {
          "$ref": "#/definitions/BaseResolution"
        }
      ],
      "type": "object",
      "x-ms-discriminator-value": "Number",
      "properties": {
        "numberKind": {
          "type": "string",
          "enum": [
            "Integer",
            "Decimal",
            "Power",
            "Fraction",
            "Percent",
            "Unspecified"
          ],
          "x-ms-enum": {
            "name": "NumberKind",
            "modelAsString": true
          },
          "description": "The type of the extracted number entity."
        },
        "value": {
          "type": "string",
          "description": "A numeric representation of what the extracted text denotes."
        }
      },
      "required": [
        "numberKind",
        "value"
      ]
    },
    "OrdinalResolution": {
      "description": "A resolution for ordinal numbers entity instances.",
      "allOf": [
        {
          "$ref": "#/definitions/BaseResolution"
        }
      ],
      "type": "object",
      "x-ms-discriminator-value": "Ordinal",
      "properties": {
        "offset": {
          "type": "string",
          "description": "The offset With respect to the reference (e.g., offset = -1 in \"show me the second to last\""
        },
        "relativeTo": {
          "type": "string",
          "enum": [
            "Current",
            "End",
            "Start"
          ],
          "x-ms-enum": {
            "name": "RelativeTo",
            "modelAsString": true
          },
          "description": "The reference point that the ordinal number denotes."
        },
        "value": {
          "type": "string",
          "description": "A simple arithmetic expression that the ordinal denotes."
        }
      },
      "required": [
        "offset",
        "relativeTo",
        "value"
      ]
    },
    "TemporalSpanResolution": {
      "description": "represents the resolution of a date and/or time span.",
      "allOf": [
        {
          "$ref": "#/definitions/BaseResolution"
        }
      ],
      "type": "object",
      "x-ms-discriminator-value": "TemporalSpan",
      "properties": {
        "begin": {
          "$ref": "#/definitions/TimeExpression"
        },
        "end": {
          "$ref": "#/definitions/TimeExpression"
        },
        "duration": {
          "type": "string",
          "description": "An optional duration value formatted based on the ISO 8601 (https://en.wikipedia.org/wiki/ISO_8601#Durations)"
        },
        "modifier": {
          "$ref": "#/definitions/TemporalModifier"
        }
      }
    },
    "NumericRangeResolution": {
      "description": "represents the resolution of numeric intervals.",
      "allOf": [
        {
          "$ref": "#/definitions/BaseResolution"
        }
      ],
      "type": "object",
      "x-ms-discriminator-value": "NumericRange",
      "properties": {
        "rangeKind": {
          "type": "string",
          "enum": [
            "Number",
            "Speed",
            "Weight",
            "Length",
            "Volume",
            "Area",
            "Age",
            "Information",
            "Temperature",
            "Currency"
          ],
          "x-ms-enum": {
            "name": "RangeKind",
            "modelAsString": true
          },
          "description": "The kind of range that the resolution object represents."
        },
        "minimum": {
          "type": "number",
          "format": "double",
          "description": "The beginning value of  the interval."
        },
        "maximum": {
          "type": "number",
          "format": "double",
          "description": "The ending value of the interval."
        }
      },
      "required": [
        "rangeKind",
        "minimum",
        "maximum"
      ]
    },
    "TextSpanResolution": {
      "description": "A resolution that captures textspan matches.",
      "allOf": [
        {
          "$ref": "#/definitions/BaseResolution"
        }
      ],
      "type": "object",
      "x-ms-discriminator-value": "TextSpan",
      "properties": {
        "value": {
          "type": "string"
        }
      },
      "required": [
        "value"
      ]
    },
    "TemporalModifier": {
      "type": "string",
      "description": "An optional modifier of a date/time instance.",
      "enum": [
        "AfterApprox",
        "Before",
        "BeforeStart",
        "Approx",
        "ReferenceUndefined",
        "SinceEnd",
        "AfterMid",
        "Start",
        "After",
        "BeforeEnd",
        "Until",
        "End",
        "Less",
        "Since",
        "AfterStart",
        "BeforeApprox",
        "Mid",
        "More"
      ],
      "x-ms-enum": {
        "name": "TemporalModifier",
        "modelAsString": true
      }
    },
    "TimeExpression": {
      "type": "string",
      "description": "An extended ISO 8601 date/time representation as described in (https://github.com/Microsoft/Recognizers-Text/blob/master/Patterns/English/English-DateTime.yaml)"
    },
    "OrchestrationPrediction": {
      "type": "object",
      "description": "This represents the prediction result of an Orchestration project.",
      "x-ms-discriminator-value": "Orchestration",
      "required": [
        "intents"
      ],
      "allOf": [
        {
          "$ref": "#/definitions/BasePrediction"
        }
      ],
      "properties": {
        "intents": {
          "description": "A dictionary that contains all intents. A key is an intent name and a value is its confidence score and target type. The top intent's value also contains the actual response from the target project.",
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/TargetIntentResult"
          }
        },
        "projectKind": {
          "type": "string",
          "description": "The type of the project.",
          "enum": [
            "Conversation",
            "Orchestration"
          ],
          "x-ms-enum": {
            "name": "projectKind",
            "modelAsString": true
          }
        },
        "topIntent": {
          "type": "string",
          "description": "The intent with the highest score."
        }
      }
    },
    "TargetIntentResult": {
      "type": "object",
      "description": "This is the base class of an intent prediction",
      "discriminator": "targetProjectKind",
      "required": [
        "confidenceScore",
        "targetProjectKind"
      ],
      "properties": {
        "targetProjectKind": {
          "type": "string",
          "description": "This discriminator property specifies the type of the target project that returns the response.",
          "enum": [
            "Luis",
            "Conversation",
            "QuestionAnswering",
            "NonLinked"
          ],
          "x-ms-enum": {
            "name": "targetProjectKind",
            "modelAsString": true
          }
        },
        "apiVersion": {
          "type": "string",
          "description": "The API version used to call a target service."
        },
        "confidenceScore": {
          "type": "number",
          "format": "double",
          "x-ms-client-name": "confidence",
          "description": "The prediction score and it ranges from 0.0 to 1.0.",
          "minimum": 0,
          "maximum": 1
        }
      }
    },
    "ExtractiveSummarizationTaskParameters": {
      "type": "object",
      "description": "Supported parameters for an Extractive Summarization task.",
      "properties": {
        "sentenceCount": {
          "type": "integer",
          "default": 3
        },
        "sortBy": {
          "$ref": "#/definitions/ExtractiveSummarizationSortingCriteria"
        },
        "stringIndexType": {
          "$ref": "#/definitions/LanguageStringIndexType"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/LanguagePreBuiltTaskParameters_10_01_preview"
        }
      ]
    },
    "ExtractiveSummarizationLROTask": {
      "type": "object",
      "description": "An object representing the task definition for an Extractive Summarization task.",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/ExtractiveSummarizationTaskParameters"
        },
        "kind": {
          "type": "string",
          "enum": [
            "ExtractiveSummarization"
          ],
          "default": "ExtractiveSummarization",
          "x-ms-visibility": "internal",
          "x-ms-enum": {
            "name": "AnalyzeTextLROTaskKind",
            "modelAsString": true
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/LanguageAnalyzeTextLROTask"
        }
      ],
      "required": [ "kind" ],
      "x-ms-discriminator-value": "ExtractiveSummarization"
    },
    "ExtractiveSummarizationResult": {
      "type": "object",
      "properties": {
        "documents": {
          "type": "array",
          "description": "Response by document",
          "items": {
            "$ref": "#/definitions/ExtractedSummaryDocumentResultWithDetectedLanguage"
          }
        }
      },
      "required": [
        "documents"
      ]
    },
    "ExtractiveSummarizationSortingCriteria": {
      "type": "string",
      "default": "Offset",
      "description": "The sorting criteria to use for the results of Extractive Summarization.",
      "enum": [
        "Offset",
        "Rank"
      ],
      "x-ms-enum": {
        "name": "ExtractiveSummarizationSortingCriteria",
        "modelAsString": true,
        "values": [
          {
            "name": "Offset",
            "description": "Indicates that results should be sorted in order of appearance in the text.",
            "value": "Offset"
          },
          {
            "name": "Rank",
            "description": "Indicates that results should be sorted in order of importance (i.e. rank score) according to the model.",
            "value": "Rank"
          }
        ]
      }
    },
    "ExtractedSummaryDocumentResultWithDetectedLanguage": {
      "type": "object",
      "properties": {
        "sentences": {
          "type": "array",
          "description": "A ranked list of sentences representing the extracted summary.",
          "items": {
            "$ref": "#/definitions/ExtractedSummarySentence"
          }
        },
        "detectedLanguage": {
          "$ref": "#/definitions/DetectedLanguage",
          "description": "If 'language' is set to 'auto' for the document in the request this field will contain a 2 letter ISO 639-1 representation of the language detected for this document."
        }
      }
    },
    "ExtractedSummaryDocumentResult": {
      "type": "object",
      "properties": {
        "sentences": {
          "type": "array",
          "description": "A ranked list of sentences representing the extracted summary.",
          "items": {
            "$ref": "#/definitions/ExtractedSummarySentence"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/DocumentResult"
        }
      ],
      "required": [
        "sentences"
      ]
    },
    "ExtractedSummarySentence": {
      "type": "object",
      "required": [
        "text",
        "rankScore",
        "offset",
        "length"
      ],
      "properties": {
        "text": {
          "type": "string",
          "description": "The extracted sentence text."
        },
        "rankScore": {
          "type": "number",
          "format": "double",
          "description": "A double value representing the relevance of the sentence within the summary. Higher values indicate higher importance."
        },
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "The sentence offset from the start of the document, based on the value of the parameter StringIndexType."
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "The length of the sentence."
        }
      }
    },
    "ExtractiveSummarizationLROResult": {
      "type": "object",
      "properties": {
        "results": {
          "$ref": "#/definitions/ExtractiveSummarizationResult"
        }
      },
      "required": [
        "results"
      ],
      "x-ms-discriminator-value": "ExtractiveSummarizationLROResults"
    },
    "AbstractiveSummarizationLROTask": {
      "type": "object",
      "description": "An object representing the task definition for an Abstractive Summarization task.",
      "properties": {
        "parameters": {
          "$ref": "#/definitions/AbstractiveSummarizationTaskParameters"
        },
        "kind": {
          "type": "string",
          "enum": [
            "AbstractiveSummarization"
          ],
          "default": "AbstractiveSummarization",
          "x-ms-visibility": "internal",
          "x-ms-enum": {
            "name": "AnalyzeTextLROTaskKind",
            "modelAsString": true
          }
        }
      },
      "required": [ "kind" ],
      "x-ms-discriminator-value": "AbstractiveSummarization"
    },
    "AbstractiveSummarizationTaskParameters": {
      "type": "object",
      "description": "Supported parameters for the Abstractive Summarization task.",
      "properties": {
        "sentenceCount": {
          "type": "integer",
          "format": "int32",
          "description": "It controls the approximate number of sentences in the output summaries."
        },
        "stringIndexType": {
          "$ref": "#/definitions/LanguageStringIndexType"
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/LanguagePreBuiltTaskParameters_10_01_preview"
        }
      ]
    },
    "AbstractiveSummarizationLROResult": {
      "type": "object",
      "description": "An object representing the results for an Abstractive Summarization task.",
      "properties": {
        "results": {
          "$ref": "#/definitions/AbstractiveSummarizationResult"
        }
      },
      "required": [
        "results"
      ],
      "x-ms-discriminator-value": "AbstractiveSummarizationLROResults"
    },
    "AbstractiveSummarizationResultBase": {
      "type": "object",
      "description": "An object representing the summarization results of each document.",
      "properties": {
        "documents": {
          "type": "array",
          "description": "Response by document",
          "items": {
            "$ref": "#/definitions/AbstractiveSummaryDocumentResultWithDetectedLanguage"
          }
        }
      },
      "required": [
        "documents"
      ]
    },
    "AbstractiveSummarizationResult": {
      "type": "object",
      "description": "An object representing the pre-build summarization results of each document.",
      "properties": {
        "documents": {
          "type": "array",
          "description": "Response by document",
          "items": {
            "$ref": "#/definitions/AbstractiveSummaryDocumentResultWithDetectedLanguage"
          }
        }
      },
      "required": [
        "documents"
      ]
    },
    "AbstractiveSummaryDocumentResultWithDetectedLanguage": {
      "type": "object",
      "description": "An object representing the summarization result of a single document with detected language.",
      "properties": {
        "summaries": {
          "type": "array",
          "description": "A list of abstractive summaries.",
          "items": {
            "$ref": "#/definitions/AbstractiveSummary"
          }
        },
        "id": {
          "type": "string",
          "description": "Unique, non-empty document identifier."
        },
        "warnings": {
          "type": "array",
          "description": "Warnings encountered while processing document.",
          "items": {
            "$ref": "#/definitions/LanguageDocumentWarning"
          }
        },
        "statistics": {
          "description": "if showStats=true was specified in the request this field will contain information about the document payload.",
          "$ref": "#/definitions/DocumentStatistics"
        },
        "detectedLanguage": {
          "$ref": "#/definitions/DetectedLanguage",
          "description": "If 'language' is set to 'auto' for the document in the request this field will contain a 2 letter ISO 639-1 representation of the language detected for this document."
        }
      }
    },
    "AbstractiveSummaryDocumentResult": {
      "type": "object",
      "description": "An object representing the summarization result of a single document.",
      "properties": {
        "summaries": {
          "type": "array",
          "description": "A list of abstractive summaries.",
          "items": {
            "$ref": "#/definitions/AbstractiveSummary"
          }
        }
      },
      "allOf": [
        {
          "$ref": "#/definitions/DocumentResult"
        }
      ],
      "required": [
        "summaries"
      ]
    },
    "SummaryContext": {
      "type": "object",
      "description": "The context of the summary.",
      "required": [
        "offset",
        "length"
      ],
      "properties": {
        "offset": {
          "type": "integer",
          "format": "int32",
          "description": "Start position for the context. Use of different 'stringIndexType' values can affect the offset returned."
        },
        "length": {
          "type": "integer",
          "format": "int32",
          "description": "The length of the context. Use of different 'stringIndexType' values can affect the length returned."
        }
      }
    },
    "AbstractiveSummary": {
      "type": "object",
      "description": "An object representing a single summary with context for given document.",
      "properties": {
        "text": {
          "type": "string",
          "description": "The text of the summary."
        },
        "contexts": {
          "type": "array",
          "description": "The context list of the summary.",
          "items": {
            "$ref": "#/definitions/SummaryContext"
          }
        }
      },
      "required": [
        "text"
      ]
    }
  },
  "parameters": {
    "LanguageEndpoint": {
      "name": "Endpoint",
      "description": "Supported Cognitive Services endpoint (e.g., https://<resource-name>.api.cognitiveservices.azure.com).",
      "x-ms-parameter-location": "client",
      "required": true,
      "type": "string",
      "in": "path",
      "x-ms-skip-url-encoding": true
    },
    "LanguageProjectNameQueryParameter": {
      "name": "projectName",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The name of the project to use.",
      "x-ms-parameter-location": "method"
    },
    "LanguageProjectNamePathParameter": {
      "name": "projectName",
      "in": "path",
      "required": true,
      "type": "string",
      "maxLength": 100,
      "description": "The name of the project to use.",
      "x-ms-parameter-location": "method"
    },
    "LanguageDeploymentNameQueryParameter": {
      "name": "deploymentName",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "The name of the specific deployment of the project to use.",
      "x-ms-parameter-location": "method"
    },
    "LanguageDeploymentNamePathParameter": {
      "name": "deploymentName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the specific deployment of the project to use.",
      "x-ms-parameter-location": "method"
    },
    "LanguageApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client API version.",
      "x-ms-visibility": "internal",
      "default": "2022-05-01"
    },
    "LanguageApiVersionParameter10_01": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client API version.",
      "x-ms-visibility": "internal",
      "default": "2022-10-01-preview"
    },
    "LanguageTopParameter": {
      "name": "top",
      "in": "query",
      "description": "The maximum number of resources to return from the collection.",
      "type": "integer",
      "format": "int32",
      "x-ms-parameter-location": "method"
    },
    "LanguageSkipParameter": {
      "name": "skip",
      "in": "query",
      "description": "An offset into the collection of the first resource to be returned.",
      "type": "integer",
      "format": "int32",
      "x-ms-parameter-location": "method"
    },
    "LanguageMaxPageSizeParameter": {
      "name": "maxpagesize",
      "in": "query",
      "description": "The maximum number of resources to include in a single response.",
      "type": "integer",
      "format": "int32",
      "x-ms-parameter-location": "method"
    },
    "ApiVersion": {
      "name": "ApiVersion",
      "description": "Azure Cognitive Service for Language version (for example, v3.0).",
      "x-ms-parameter-location": "client",
      "required": true,
      "type": "string",
      "enum": [
        "v3.1"
      ],
      "in": "path",
      "x-ms-skip-url-encoding": true
    },
    "Endpoint": {
      "name": "Endpoint",
      "description": "Supported Cognitive Services endpoints (protocol and hostname, for example: https://westus.api.cognitive.microsoft.com).",
      "x-ms-parameter-location": "client",
      "required": true,
      "type": "string",
      "in": "path",
      "x-ms-skip-url-encoding": true
    },
    "StringIndexType": {
      "name": "stringIndexType",
      "in": "query",
      "type": "string",
      "description": "(Optional) Specifies the method used to interpret string offsets.  Defaults to Text Elements (Graphemes) according to Unicode v8.0.0. For additional information see https://aka.ms/text-analytics-offsets",
      "default": "TextElement_v8",
      "enum": [
        "TextElement_v8",
        "UnicodeCodePoint",
        "Utf16CodeUnit"
      ],
      "x-ms-enum": {
        "name": "StringIndexType",
        "modelAsString": true,
        "values": [
          {
            "value": "TextElement_v8",
            "description": "Returned offset and length values will correspond to TextElements (Graphemes and Grapheme clusters) confirming to the Unicode 8.0.0 standard. Use this option if your application is written in .Net Framework or .Net Core and you will be using StringInfo."
          },
          {
            "value": "UnicodeCodePoint",
            "description": "Returned offset and length values will correspond to Unicode code points. Use this option if your application is written in a language that support Unicode, for example Python."
          },
          {
            "value": "Utf16CodeUnit",
            "description": "Returned offset and length values will correspond to UTF-16 code units. Use this option if your application is written in a language that support Unicode, for example Java, JavaScript."
          }
        ]
      },
      "x-ms-parameter-location": "method"
    },
    "PiiCategories": {
      "description": "(Optional) describes the PII categories to return",
      "in": "query",
      "collectionFormat": "csv",
      "items": {
        "type": "string",
        "x-ms-enum": {
          "name": "PiiCategory",
          "modelAsString": true
        },
        "enum": [
          "ABARoutingNumber",
          "ARNationalIdentityNumber",
          "AUBankAccountNumber",
          "AUDriversLicenseNumber",
          "AUMedicalAccountNumber",
          "AUPassportNumber",
          "AUTaxFileNumber",
          "AUBusinessNumber",
          "AUCompanyNumber",
          "ATIdentityCard",
          "ATTaxIdentificationNumber",
          "ATValueAddedTaxNumber",
          "AzureDocumentDBAuthKey",
          "AzureIAASDatabaseConnectionAndSQLString",
          "AzureIoTConnectionString",
          "AzurePublishSettingPassword",
          "AzureRedisCacheString",
          "AzureSAS",
          "AzureServiceBusString",
          "AzureStorageAccountKey",
          "AzureStorageAccountGeneric",
          "BENationalNumber",
          "BENationalNumberV2",
          "BEValueAddedTaxNumber",
          "BRCPFNumber",
          "BRLegalEntityNumber",
          "BRNationalIDRG",
          "BGUniformCivilNumber",
          "CABankAccountNumber",
          "CADriversLicenseNumber",
          "CAHealthServiceNumber",
          "CAPassportNumber",
          "CAPersonalHealthIdentification",
          "CASocialInsuranceNumber",
          "CLIdentityCardNumber",
          "CNResidentIdentityCardNumber",
          "CreditCardNumber",
          "HRIdentityCardNumber",
          "HRNationalIDNumber",
          "HRPersonalIdentificationNumber",
          "HRPersonalIdentificationOIBNumberV2",
          "CYIdentityCard",
          "CYTaxIdentificationNumber",
          "CZPersonalIdentityNumber",
          "CZPersonalIdentityV2",
          "DKPersonalIdentificationNumber",
          "DKPersonalIdentificationV2",
          "DrugEnforcementAgencyNumber",
          "EEPersonalIdentificationCode",
          "EUDebitCardNumber",
          "EUDriversLicenseNumber",
          "EUGPSCoordinates",
          "EUNationalIdentificationNumber",
          "EUPassportNumber",
          "EUSocialSecurityNumber",
          "EUTaxIdentificationNumber",
          "FIEuropeanHealthNumber",
          "FINationalID",
          "FINationalIDV2",
          "FIPassportNumber",
          "FRDriversLicenseNumber",
          "FRHealthInsuranceNumber",
          "FRNationalID",
          "FRPassportNumber",
          "FRSocialSecurityNumber",
          "FRTaxIdentificationNumber",
          "FRValueAddedTaxNumber",
          "DEDriversLicenseNumber",
          "DEPassportNumber",
          "DEIdentityCardNumber",
          "DETaxIdentificationNumber",
          "DEValueAddedNumber",
          "GRNationalIDCard",
          "GRNationalIDV2",
          "GRTaxIdentificationNumber",
          "HKIdentityCardNumber",
          "HUValueAddedNumber",
          "HUPersonalIdentificationNumber",
          "HUTaxIdentificationNumber",
          "INPermanentAccount",
          "INUniqueIdentificationNumber",
          "IDIdentityCardNumber",
          "InternationalBankingAccountNumber",
          "IEPersonalPublicServiceNumber",
          "IEPersonalPublicServiceNumberV2",
          "ILBankAccountNumber",
          "ILNationalID",
          "ITDriversLicenseNumber",
          "ITFiscalCode",
          "ITValueAddedTaxNumber",
          "JPBankAccountNumber",
          "JPDriversLicenseNumber",
          "JPPassportNumber",
          "JPResidentRegistrationNumber",
          "JPSocialInsuranceNumber",
          "JPMyNumberCorporate",
          "JPMyNumberPersonal",
          "JPResidenceCardNumber",
          "LVPersonalCode",
          "LTPersonalCode",
          "LUNationalIdentificationNumberNatural",
          "LUNationalIdentificationNumberNonNatural",
          "MYIdentityCardNumber",
          "MTIdentityCardNumber",
          "MTTaxIDNumber",
          "NLCitizensServiceNumber",
          "NLCitizensServiceNumberV2",
          "NLTaxIdentificationNumber",
          "NLValueAddedTaxNumber",
          "NZBankAccountNumber",
          "NZDriversLicenseNumber",
          "NZInlandRevenueNumber",
          "NZMinistryOfHealthNumber",
          "NZSocialWelfareNumber",
          "NOIdentityNumber",
          "PHUnifiedMultiPurposeIDNumber",
          "PLIdentityCard",
          "PLNationalID",
          "PLNationalIDV2",
          "PLPassportNumber",
          "PLTaxIdentificationNumber",
          "PLREGONNumber",
          "PTCitizenCardNumber",
          "PTCitizenCardNumberV2",
          "PTTaxIdentificationNumber",
          "ROPersonalNumericalCode",
          "RUPassportNumberDomestic",
          "RUPassportNumberInternational",
          "SANationalID",
          "SGNationalRegistrationIdentityCardNumber",
          "SKPersonalNumber",
          "SITaxIdentificationNumber",
          "SIUniqueMasterCitizenNumber",
          "ZAIdentificationNumber",
          "KRResidentRegistrationNumber",
          "ESDNI",
          "ESSocialSecurityNumber",
          "ESTaxIdentificationNumber",
          "SQLServerConnectionString",
          "SENationalID",
          "SENationalIDV2",
          "SEPassportNumber",
          "SETaxIdentificationNumber",
          "SWIFTCode",
          "CHSocialSecurityNumber",
          "TWNationalID",
          "TWPassportNumber",
          "TWResidentCertificate",
          "THPopulationIdentificationCode",
          "TRNationalIdentificationNumber",
          "UKDriversLicenseNumber",
          "UKElectoralRollNumber",
          "UKNationalHealthNumber",
          "UKNationalInsuranceNumber",
          "UKUniqueTaxpayerNumber",
          "USUKPassportNumber",
          "USBankAccountNumber",
          "USDriversLicenseNumber",
          "USIndividualTaxpayerIdentification",
          "USSocialSecurityNumber",
          "UAPassportNumberDomestic",
          "UAPassportNumberInternational",
          "Organization",
          "Email",
          "URL",
          "Age",
          "PhoneNumber",
          "IPAddress",
          "Date",
          "Person",
          "Address",
          "All",
          "Default"
        ]
      },
      "name": "piiCategories",
      "required": false,
      "type": "array",
      "uniqueItems": true,
      "x-ms-parameter-location": "method"
    },
    "JobId": {
      "description": "Job ID",
      "format": "uuid",
      "in": "path",
      "name": "jobId",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "AnalyzeJobId": {
      "description": "Job ID for Analyze",
      "in": "path",
      "name": "jobId",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "ShowStats": {
      "name": "showStats",
      "in": "query",
      "description": "(Optional) if set to true, response will contain request and document level statistics.",
      "type": "boolean",
      "required": false,
      "x-ms-parameter-location": "method"
    },
    "LoggingOptOut": {
      "name": "loggingOptOut",
      "in": "query",
      "description": "(Optional) If set to true, you opt-out of having your text input logged for troubleshooting. By default, Azure Cognitive Service for Language logs your input text for 48 hours, solely to allow for troubleshooting issues in providing you with the Azure Cognitive Service for Language natural language processing functions. Setting this parameter to true, disables input logging and may limit our ability to remediate issues that occur.  Please see Cognitive Services Compliance and Privacy notes at https://aka.ms/cs-compliance for additional details, and Microsoft Responsible AI principles at https://www.microsoft.com/en-us/ai/responsible-ai.",
      "type": "boolean",
      "required": false,
      "x-ms-parameter-location": "method"
    },
    "ModelVersion": {
      "name": "model-version",
      "in": "query",
      "description": "(Optional) This value indicates which model will be used for scoring. If a model-version is not specified, the API should default to the latest, non-preview version. ",
      "type": "string",
      "required": false,
      "x-ms-parameter-location": "method"
    },
    "MultiLanguageInput": {
      "in": "body",
      "name": "input",
      "description": "Collection of documents to analyze.",
      "required": true,
      "schema": {
        "$ref": "#/definitions/MultiLanguageBatchInput"
      },
      "x-ms-parameter-location": "method"
    },
    "LanguageInput": {
      "in": "body",
      "name": "input",
      "description": "Collection of documents to analyze for language endpoint.",
      "required": true,
      "schema": {
        "$ref": "#/definitions/LanguageBatchInput"
      },
      "x-ms-parameter-location": "method"
    },
    "ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client API version.",
      "x-ms-visibility": "internal",
      "default": "2022-05-01"
    },
    "ConversationalApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "type": "string",
      "description": "Client API version.",
      "x-ms-visibility": "internal",
      "default": "2022-05-15-preview"
    },
    "ConversationAnalysisOptions": {
      "name": "ConversationAnalysisOptions",
      "in": "body",
      "required": true,
      "schema": {
        "$ref": "#/definitions/ConversationAnalysisOptions"
      },
      "description": "Post body of the request.",
      "x-ms-parameter-location": "method"
    }
  },
  "x-ms-connector-metadata": [
    {
      "propertyName": "Website",
      "propertyValue": "https://azure.microsoft.com/services/cognitive-services/text-analytics/"
    }
  ]
}