#SETUP: PowerFxV1CompatibilityRules
// Test mutations on a collection from ForAll() 

// These are all verified in Power Apps 
// 

>> Set(t, Sequence(4))
Table({Value:1},{Value:2},{Value:3},{Value:4})

>> Collect(t, { Value : 99}); Concat(t, Value)
"123499"

>> Set(t, ForAll(Sequence(4), Value*10))
Table({Value:10},{Value:20},{Value:30},{Value:40})

>> Collect(t, { Value : 99}); Concat(t, Value) // After t was changed
"1020304099"

// Initializing t2
>> Set(t2, [1])
Table({Value:1})

>> With({t: Sequence(5)}, Set(t2, ForAll(t, Value * 2))); t2
Table({Value:2},{Value:4},{Value:6},{Value:8},{Value:10})

// Inner sequence is unchaged 
>> With( { t : Sequence(5)}, 
     Collect(t2, { Value : 99 }); 
     Concat(t, Value) & "," & Concat(t2, Value)
   )
"12345,24681099"

// short circuiting shouldn't execute any loops for a blank or empty table

>> Set(t3,If(1<0,[1,2,3]))
Blank()

>> ForAll(t3,Patch(t3,ThisRecord,{Value:4}))
Blank()

>> 1;t3
Blank()

// interpretation of an empty table

>> Set(t4,[1])
Table({Value:1})

// ; true on the end so that we get the same result with and without V1Compat
>> Remove(t4,First(t4)); true
true

>> 1;t4
Table()

// Should do nothing as t4 is empty
>> ForAll(t4,Patch(t4,ThisRecord,{Value:4}))
Table()

>> 2;t4
Table()

>> Set(t5,[1])
Table({Value:1})

// ForAll shouldn't execute the collect, even once
>> ForAll(t4,Collect(t5,{Value:9.1}))
Table()

// With shouldn't execute the collect, even once
>> With(First(t4),Collect(t5,{Value:9.2}))
Blank()

// interpretation of one record

>> 1;t5
Table({Value:1})

>> Collect(t4,{Value:1})
{Value:1}

// ForAll should execute the collect, exactly once
>> ForAll(t4,Collect(t5,{Value:8.1}))
Table({Value:8.1})

// With shouldn execute the collect, exactly once
>> With(First(t4),Collect(t5,{Value:8.2}))
{Value:8.2}

>> 2;t5
Table({Value:1},{Value:8.1},{Value:8.2})

// interpretation of a blank table

>> Set( t4, Blank() )
Blank()

// ForAll shouldn't execute the collect, even once
>> ForAll(t4,Collect(t5,{Value:7.1}))
Blank()

// With shouldn't execute the collect, even once
>> With(First(t4),Collect(t5,{Value:7.2}))
Blank()

>> 3;t5
Table({Value:1},{Value:8.1},{Value:8.2})
