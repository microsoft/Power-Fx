#SETUP: PowerFxV1CompatibilityRules

// BASICS

// Newly declared vars are output as part of the testing infrastructure.  Set is actually returning Void.
>> Set( x, {a:1, b:2})
{a:1,b:2}

>> Set( y, x )
{a:1,b:2}

>> Set( x.a, 3 )
If(true, {test:1}, "Void value (result of the expression can't be used).")

>> x // after set( x.a, ... )
{a:3,b:2}

>> y // after set( x.a, ... )
{a:1,b:2}

>> Set( y.b, 4 )
If(true, {test:1}, "Void value (result of the expression can't be used).")

>> x // after set( y.b, ... )
{a:3,b:2}

>> y // after set( y.b, ... )
{a:1,b:4}

// FUNCTIONS THAT PROPOGATE MUTABILITY

>> Set( a, [1,2,3] )
Table({Value:1},{Value:2},{Value:3})

>> Set( b, a )
Table({Value:1},{Value:2},{Value:3})

>> Set( First(a).Value, 4 )
If(true, {test:1}, "Void value (result of the expression can't be used).")

>> a // after Set( First(a).Value, 4 )
Table({Value:4},{Value:2},{Value:3})

>> b // after Set( First(a).Value, 4 )
Table({Value:1},{Value:2},{Value:3})

>> Set( Last(b).Value, 5 )
If(true, {test:1}, "Void value (result of the expression can't be used).")

>> a // after Set( Last(b).Value, 5 )
Table({Value:4},{Value:2},{Value:3})

>> b // after Set( Last(b).Value, 5 )
Table({Value:1},{Value:2},{Value:5})

>> Set( Index(b,2).Value, 6 )
If(true, {test:1}, "Void value (result of the expression can't be used).")

>> a // after Set( Index(b,2).Value, 6 )
Table({Value:4},{Value:2},{Value:3})

>> b // after Set( Index(b,2).Value, 6 )
Table({Value:1},{Value:6},{Value:5})

// FUNCTIONS THAT DON'T PROPOGATE MUTABILITY

>> Set( Index(FirstN(b,3),2).Value, 6 )
Errors: Error 25-31: The value passed to the 'Set' function cannot be changed.

>> Set( Index(LastN(b,3),2).Value, 6 )
Errors: Error 24-30: The value passed to the 'Set' function cannot be changed.

>> Set( Index(Filter(b,Value>0),2).Value, 6 )
Errors: Error 31-37: The value passed to the 'Set' function cannot be changed.

>> Set( Index(Sort(b,Value),2).Value, 6 )
Errors: Error 27-33: The value passed to the 'Set' function cannot be changed.

>> Set( Index(SortByColumns(b,Value),2).Value, 6 )
Errors: Error 36-42: The value passed to the 'Set' function cannot be changed.

>> Set( First(FirstN(b,3)).Value, 6 )
Errors: Error 23-29: The value passed to the 'Set' function cannot be changed.

>> Set( First(LastN(b,3)).Value, 6 )
Errors: Error 22-28: The value passed to the 'Set' function cannot be changed.

>> Set( First(Filter(b,Value>0)).Value, 6 )
Errors: Error 29-35: The value passed to the 'Set' function cannot be changed.

>> Set( First(Sort(b,Value)).Value, 6 )
Errors: Error 25-31: The value passed to the 'Set' function cannot be changed.

>> Set( First(SortByColumns(b,Value)).Value, 6 )
Errors: Error 34-40: The value passed to the 'Set' function cannot be changed.

>> Set( Last(FirstN(b,3)).Value, 6 )
Errors: Error 22-28: The value passed to the 'Set' function cannot be changed.

>> Set( Last(LastN(b,3)).Value, 6 )
Errors: Error 21-27: The value passed to the 'Set' function cannot be changed.

>> Set( Last(Filter(b,Value>0)).Value, 6 )
Errors: Error 28-34: The value passed to the 'Set' function cannot be changed.

>> Set( Last(Sort(b,Value)).Value, 6 )
Errors: Error 24-30: The value passed to the 'Set' function cannot be changed.

>> Set( Last(SortByColumns(b,Value)).Value, 6 )
Errors: Error 33-39: The value passed to the 'Set' function cannot be changed.

// LOOKUP

// LITERALS

>> Set( {a:1,b:2}.a, 3 )
Errors: Error 14-16: The value passed to the 'Set' function cannot be changed.

>> Set( First([1,2,3]).Value, 4 )
Errors: Error 19-25: The value passed to the 'Set' function cannot be changed.

>> Set( First(Table({a:1},{a:2},{a:3})).a, 5 )
Errors: Error 36-38: The value passed to the 'Set' function cannot be changed.

