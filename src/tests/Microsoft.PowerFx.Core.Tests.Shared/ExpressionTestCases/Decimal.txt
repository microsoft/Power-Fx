#SETUP: DecimalSupport,PowerFxV1CompatibilityRules

// Default to invariant
>> Decimal("-5")
-5

>> Decimal("5")
5

>> Decimal("123,456.78")
123456.78

>> Decimal("xxx")
Error({Kind:ErrorKind.InvalidArgument})

>> Decimal( "$ 12.34" )
12.34

>> Decimal( "24e3" )
24000

>> Decimal( "12.34%" )
0.1234

>> IsError(Decimal("%"))
true

// leading and trailing whitespace ignored
>> Decimal(" %10")
0.1

>> Decimal("10% ")
0.1

// percent can also be a prefix
>> Decimal("%10")
0.1

// Value on a number is just passthrough
>> Decimal(123)
123

// ******** VALID STRING PARAMETERS ********

// ******** NUMBERS IN STRING PARAMETERS ********

>> Decimal("0")
0
 
>> Decimal("1")
1
 
>> Decimal("-1")
-1
 
>> Decimal("-1000")
-1000

>> Decimal("0.0")
0
 
>> Decimal("1.23")
1.23
 


>> Decimal(" 1.23 ")
1.23

>> Decimal(" -1.23 ")
-1.23

>> Decimal("1.2")
1.2
 
>> Decimal(".123")
0.123
 
>> Decimal("123.")
123
 
>> Decimal("123.0")
123
 
>> Decimal("+.123")
0.123
 
>> Decimal("-.123")
-0.123
 
>> Decimal("-123.")
-123
 
>> Decimal("2e3")
2000
 
>> Decimal("2.1e3")
2100
 
>> Decimal("-2.1e3")
-2100

>> Decimal("100e-2")
1

>> Decimal("2e+3")
2000

>> Decimal("+2e3")
2000

>> Decimal("+100e-2")
1

>> Decimal("+2e+3")
2000

>> Decimal("-2e3")
-2000

>> Decimal("-100e-2")
-1

>> Decimal("-2e+3")
-2000

>> Decimal("-1,000")
-1000

>> Decimal("-1,000,000")
-1000000

>> Decimal("1,000,000")
1000000

>> Decimal("1,000")
1000

>> Decimal("$1234.567")
1234.567

>> Decimal("$ 1234.567")
1234.567

>> Decimal("$+1234.567")
1234.567

>> Decimal("$ +1234.567")
1234.567

>> Decimal("$-1234.567")
-1234.567

>> Decimal("$ -1234.567")
-1234.567

>> Decimal("-$1234.567")
-1234.567

>> Decimal("+$1234.567")
1234.567

>> Decimal("%123")
1.23

>> Decimal("%1.23")
0.0123

>> Decimal(" %123.")
1.23

>> Decimal("+%123")
1.23

>> Decimal("+%1.23")
0.0123

>> Decimal("+%123.")
1.23

>> Decimal("%+123")
1.23

>> Decimal("%+1.23")
0.0123

>> Decimal("%+123.")
1.23

>> Decimal("%-123")
-1.23

>> Decimal("%-1.23")
-0.0123

>> Decimal("%-123.")
-1.23

>> Decimal("-%123")
-1.23

>> Decimal("-%1.23")
-0.0123

>> Decimal("-%123.")
-1.23

>> Decimal("123%")
1.23

>> Decimal("1.23%")
0.0123

>> Decimal("123.%")
1.23

>> Decimal("+123%")
1.23

>> Decimal("+1.23%")
0.0123

>> Decimal("+123.%")
1.23

>> Decimal("-123%")
-1.23

>> Decimal("-1.23%")
-0.0123

>> Decimal("-123.%")
-1.23

>> Decimal("2.1e3%")
21

>> Decimal("%2e3")
20

>> Decimal("%100e-2")
0.01

>> Decimal("%2e+3")
20

>> Decimal("+%2e3")
20

>> Decimal("+%100e-2")
0.01

>> Decimal("+%2e+3")
20

>> Decimal("2e3%")
20

>> Decimal("100e-2%")
0.01

>> Decimal("2e+3%")
20

>> Decimal("-%100e-2")
-0.01

>> Decimal("+2e3%")
20

>> Decimal("+100e-2%")
0.01

>> Decimal("+2e+3%")
20

>> Decimal("-%2e3")
-20

>> Decimal("-%2e+3")
-20

>> Decimal("-2e3%")
-20

>> Decimal("-100e-2%")
-0.01

>> Decimal("-2e+3%")
-20

>> Decimal("% 123")
1.23

>> Decimal("% 1.23")
0.0123

>> Decimal("% 123.")
1.23

>> Decimal("% -123")
-1.23

>> Decimal("%" & Char(9) /* \t */ & "-123")
-1.23

>> Decimal("123 %")
1.23

>> Decimal("123" & Char(9) /* \t */ & "%")
1.23

>> Decimal("1.23 %")
0.0123

>> Decimal("+123 %")
1.23

>> Decimal("-123 %")
-1.23

>> Decimal("-123" & Char(9) /* \t */ & "%")
-1.23

>> Decimal("% 2e3")
20

>> Decimal("% 100e-2")
0.01

>> Decimal("% 2e+3")
20

>> Decimal("2e3 %")
20

>> Decimal("100e-2 %")
0.01

>> Decimal("- 123 %")
-1.23

>> Decimal("- 1000")
-1000

>> Decimal("+ 1000")
1000

>> Decimal("- 1,000,000")
-1000000

>> Decimal("+ 1,000,000")
1000000

>> Decimal("$+ 1234.567")
1234.567

>> Decimal("$ + 1234.567")
1234.567

>> Decimal("$- 1234.567")
-1234.567

>> Decimal("$ - 1234.567")
-1234.567

>> Decimal("- $1234.567")
-1234.567

>> Decimal("- $ 1234.567")
-1234.567

>> Decimal("+ $1234.567")
1234.567

>> Decimal("+ $ 1234.567")
1234.567

>> Decimal("+ .123")
0.123

>> Decimal("- .123")
-0.123

>> Decimal("- 123.")
-123

>> Decimal("+ 123.")
123

>> Decimal("+ %123")
1.23

>> Decimal("+% 123")
1.23

>> Decimal("+ % 123")
1.23

>> Decimal("%- 123")
-1.23

>> Decimal("% - 123")
-1.23

>> Decimal("+ 123%")
1.23

>> Decimal("+ 123 %")
1.23

>> Decimal("- 123%")
-1.23

>> Decimal("+ %2e3")
20

>> Decimal("+% 2e3")
20

>> Decimal("+ % 2e3")
20

>> Decimal("(123)")
-123

>> Decimal(" (123)")
-123



>> Decimal("(123 )")
-123

>> Decimal("(123) ")
-123

>> Decimal("%(123)")
-1.23


>> Decimal("(123) %")
-1.23

>> Decimal("$(123)")
-123

>> Decimal("($123)")
-123

>> Decimal(" $ (123)")
-123

// ******** NUMBER PARAMETERS ********

>> Decimal(0)
0

>> Decimal(-123.456)
-123.456

// floating point error handling
>> Decimal("1.2e-3")
0.0012

>> Decimal("123,456", "es-ES" )
123.456

// ******** BOOLEAN PARAMETERS ********

>> Decimal(true)
1

>> Decimal(false)
0

// ******** DATE/TIME PARAMETERS ********

>> Decimal(Date(2022,11,21))
44886

>> Decimal(DateTime(2022,11,21,6,0,0))
44886.25

>> Decimal(Time(12,0,0))
0.5

// ******** INVALID, NULL and ERROR PARAMETERS ********

//Alphabetical String passed as parameter
>> Decimal("Hello")
Error({Kind:ErrorKind.InvalidArgument})

//Excel return error (Error message : A value used in the formula is of the wrong data type)
>> Decimal("")
Blank()

//Excel returns True
>> IsError(Decimal(""))
false

//Excel returns 0
>> Decimal(Blank())
Blank()

//Error message: Invalid operation - Division by zero
>> Decimal(1/0)
Error({Kind:ErrorKind.Div0})

//Error message: We cannot convert the value to a number
>> Decimal("%")
Error({Kind:ErrorKind.InvalidArgument})

//Error message: Invalid arguments to the Value function
>> Decimal("1%00")
Error({Kind:ErrorKind.InvalidArgument})

//Error message: Invalid arguments to the Value function [Currency symbol allowed as prefix and not in between the string]
>> Decimal("12$34")
Error({Kind:ErrorKind.InvalidArgument})

//Error message: Invalid arguments to the Value function [Currency symbol allowed as prefix and not in between the string]
>> Decimal("12$34.567")
Error({Kind:ErrorKind.InvalidArgument})

//Error message: Invalid arguments to the Value function [Currency symbol allowed as prefix and not in between the string]
>> Decimal("-12$34")
Error({Kind:ErrorKind.InvalidArgument})

//Error message: Invalid arguments to the Value function [Currency symbol allowed as prefix and not in between the string]
>> Decimal("-12$34.567")
Error({Kind:ErrorKind.InvalidArgument})

// +- together is not valid.
>> Decimal("+-1")
Error({Kind:ErrorKind.InvalidArgument})
  
// +- together is not valid.  
>> Decimal("-+1")
Error({Kind:ErrorKind.InvalidArgument})
  
// 'a' is not allowed.  
>> Decimal("a")
Error({Kind:ErrorKind.InvalidArgument})

// 'a' is not allowed.
>> Decimal("a12")
Error({Kind:ErrorKind.InvalidArgument})

// 'a' is not allowed.  
>> Decimal("12a")
Error({Kind:ErrorKind.InvalidArgument})

// 'b' is not allowed.  
>> Decimal("1b2")
Error({Kind:ErrorKind.InvalidArgument})

// 'c' is not allowed.
>> Decimal("12.33c")
Error({Kind:ErrorKind.InvalidArgument})
  
// 'A' is not allowed.  
>> Decimal("12.33A")
Error({Kind:ErrorKind.InvalidArgument})

// ';' is not allowed as it's not a thousand separator.
>> Decimal("123;456.789")
Error({Kind:ErrorKind.InvalidArgument})

// '#' is not allowed as it's not the default currency symbol for en-US.
>> Decimal("#123,456.789")
Error({Kind:ErrorKind.InvalidArgument})

// '*' is not allowed as it's not the default decimal symbol.
>> Decimal("123,456*789")
Error({Kind:ErrorKind.InvalidArgument})

// ; is not allowed.
>> Decimal("123;")
Error({Kind:ErrorKind.InvalidArgument})

// ' is not allowed.
>> Decimal("123'")
Error({Kind:ErrorKind.InvalidArgument})
 
// " is not allowed. 
// >> Decimal("\"123\"")
// Error({Kind:ErrorKind.Div0})

// multiple decimal separators are not allowed.
>> Decimal("2.3.5")
Error({Kind:ErrorKind.InvalidArgument})

// exponent form and decimal cannot be mixed.
>> Decimal("2e3.5")
Error({Kind:ErrorKind.InvalidArgument})

// exponent form and decimal cannot be mixed.
>> Decimal("2e-3.5")
Error({Kind:ErrorKind.InvalidArgument})

// currency symbol and % cannot be mixed.
>> Decimal("$%1.3")
Error({Kind:ErrorKind.InvalidArgument})

// currency symbol and % cannot be mixed.
>> Decimal("$%1")
Error({Kind:ErrorKind.InvalidArgument})

// multiple occurrences of %.
>> Decimal("%1.3%")
Error({Kind:ErrorKind.InvalidArgument})

// multiple occurrences of %.
>> Decimal("%%1.3")
Error({Kind:ErrorKind.InvalidArgument})

// multiple occurrences of %.
>> Decimal("%1%.3")
Error({Kind:ErrorKind.InvalidArgument})

// invalid occurrence of %.
>> Decimal("0.%3")
Error({Kind:ErrorKind.InvalidArgument})

// invalid occurrence of %.
>> Decimal("1%.3")
Error({Kind:ErrorKind.InvalidArgument})

// invalid occurrence of %.
>> Decimal("1%2.3")
Error({Kind:ErrorKind.InvalidArgument})

// multiple occurrences of %.
>> Decimal("0.%%3")
Error({Kind:ErrorKind.InvalidArgument})

// multiple occurrences of %.
>> Decimal("0.3%%")
Error({Kind:ErrorKind.InvalidArgument})
  
// multiple occurrences of %.
>> Decimal("0.%3%")
Error({Kind:ErrorKind.InvalidArgument})

// -+ cannot be mixed.
>> Decimal("-%+1")
Error({Kind:ErrorKind.InvalidArgument})

// -+ cannot be mixed.
>> Decimal("+%-1")
Error({Kind:ErrorKind.InvalidArgument})

// no +- after decimal symbol.
>> Decimal("100.+3")
Error({Kind:ErrorKind.InvalidArgument})
 
// no +- after decimal symbol.
>> Decimal("100.-3")
Error({Kind:ErrorKind.InvalidArgument})
  
// space anywhere other than beginning/end is not allowed.
>> Decimal("1 .23")
Error({Kind:ErrorKind.InvalidArgument})

// just the decimal symbol is invalid.
>> Decimal(".")
Error({Kind:ErrorKind.InvalidArgument})
  
// invalid.
>> Decimal("+.")
Error({Kind:ErrorKind.InvalidArgument})

// invalid.
>> Decimal("-.")
Error({Kind:ErrorKind.InvalidArgument})

>> Decimal("e")
Error({Kind:ErrorKind.InvalidArgument})

>> Decimal("2e")
Error({Kind:ErrorKind.InvalidArgument})

>> Decimal("2e+")
Error({Kind:ErrorKind.InvalidArgument})

>> Decimal("2e-")
Error({Kind:ErrorKind.InvalidArgument})

>> Decimal("e3")
Error({Kind:ErrorKind.InvalidArgument})

>> Decimal("e+3")
Error({Kind:ErrorKind.InvalidArgument})

>> Decimal("e-3")
Error({Kind:ErrorKind.InvalidArgument})

>> Decimal(" e")
Error({Kind:ErrorKind.InvalidArgument})

>> Decimal("e ")
Error({Kind:ErrorKind.InvalidArgument})

>> Decimal("2e ")
Error({Kind:ErrorKind.InvalidArgument})

>> Decimal(" 2e")
Error({Kind:ErrorKind.InvalidArgument})

>> Decimal(" 2e+")
Error({Kind:ErrorKind.InvalidArgument})

>> Decimal("2e+ ")
Error({Kind:ErrorKind.InvalidArgument})

>> Decimal(" 2e-")
Error({Kind:ErrorKind.InvalidArgument})

>> Decimal("2e- ")
Error({Kind:ErrorKind.InvalidArgument})

>> Decimal(" e3")
Error({Kind:ErrorKind.InvalidArgument})

>> Decimal("e3 ")
Error({Kind:ErrorKind.InvalidArgument})

>> Decimal(" e+3")
Error({Kind:ErrorKind.InvalidArgument})

>> Decimal("e+3 ")
Error({Kind:ErrorKind.InvalidArgument})

>> Decimal(" e-3")
Error({Kind:ErrorKind.InvalidArgument})

>> Decimal("e-3 ")
Error({Kind:ErrorKind.InvalidArgument})

>> Decimal("$12.3%+")
Error({Kind:ErrorKind.InvalidArgument})

>> Decimal("   ")
Error({Kind:ErrorKind.InvalidArgument})

>> Decimal("1 23")
Error({Kind:ErrorKind.InvalidArgument})

>> Decimal("123 .45")
Error({Kind:ErrorKind.InvalidArgument})

>> Decimal("123. 45")
Error({Kind:ErrorKind.InvalidArgument})

>> Decimal("1 23.45")
Error({Kind:ErrorKind.InvalidArgument})

>> Decimal("1  23.45")
Error({Kind:ErrorKind.InvalidArgument})

>> Decimal("123 e45")
Error({Kind:ErrorKind.InvalidArgument})

>> Decimal("123 e 45")
Error({Kind:ErrorKind.InvalidArgument})

>> Decimal("123e+ 45")
Error({Kind:ErrorKind.InvalidArgument})

>> Decimal("123e +45")
Error({Kind:ErrorKind.InvalidArgument})

>> Decimal("123e- 45")
Error({Kind:ErrorKind.InvalidArgument})

>> Decimal("123e -45")
Error({Kind:ErrorKind.InvalidArgument})

// cannot have both () and -
>> Decimal("%(-123)")
Error({Kind:ErrorKind.InvalidArgument})

// cannot have both () and +
>> Decimal("%(+123)")
Error({Kind:ErrorKind.InvalidArgument})

// cannot have both () and -
>> Decimal("(-123)")
Error({Kind:ErrorKind.InvalidArgument})

// cannot have both () and +
>> Decimal("(+123)")
Error({Kind:ErrorKind.InvalidArgument})

>> Decimal(" 1.23")
1.23

>> Decimal("(123)%")
-1.23

>> Decimal("% (123)")
-1.23

>> Decimal(123.456)
123.456

// In en-us, comma is thousand separator. In fr-FR, it's decimal separate.
>> Decimal("123,456")
123456

>> Decimal("123,456", "en-US")
123456

>> Decimal("123,456", "fr-FR")
123.456

//Excel allows only single parameter
>> Decimal( "123,456", "es-ES" )
123.456

// .Net 4.6.2 and 7 generates a parsing error
// Excel allows only single parameter
#DISABLE.NET: 462,70
>> Decimal("€1 234,56","fr")
1234.56

// .Net 7 generates a parsing error
// Excel allows only single parameter
#DISABLE.NET: 70
>> Decimal("€1.234,56","de")
1234.56

// ******** DATE PARAMETERS ********

// cannot have both () and -
>> Decimal("$(-123)")
Error({Kind:ErrorKind.InvalidArgument})

// cannot have both () and -
>> Decimal("$-(123)")
Error({Kind:ErrorKind.InvalidArgument})

// invalid format string for fr
>> Decimal("$1,234.56","fr")
Error({Kind:ErrorKind.InvalidArgument})

// invalid format string for de
>> Decimal("$1,234.56","de")
Error({Kind:ErrorKind.InvalidArgument})

//Excel allows only single parameter
//PowerFx message: Language code "12" not supported
>> Decimal("$1,234.56","12")
Error({Kind:ErrorKind.BadLanguageCode})
