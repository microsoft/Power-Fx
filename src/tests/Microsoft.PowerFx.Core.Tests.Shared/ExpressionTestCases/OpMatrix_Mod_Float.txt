#SETUP: NumberIsFloat

// Value() has been replaced with Value() for PA client compatibility.  
// When in NumberIsFloat mode, Value and Float functions are effectively the same.

// MOD (which should have the same type semantics as DIVIDE)

// In these tests, 1E100 or some other very large/small number is used to test floating point results which decimal can not represent, 
// and a highly precise number is used for decimal, such as 2.00000000000000000000000000002 that would be rounded in floating point.
// For example, if a decimal test results with 25+ signficant digits results in 2, then an inappropriate conversion to floating point was made.

// The expected results matrix, also in BinderUtils.cs:
//
// Non NumberIsFloat (no flag)                     NumberIsFloat
//  *, /  | n  s  b  N  D  d  T  w  O  (right)       *, / | n  s  b  N  D  d  T  w  O  (right)
// =======|====================================    =======|====================================
//      n | n  n  n  n  n  n  n  n  n                   n | n  n  n  n  n  n  n  n  n 
//      s | n  w  w  w  w  w  w  w  w                   s | n  n  n  n  n  n  n  n  n 
//      b | n  w  w  w  w  w  w  w  w                   b | n  n  n  n  n  n  n  n  n 
//      N | n  w  w  w  w  w  w  w  w                   N | n  n  n  n  n  n  n  n  n 
//      D | n  w  w  w  w  w  w  w  w                   D | n  n  n  n  n  n  n  n  n  
//      d | n  w  w  w  w  w  w  w  w                   d | n  n  n  n  n  n  n  n  n  
//      T | n  w  w  w  w  w  w  w  w                   T | n  n  n  n  n  n  n  n  n  
//      w | n  w  w  w  w  w  w  w  w                   w | n  n  n  n  n  n  n  w  n 
//      O | n  w  w  w  w  w  w  w  w                   O | n  n  n  n  n  n  n  n  n 
// (left) |                                        (left) |

// Float

>> Mod( Value(17), Value(2) )
1

>> Mod( Value("1e40"), Value("1e10") )
3666890752

>> Mod( Value(17), "2" )
1

>> Mod( Value("1e40"), "1e10" )
3666890752

>> Mod( Value(17), true )
0

>> Mod( Value(7922816251426433759354395032), 3961408125713216879677197517 )
0

>> Mod( Value(7922816251426433759354395032), 3961408125713216879677197515 )
0

>> Mod( Value(-79228162514264337593543950335), -79228162514264337593543950332 )
0

>> Mod( Value(-79228162514264337593543950335), -79228162514264337593543950325 )
0

>> Mod( Value(7922816251426433759354395032), Value(3961408125713216879677197517) )
0

>> Mod( Value(7922816251426433759354395032), Value(3961408125713216879677197515) )
0

>> Mod( Value(-79228162514264337593543950335), Value(-79228162514264337593543950332) )
0

>> Mod( Value(-79228162514264337593543950335), Value(-79228162514264337593543950325) )
0

>> Mod( 7922816251426433759354395032, Value(3961408125713216879677197517) )
0

>> Mod( 7922816251426433759354395032, Value(3961408125713216879677197515) )
0

>> Mod( -79228162514264337593543950335, Value(-79228162514264337593543950332) )
0

>> Mod( -79228162514264337593543950335, Value(-79228162514264337593543950325) )
0

>> Mod( Value("1e100"), true )
0

>> Mod( Value(16), Blank() )
Error({Kind:ErrorKind.Div0})

>> Mod( Value("1e100"), Blank() )
Error({Kind:ErrorKind.Div0})

>> Value(Date(2000,1,1))
36526

>> Mod( Value(365260123), Date(2000,1,1) )
123

>> Value(DateTime(2000,1,1,12,0,0))
36526.5

>> Mod( Value(365265123), DateTime(2000,1,1,12,0,0) )
123

>> Value(Time(12,0,0))
0.5

>> Mod( Value(4.25), Time(12,0,0) )
0.25

>> Mod( Value(16), Value("2.00000000000000000000000002") )
0

>> Mod( Value("1e28"), Value("2.00000000000000000000000002") )
0

>> Mod( Value(19), ParseJSON("4") )
3

>> Mod( Value(16), ParseJSON("1e100") )
16

>> Mod( Value(16), Value("1e100") )
16

>> Mod( Value(16.00000000000000000001), Value("1e100") )
16

>> Mod( Value(16.00000000000000000001), Value(1e28) )
16

>> Mod( Value("1e100"), ParseJSON("2") )
0

>> Mod( Value("1e100"), ParseJSON("1e100") )
0

>> Mod( Value("1e100"), ParseJSON("1e100") ) + 1.00000000000000000001
1

>> Mod( Value(1e28), Value(1e28) )
0

>> Mod( Value(1e28), Value(1e28) ) + 1.00000000000000000001
1

>> Mod( Value(3), ParseJSON("null") )
Error({Kind:ErrorKind.Div0})

// Text

>> Mod( "17", Value(2) )
1

>> Mod( "1e100", Value(2) )
0

>> Mod( "1e28", Value(2) )
0

>> Mod( "1e28", Value(2.00000000000000001) )
0.00000025

>> Mod( Value( "1e28" ), Value(2.00000000000000001) )
0

>> Mod( "7922816251426433759354395032", 3961408125713216879677197517 )
0

>> Mod( "7922816251426433759354395032", 3961408125713216879677197515 )
0

>> Mod( "-79228162514264337593543950335", -79228162514264337593543950332 )
0

>> Mod( "-79228162514264337593543950335", -79228162514264337593543950325 )
0

>> Mod( "7922816251426433759354395032", "3961408125713216879677197517" )
0

>> Mod( "7922816251426433759354395032", "3961408125713216879677197515" )
0

>> Mod( "-79228162514264337593543950335", "-79228162514264337593543950332" )
0

>> Mod( "-79228162514264337593543950335", "-79228162514264337593543950325" )
0

>> Mod( 7922816251426433759354395032, "3961408125713216879677197517" )
0

>> Mod( 7922816251426433759354395032, "3961408125713216879677197515" )
0

>> Mod( -79228162514264337593543950335, "-79228162514264337593543950332" )
0

>> Mod( -79228162514264337593543950335, "-79228162514264337593543950325" )
0

>> Mod( "17", "2" )
1

>> Mod( "17", "2.00000000000000000000000002" )
1

>> Mod( "1e100", "2" )
0

>> Mod( "17", true )
0

>> Mod( "1e100", true )
0

>> Mod( "16", Blank() )
Error({Kind:ErrorKind.Div0})

>> Mod( "1e100", Blank() )
Error({Kind:ErrorKind.Div0})

>> Mod( "365260123", Date(2000,1,1) )
123

>> Mod( "365265123", DateTime(2000,1,1,12,0,0) )
123

>> Mod( "4.25", Time(12,0,0) )
0.25

>> Mod( "16", Value("2.000000000000000000000002") )
0

>> Mod( "1e100", Value("2.000000000000000000000002") )
0

>> Mod( "19", ParseJSON("4") )
3

>> Mod( "1e100", ParseJSON("1e100") )
0

>> Mod( "1e100", ParseJSON("2") )
0

// Boolean

>> Mod( true, Value(2) )
1

>> Mod( true, Value("1e100") )
1

>> Round( Mod( true, 0.1 ), 10 )
0.1

>> Mod( true, Value(0.000000000000000000001) )
0

>> Mod( true, Value(0.000000000000000000001) ) + 1.00000000000000000001
1

>> Mod( true, 3961408125713216879677197517 )
1

>> Mod( true, 3961408125713216879677197515 )
1

>> Mod( true, -79228162514264337593543950332 )
-79228162514264337593543950331

>> Mod( true, -79228162514264337593543950325 )
-79228162514264337593543950324

>> Mod( true, Value(3961408125713216879677197517) )
1

>> Mod( true, Value(3961408125713216879677197515) )
1

>> Mod( true, Value(-79228162514264337593543950332) )
-7.922816251426434E+28

>> Mod( true, Value(-79228162514264337593543950325) )
-7.922816251426434E+28

>> Mod( true, "2" )
1

>> Mod( true, "1E+100" )
1

>> Mod( true, true )
0

>> Mod( true, Blank() )
Error({Kind:ErrorKind.Div0})

>> Mod( true, Date(1927,5,18) )
1

>> Mod( true, DateTime(1927,5,18,0,0,0) )
1

>> Mod( true, Time(12,0,0) )
0

>> Mod( true, Value("2.000000000000000000000002") )
1

>> Mod( true, ParseJSON("2") )
1

>> Mod( true, ParseJSON("1e100") )
1

// Blank

>> Mod( Blank(), Value(2) )
0

>> Mod( Blank(), Value("1e100") )
0

>> Mod( Blank(), 3961408125713216879677197517 )
0

>> Mod( Blank(), 3961408125713216879677197515 )
0

>> Mod( Blank(), -3961408125713216879677197517 )
0

>> Mod( Blank(), -3961408125713216879677197515 )
0

>> Mod( 3961408125713216879677197517, Blank() )
Error({Kind:ErrorKind.Div0})

>> Mod( 3961408125713216879677197515, Blank() )
Error({Kind:ErrorKind.Div0})

>> Mod( -3961408125713216879677197517, Blank() )
Error({Kind:ErrorKind.Div0})

>> Mod( -3961408125713216879677197515, Blank() )
Error({Kind:ErrorKind.Div0})

>> Mod( Blank(), "2" )
0

>> Mod( Blank(), "1e100" )
0

>> Mod( Blank(), true )
0

>> Mod( Blank(), Blank() )
Error({Kind:ErrorKind.Div0})

>> Mod( Blank(), Date(2000,1,1) )
0

>> Mod( Blank(), DateTime(2000,1,1,12,0,0) )
0

>> Mod( Blank(), Time(12,0,0) )
0

>> Mod( Blank(), Value("2.000000000000000000000002") )
0

>> Mod( Blank(), Value("2.000000000000000000000002")+2.000000000000000000000002 )
0

>> Mod( Blank(), ParseJSON("2") )
0

>> Mod( Blank(), ParseJSON("1e100") )
0

// Date

>> Mod( Date(2000,1,2), Value(2) )
1

>> Mod( Date(2000,1,2), "2" )
1

>> Mod( Date(2000,1,2), 3961408125713216879677197517 )
36527

>> Mod( Date(2000,1,2), 3961408125713216879677197515 ) + 2.0000000000000000002
36529

>> Mod( 3961408125713216879677197517, Date(2000,1,2) )
21075

>> Mod( 3961408125713216879677197515, Date(2000,1,2) ) + 2.0000000000000000002
21077

>> Mod( Date(2000,1,2), true )
0

>> Mod( Date(2000,1,1), Blank() )
Error({Kind:ErrorKind.Div0})

>> Mod( Date(1954,10,3), Date(1927,5,20) ) + 1.0000000000000000001
9999

>> Mod( Date(1954,10,3), Date(1900,1,2) ) + 1.0000000000000000001
3

>> Mod( Date(1954,10,3), DateTime(1927,5,20,0,0,0) ) + 1.0000000000000000001
9999

>> Mod( Date(2000,1,1), Time(12,0,0) ) + 1.0000000000000000001
1

>> Mod( Date(2000,1,1), Value("2.000000000000000000000002") )
0

>> Mod( Date(2000,1,1), ParseJSON("2.000000000000000000000002") )
0

>> Mod( Date(2000,1,1), ParseJSON("1e100") )
36526

// DateTime

>> Mod( DateTime(2000,1,1,12,0,0), Value(2) )
0.5

>> Mod( DateTime(2000,1,1,12,0,0), "2" )
0.5

>> Mod( DateTime(2000,1,1,12,0,0), Value(2) ) + 1.0000000000000000001
1.5

>> Mod( DateTime(2000,1,1,12,0,0), "2" ) + 1.0000000000000000001
1.5

>> Mod( DateTime(2000,1,1,12,0,0), 3961408125713216879677197517 )
36526.5

>> Mod( DateTime(2000,1,1,12,0,0), 3961408125713216879677197515 ) + 2.0000000000000000002
36528.5

>> Mod( 3961408125713216879677197517, DateTime(2000,1,1,12,0,0) )
20782

>> Mod( 3961408125713216879677197515, DateTime(2000,1,1,12,0,0) ) + 2.0000000000000000002
20784

>> Mod( DateTime(2000,1,1,12,0,0), true )
0.5

>> Mod( DateTime(2000,1,1,12,0,0), Blank() )
Error({Kind:ErrorKind.Div0})

>> Mod( DateTime(1954,10,3,0,0,0), Date(1927,5,20) )
9998

>> Mod( DateTime(1954,10,3,0,0,0), Date(1900,1,2) )
2

>> Mod( DateTime(1954,10,5,0,0,0), DateTime(1927,5,18,0,0,0) )
2
 
>> Mod( DateTime(1954,10,5,0,0,0), DateTime(1900,1,1,12,0,0) ) + 1.0000000000000000001
3

>> Mod( DateTime(2000,1,1,21,0,0), Time(12,0,0) )
0.375

>> Mod( DateTime(2000,1,1,12,0,0), Value("2.0000000000000000000002") )
0.5

>> Mod( DateTime(2000,1,1,12,0,0), ParseJSON("2") )
0.5

>> Mod( DateTime(2000,1,1,12,0,0), ParseJSON("1e100") )
36526.5

// Time

>> Mod( Time(9,0,0), 123 )
0.375

>> Mod( Time(9,0,0), "123" )
0.375

>> Mod( Time(9,0,0), 3961408125713216879677197517 )
0.375

>> Mod( Time(9,0,0), 3961408125713216879677197515 ) + 2.0000000000000000002
2.375

>> Mod( Time(9,0,0), true )
0.375

>> Mod( Time(9,0,0), Blank() )
Error({Kind:ErrorKind.Div0})

>> Mod( Time(9,0,0), Time(6,0,0) )
0.125

>> Mod( Time(9,0,0), Time(6,0,0) ) + 2.0000000000000000002
2.125

>> Mod( Time(9,0,0), Date(1900,1,2) )
0.375

>> Mod( Time(9,0,0), Time(12,0,0) )
0.375

>> Mod( Time(9,0,0), Value("0.125") )
0

>> Mod( Time(9,0,0), Value("0.125000000000000000000001") )
0

>> Mod( Time(9,0,0), ParseJSON("2") )
0.375

>> Mod( Time(9,0,0), ParseJSON("1e100") )
0.375

// Decimal

>> Mod( Value("16.000000000000000000000001"), Value(2) )
0

>> Mod( Value("16.000000000000000000000001"), Value(2) ) + 1.000000000000000000001
1

>> Mod( Value("16.000000000000000000000001"), "2" )
0

>> Mod( Value("16.000000000000000000000001"), true )
0

>> Mod( Value("16.000000000000000000000001"), Blank() )
Error({Kind:ErrorKind.Div0})

>> Mod( Value("16.0000000000000000000001"), Date(1900,1,7) )
0

>> Mod( Value("16.0000000000000000000001"), DateTime(1900,1,1,12,0,0) )
1

>> Mod( Value("16.000000000000000000001"), Time(12,0,0) )
0

>> Mod( Value("16.000000000000000000000002"), Value("2.000000000000000000000001") )
0

>> Mod( Value("7.999999999999999999999997"), Value("2.000000000000000000000001") )
0

>> Mod( Value("16.000000000000000000000002"), ParseJSON("2") )
0

>> Mod( Value("16.000000000000000000000002"), ParseJSON("1e100") )
16

// Untyped

>> Mod( ParseJSON("16.00000000000000000000001"), Value(2) )
0

>> Mod( ParseJSON("1e28"), Value(2) )
0

>> Mod( ParseJSON("1e28"), Value(2.00000000000000001) )
0.00000025

>> Mod( Value( ParseJSON("1e28") ), Value(2.00000000000000001) )
0

>> Mod( ParseJSON("16.00000000000000000000001"), "2" )
0

>> Mod( ParseJSON("7922816251426433759354395032"), 3961408125713216879677197517 )
0

>> Mod( ParseJSON("7922816251426433759354395032"), 3961408125713216879677197515 )
0

>> Mod( ParseJSON("-79228162514264337593543950335"), -79228162514264337593543950332 )
0

>> Mod( ParseJSON("-79228162514264337593543950335"), -79228162514264337593543950325 )
0

>> Mod( 7922816251426433759354395032, ParseJSON("3961408125713216879677197517") )
0

>> Mod( 7922816251426433759354395032, ParseJSON("3961408125713216879677197515") )
0

>> Mod( -79228162514264337593543950335, ParseJSON("-79228162514264337593543950332") )
0

>> Mod( -79228162514264337593543950335, ParseJSON("-79228162514264337593543950325") )
0

>> Mod( ParseJSON("1e100"), "2" )
0

>> Mod( ParseJSON("16.000000000000000000000001"), true )
0

>> Mod( ParseJSON("1e100"), true )
0

>> Mod( ParseJSON("16.000000000000000000000001"), Blank() )
Error({Kind:ErrorKind.Div0})

>> Mod( ParseJSON("1e100"), Blank() )
Error({Kind:ErrorKind.Div0})

>> Mod( ParseJSON("16.0000000000000000000001"), Date(1900,1,7) )
0

>> Mod( ParseJSON("1e100"), Date(1900,1,7) )
0

>> Mod( ParseJSON("16.0000000000000000000001"), DateTime(1900,1,1,12,0,0) )
1

>> Mod( ParseJSON("1e100"), DateTime(1900,1,7,12,0,0) )
4

>> Mod( ParseJSON("16.000000000000000000001"), Time(12,0,0) )
0

>> Mod( ParseJSON("1e100"), Time(12,0,0) )
0

>> Mod( ParseJSON("16.000000000000000000000002"), Value("2.000000000000000000000000001") )
0

>> Mod( ParseJSON("1e100"), Value("2.000000000000000000000000001") )
0

>> Mod( ParseJSON("16.000000000000000000000002"), ParseJSON("2") )
0

>> Mod( ParseJSON("1e100"), ParseJSON("2") )
0

>> Mod( ParseJSON("16.000000000000000000000002"), ParseJSON("1e100") )
16

>> Mod( ParseJSON("1e100"), ParseJSON("1e100") )
0
