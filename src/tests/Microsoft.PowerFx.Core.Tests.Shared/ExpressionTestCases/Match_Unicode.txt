#SETUP: RegEx,PowerFxV1CompatibilityRules,SupportColumnNamesAsIdentifiers,DisableMemChecks

// Unicode character behavior in Power Fx regular expressions.
//
//  Effective                                        Usage                 .NET        ECMAScript       PCRE2         Power Fx
// =====================================================================================================================================
//  \p{Ll}\p{Lu}\p{Lt}\p{Lo}\p{Lm}\p{Nd}\p{Pc}       \w, \W, \b, \B        Yes         No               Yes           Yes
//  \p{Nd}                                           \d, \D                Yes         No               Yes           Yes
//  \p{Category}                                     \p, \P                Yes         Yes              Yes           No
//  \p{Script}                                       \p, \P                Yes         Yes              Yes           No (syntax varies)
//
// We chose to use canonical .NET instead of RegexOptions.ECMAScript because we wanted the unicode definitions for words.
// See https://learn.microsoft.com/dotnet/standard/base-types/regular-expression-options#ecmascript-matching-behavior for more details

// Changes in case insensitive matching in .NET 7 causes different answers that are consistent with PCRE2 and Node
// See https://devblogs.microsoft.com/dotnet/regular-expression-improvements-in-dotnet-7/#case-insensitive-matching-and-regexoptions-ignorecase

>> Match( UniChar(Hex2Dec("03a9")), "\u03c9", MatchOptions.IgnoreCase ).FullMatch
"Ω"

>> Match( UniChar(Hex2Dec("03c9")), "\u03a9", MatchOptions.IgnoreCase ).FullMatch
"ω"

#DISABLE.NET:462
>> Match( UniChar(Hex2Dec("03a9")), "\u2126", MatchOptions.IgnoreCase ).FullMatch
"Ω"

#DISABLE.NET:462
>> Match( UniChar(Hex2Dec("03c9")), "\u2126", MatchOptions.IgnoreCase ).FullMatch
"ω"

#DISABLE.NET:462
>> Match( UniChar(Hex2Dec("2126")), "\u03c9", MatchOptions.IgnoreCase ).FullMatch
"Ω"

#DISABLE.NET:462
>> Match( UniChar(Hex2Dec("2126")), "\u03a9", MatchOptions.IgnoreCase ).FullMatch
"Ω"

// newline characters not matched by "."
>> JSON( MatchAll( Char(9) & Char(13) & Char(10) & Char(Hex2Dec("85")) & UniChar(Hex2Dec("2028")) & UniChar(Hex2Dec("2029")) & Char(Hex2Dec("C")) & Char(Hex2Dec("B")) & Char(14), "." ) )
"[{""FullMatch"":""\t"",""StartMatch"":1},{""FullMatch"":""\u000E"",""StartMatch"":9}]"

// surrogate pairs not supported in character class. .NET does not support, JavaScript supports with /u or /v regex modifier, PCRE2 supports

>> Len( "😀" )
2

>> Match( "😀", "[\uD83D\uDE00]" )
Errors: Error 13-29: Invalid regular expression: Unicode characters in surrogate pairs are not supported in character classes, found "...\uD83D\uDE00".|Error 0-5: The function 'Match' has some invalid arguments.

>> Match( "😀", "[😀]" )
Errors: Error 13-19: Invalid regular expression: Unicode characters in surrogate pairs are not supported in character classes, found "[😀".|Error 0-5: The function 'Match' has some invalid arguments.

>> Len( Match( "😀", "\uD83D\uDE00" ).FullMatch )
2

>> Len( Match( "😀", "😀" ).FullMatch )
2

>> Match( "😀", "[\uD83D\uDE00-\uD83D\uDE06]" )
Errors: Error 13-42: Invalid regular expression: Unicode characters in surrogate pairs are not supported in character classes, found "...\uD83D\uDE00".|Error 0-5: The function 'Match' has some invalid arguments.

>> Match( "😀", "[😀-👻]" )
Errors: Error 13-22: Invalid regular expression: Unicode characters in surrogate pairs are not supported in character classes, found "[😀".|Error 0-5: The function 'Match' has some invalid arguments.

>> Match( "😀", "[a\uD83D\uDE00-👻b]" )
Errors: Error 13-34: Invalid regular expression: Unicode characters in surrogate pairs are not supported in character classes, found "...\uD83D\uDE00".|Error 0-5: The function 'Match' has some invalid arguments.

>> Match( "😀", "[a\uD83D\uDE00-\ud83d\udc7bb]" )
Errors: Error 13-44: Invalid regular expression: Unicode characters in surrogate pairs are not supported in character classes, found "...\uD83D\uDE00".|Error 0-5: The function 'Match' has some invalid arguments.

>> Match( "😀", "[abc\uD83D\uDE00\ud83d\udc7bdef]" )
Errors: Error 13-47: Invalid regular expression: Unicode characters in surrogate pairs are not supported in character classes, found "...\uD83D\uDE00".|Error 0-5: The function 'Match' has some invalid arguments.

>> Match( "😀😀😀😀😀", "😀+" )
{FullMatch:"😀😀😀😀😀",StartMatch:1}

>> Match( "ab👻👻cd😀😀ef", "😀+" )  // ghosts each add two characters from StartMatch perspective
{FullMatch:"😀😀",StartMatch:9}

>> Match( "😀😀😀😀😀", "😀{2}" )
{FullMatch:"😀😀",StartMatch:1}

>> Match( "😀😀😀😀😀", "😀?" )
{FullMatch:"😀",StartMatch:1}

>> Match( "👻👻👻👻👻", "😀?" )
{FullMatch:"",StartMatch:1}

>> Match( "👻👻👻👻👻", "😀+" )
Blank()

// case folding ſ (U+017F LATIN SMALL LETTER LONG S) case-folds to s (U+0073 LATIN SMALL LETTER S) 
// case folding K (U+212A KELVIN SIGN) case-folds to k (U+006B LATIN SMALL LETTER K).

>> UniChar( Hex2Dec( "017f" )) = "ſ"
true

>> UniChar( Hex2Dec( "212a" )) = "K"
true

>> Match( "K", "[a-z]" )
Blank()

>> Match( "ſ", "[a-z]" )
Blank()

>> Match( "K", "k", MatchOptions.IgnoreCase )
{FullMatch:"K", StartMatch:1}

>> Match( "ſ", "s", MatchOptions.IgnoreCase )
{FullMatch:"ſ", StartMatch:1}

>> Match( "K", "[a-z]", MatchOptions.IgnoreCase )
{FullMatch:"K", StartMatch:1}

>> Match( "ſ", "[a-z]", MatchOptions.IgnoreCase )
{FullMatch:"ſ", StartMatch:1}

>> Match( "ß", "ss", MatchOptions.IgnoreCase )
Blank()

>> Match( UniChar( Hex2Dec( "2126" ) ), "\u03c9", MatchOptions.IgnoreCase )
{FullMatch:"Ω", StartMatch:1}

>> Match( UniChar( Hex2Dec( "2126" ) ), "\u03a9", MatchOptions.IgnoreCase )
{FullMatch:"Ω", StartMatch:1}



