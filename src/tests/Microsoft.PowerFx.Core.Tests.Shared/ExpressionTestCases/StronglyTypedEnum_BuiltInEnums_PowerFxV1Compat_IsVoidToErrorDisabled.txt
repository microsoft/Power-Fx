#SETUP: StronglyTypedBuiltinEnums,PowerFxV1CompatibilityRules,AllEnumsSetup,RegEx,EnableJsonFunctions,disable:IsVoidToError

// Since there is no longer an Accepts relationship between enums and their backing kinds, more likely to get Void results
>> If( false, 3, StartOfWeek.Sunday )  // first type rule
If(true, {test:1}, "Void value (result of the expression can't be used).")

>> If( false, StartOfWeek.Monday, 3 )
If(true, {test:1}, "Void value (result of the expression can't be used).")

>> If(true, 1, StartOfWeek.Tuesday)
If(true, {test:1}, "Void value (result of the expression can't be used).")

>> If(true, StartOfWeek.Tuesday, 1)
If(true, {test:1}, "Void value (result of the expression can't be used).")

>> If(true, TimeUnit.Seconds, "A")
If(true, {test:1}, "Void value (result of the expression can't be used).")

>> If( false, TimeUnit.Years, 3 )  // first type rule
If(true, {test:1}, "Void value (result of the expression can't be used).")

>> If( false, 3, TimeUnit.Years )  // first type rule
If(true, {test:1}, "Void value (result of the expression can't be used).")

>> If( false, Color.Red, RGBA(120,120,12,1) )  // first type rule
If(true, {test:1}, "Void value (result of the expression can't be used).")

// No ErrorKind functions are strongly typed at this time

>> If( false, ErrorKind.Div0, 3 )  // first type rule
If(true, {test:1}, "Void value (result of the expression can't be used).")