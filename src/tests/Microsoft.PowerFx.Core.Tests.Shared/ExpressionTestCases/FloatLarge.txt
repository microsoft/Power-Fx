#SETUP: NumberIsFloat

// Tests that take or result in large floating point values, outside the range of Decimal (~ +/- 1E29)
// These cause problems with the serialization/deserialization test in BaseRunner.cs/RunAsync2

>> Abs(1E+308)
100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000

>> Abs(-1E+308)
100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000

>> Abs(Value("1E+308"))
100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000

>> Abs(Value("-1E+308"))
100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000

>> Value( "1e100" )
1E+100

>> 1e100
1E+100

// Excel returns 5.5799E+186
>> Exp(430)
5579910311786366000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000

>> Int(Value("1E+308"))
100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000

>> Int(Value("-1E+308"))
-100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000

>> Power(Exp(42.5),2)
8223012714622878000000000000000000000

>> Round(Value("1E+308"),10)
1E+308

// Excel shows typo in the formula and suggest to change the formula to Sqrt(E1+308)
>> Sqrt(Value("1E+308"))
10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000

//PowerFx shows error message "Argument to SQRT function should be non-negative number", while Excel shows typo in the formula and suggest to change the formula to Sqrt(-E1+308)
>> Sqrt(-1E+308)
Error({Kind:ErrorKind.Numeric})

>> 1E+308 * 1000
Error({Kind:ErrorKind.Numeric})

>> 1E-308 / 1000
0

>> Sum(1E+308,1E+308)
Error({Kind:ErrorKind.Numeric})

// Overflow in calculation
>> Sum(1e308, 1e308, 1e308, 1e308, 1e308)
Error({Kind:ErrorKind.Numeric})

// Overflow in calculation
>> VarP(1e200, 2e200, 3e200, 4e200)
Error({Kind:ErrorKind.Numeric})

>> Round(1E+308,10)
1E+308

>> Max(1E+308, 1E+308)
100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000

>> Min(1E+308, 1E+308)
100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000

>> Mod(1E+300,1E-20)
6.0682893566359166E-21

>> Dec2Hex([1,1e-45,1e45,2])
Table({Value:"1"},{Value:"0"},{Value:Error({Kind:ErrorKind.Numeric})},{Value:"2"})

// Infinity
>> StdevP(-1.7e308,1.7e308)
Error({Kind:ErrorKind.Numeric})

>> Acot(1e100)
0

>> Acot(-1e100)
3.141592654

>> Atan(1e100)
1.570796327

>> Atan(-1e100)
-1.570796327

>> Substitute("HelloHelloHello", "He", "Je", 5e100)
"HelloHelloHello"

>> Replace("abcd", 5e100, 1, "P")
"abcdP"

// Excel shows typo in the formula and suggest to change the formula to Ln(E1+308)
>> Ln(1E+308)
709.19620864

// Excel shows typo in the formula and suggest to change the formula to Ln(E1+308)
>> Ln(-1E+308)
Error({Kind:ErrorKind.Numeric})

// Overflow in calculation
>> StdevP(1e200, 2e200, 3e200, 4e200)
Error({Kind:ErrorKind.Numeric})

>> Round(Atan([0, 1e100, -1e100, 1, -1, Blank()]), 4)
Table({Value:0},{Value:1.5708},{Value:-1.5708},{Value:0.7854},{Value:-0.7854},{Value:0})

>> Round(Acot([0, 1e100, -1e100, 1, -1, Blank()]), 4)
Table({Value:1.5708},{Value:0},{Value:3.1416},{Value:0.7854},{Value:2.3562},{Value:1.5708})


