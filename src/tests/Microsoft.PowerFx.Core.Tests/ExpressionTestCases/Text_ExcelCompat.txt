// Language code for numeric Format String

>> Text(1234.5678, "[$-fr-FR]# ##0,00", "en-US")
"1,234.57"

>> Text(1234.5678, "[$-fr-FR]# ##0,00", "vi-VI")
"1.234,57"

>> Text(1234.5678, "[$-en-US]#,##0.00", "en-US")
"1,234.57"

>> Text(1234.5678, "[$-pt-BR]#.##0,00", "en-US")
"1,234.57"

>> Text(1234.5678, "[$-pt-BR]#.##0,00", "fr-FR")
"1 234,57"

>> Text(1234.5678, "[$-en-US]#,##0.00", "pt-BR")
"1.234,57"

>> Text(1234.5678,"[$-en-US]0 # # # !!!", "en-US")
"1 2 3 5 !!!"

// The thousands separator in the fi-FI locale is the no-break space (U+00A0)
>> Text(12345.6789, $"[$-fi-FI]#{Char(160)}##0.00", "en-US")
"12,345.68"

>> Text(12345.6789, $"[$-fi-FI]#{Char(160)}##0.00", "fi-FI")
"12 345,68"

// The thousands separator in the fr-FR locale is the narrow no-break space (U+202F)
>> Text(12345.6789, $"[$-fr-FR]#{ParseJSON("""\u202F""")}##0.00", "en-US")
"12,345.68"

>> Text(12345.6789, $"[$-fr-FR]#{ParseJSON("""\u202F""")}##0.00", "fr-FR")
"12 345,68"

>> Text(1234.5678, "[$-en-US]", "en-US")
"1234.5678"

>> Text(1234.5678, "[$-fr-FR]", "fr-FR")
"1234,5678"

>> Text(1234.5678, "[$-fr-FR]", "en-US")
"1234.5678"

>> Text(1234.5678, "# ##0,00", "fr-FR")
" 1 235"

>> Text(1234.5678, "# ##0,00")
" 1,235"

>> Text(1234.5678, "[$-  fr-FR  ]    # ##0,00   ", "vi-VI")
"1.234,57"

>> Text(1234.5678, "[$-fr-FR  ]    # ##0,00   ", "vi-VI")
"1.234,57"

>> Text(1234.5678, "[$-  fr-FR]    # ##0,00", "vi-VI")
"1.234,57"

>> Text(1234.5678, "[$-fr-FR]    # ##0,00", "vi-VI")
"1.234,57"

>> Text(1234.5678, "[$-fr-FR]    # ##0,00    ", "vi-VI")
"1.234,57"

>> Text(1234.5678, "[$-fr-FR][# ##0,00]", "vi-VI")
"[1.234,57]"

>> Text(1234.5678, "$-fr-FR] # ##0,00", "vi-VI")
"$-fr-FR]  1.235"

>> Text(1234.5678, "$-fr-FR][ # ##0,00", "vi-VI")
"$-fr-FR][  1.235"

>> Text(1234.5678, "-fr-FR # ##0,00", "vi-VI")
"-fr-FR  1.235"

>> Text(1234.5678, "fr-FR # ##0,00", "vi-VI")
"fr-FR  1.235"

>> Text(1234.5678, "$[-fr-FR] # ##0,00", "vi-VI")
"$[-fr-FR]  1.235"

>> Text(1234.5678, "$-[fr-FR] # ##0,00", "vi-VI")
"$-[fr-FR]  1.235"

>> Text(1234.5678, "[$-fr-FR][$-fr-FR# ##0,00]", "vi-VI")
"[$-fr-FR1.234,57]"

>> Text(1234.5678, "]$-fr-FR[ # ##0,00", "vi-VI")
"]$-fr-FR[  1.235"

>> Text(1234.5678, "{$-fr-FR} # ##0,00", "vi-VI")
"{$-fr-FR}  1.235"

>> Text(1234.5678, "[$ # ##0,00", "vi-VI")
"[$  1.235"

>> Text(1234.5678, "[$] # ##0,00", "vi-VI")
"[$]  1.235"

>> Text(1234.5678, "][-$ # ##0,00", "vi-VI")
"][-$  1.235"

// If have wrong format string, throw error
>> Text(1234.5678,"abc[$-en-US]0 # # # !!!", "en-US")
Errors: Error 0-50: The function 'Text' has some invalid arguments.|Warning 15-40: Incorrect format specifier for 'Text'.

>> Text(1234.5678, "mnk  [$-fr-FR] # ##0,00"   , "vi-VI")
Errors: Error 0-54: The function 'Text' has some invalid arguments.|Warning 16-41: Incorrect format specifier for 'Text'.

// If does not have valid language code, throw error
>> Text(1234.5678, "[$-a]0,0", "en-US")
Error({Kind:ErrorKind.BadLanguageCode})

>> Text(1234.5678, "[$-fr - FR]# ##0,00", "vi-VI")
Error({Kind:ErrorKind.BadLanguageCode})

>> Text(1234.5678, "[$-fr-FR #] ##0,00", "vi-VI")
Error({Kind:ErrorKind.BadLanguageCode})

>> Text(1234.5678, "[$-fr-FR # ##0,00]", "vi-VI")
Error({Kind:ErrorKind.BadLanguageCode})

>> Text(1234.5678, "[$-fr-FR,en-US] # ##0,00", "vi-VI")
Error({Kind:ErrorKind.BadLanguageCode})

>> Text(1234.5678, "[$-fr-FR # ##]0,00", "vi-VI")
Error({Kind:ErrorKind.BadLanguageCode})

>> Text(ParseJSON("""\u202F"""), "##")
Error({Kind:ErrorKind.InvalidArgument})

>> Text(Blank())
Blank()

>> Text(If(1<0,false))
Blank()

>> Text(If(1<0,123))
Blank()

>> Text(If(1<0,123), "0.00")
"0.00"

>> Text(Blank(), "0.00")
"0.00"

>> Text(Blank(), Blank())
""

>> Text(Blank(), "Foo ####")
"Foo "

>> Text(Blank(), "####")
""

>> Text(Blank(), "#.000")
".000"

>> Text(Blank(), "$ #,###")
"$ "

>> Text(Blank(), "#,#")
""

>> Text(Blank(), "#,###")
""

>> ForAll(ParseJSON("[""2011-01-15"", null]"), Text(DateValue(ThisRecord), "yyyy-MM-dd"))
Table({Value:"2011-01-15"},{Value:"1899-12-30"})

>> ForAll(ParseJSON("[""08:03:05.000"", null]"), Text(TimeValue(ThisRecord), "HH:mm:ss"))
Table({Value:"08:03:05"},{Value:"00:00:00"})

>> Text(DateTimeValue(Blank()), DateTimeFormat.LongDate)
"Saturday, December 30, 1899"

>> Text(DateTimeValue(""), DateTimeFormat.ShortDate)
"12/30/1899"

>> Text(If(1 < 0, 123), "mmm ddd yyy")
"Dec Sat 1899"

>> Text(Blank(), "mmm ddd yyy")
"Dec Sat 1899"

>> Text(0, "yyyy-mm-dd")
"1899-12-30"

>> Text(If(1 < 0, 0),"yyyy-mm-dd")
"1899-12-30"

>> Text(Blank(),"yyyy-mm-dd")
"1899-12-30"

>> Text(Blank(),"mmm ddd yyy")
"Dec Sat 1899"