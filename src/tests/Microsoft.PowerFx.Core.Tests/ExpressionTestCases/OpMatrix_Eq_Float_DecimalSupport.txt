#SETUP: NumberIsFloat,DecimalSupport,PowerFxV1CompatibilityRules

// comparison done in floating point, decimal rounded
>> Value(16) = Decimal("16.000000000000000000002")
true

>> Value(16) = Decimal("16")
true

>> Value("1e100") = Decimal("2.00000000000000000000002")
false

>> Blank() = Decimal("2.000000000000000000000002")
false

>> Blank() = Decimal("0")
false

// comparison done on floating point due to Date/DateTime/Time
>> Date(1900,1,1) = Decimal("2.000000000000000000000002")
true

// comparison done on floating point due to Date/DateTime/Time
>> DateTime(1900,1,1,12,0,0) = Decimal("2.5000000000000000000002")
true

>> Time(3,0,0) = Decimal("0.125")
true

// comparison done on floating point due to Date/DateTime/Time
>> Time(3,0,0) = Decimal("0.125000000000000000000001")
true

// Decimal

>> Decimal("2.000000000000000000000001") = Value(2)
true

>> Decimal("0.000000000000000000000001") = Blank()
false

>> Decimal(0) = Blank()
false

>> If(1<0,Decimal(1)) = Blank()
true

// comparison done on floating point due to Date/DateTime/Time
>> Decimal("16.0000000000000000000001") = Date(1900,1,15)
true

>> Decimal("16") = Date(1900,1,15)
true

>> Decimal(2) = Date(1900,1,1)
true

// comparison done on floating point due to Date/DateTime/Time
>> Decimal("2.0000000000000000000001") = Date(1900,1,1)
true

>> Decimal(2) = DateTime(1900,1,1,0,0,0)
true

>> Decimal("2.0000000000000000000001") = DateTime(1900,1,1,12,0,0)
false

>> Decimal(2.5) = DateTime(1900,1,1,12,0,0)
true

>> Decimal(".5") = Time(12,0,0)
true

// comparison done on floating point due to Date/DateTime/Time
>> Decimal(".5000000000000000000001") = Time(12,0,0)
true

>> Decimal("16.000000000000000000000002") = Decimal("16.000000000000000000000001")
false

>> Decimal("16.000000000000000000000002") = Decimal("16.000000000000000000000002")
true

>> Decimal("16.000000000000000000000002") = ParseJSON("1e100")
Error({Kind:ErrorKind.InvalidArgument})

>> Decimal("16.000000000000000000000002") = ParseJSON("16.000000000000000000000002")
true

>> Decimal("16.000000000000000000000002") = ParseJSON("16.000000000000000000000001")
false

>> Decimal(16) = ParseJSON("16")
true

>> Decimal(16) = ParseJSON("16.0")
true

>> Decimal(16) = ParseJSON("1.6e1")
true

// Untyped

>> ParseJSON("2.000000000000000000000000001") = Decimal("2.000000000000000000000000001")
true

>> ParseJSON("1e100") = Decimal("2.000000000000000000000000001")
Error({Kind:ErrorKind.InvalidArgument})
