// Scalar + Table
>> Concatenate("a", LastN(Table({b:"1"},{b:"2"}), 0))
Table()

>> Concatenate("a", If(1<0, ["txt"]))
Blank()

>> Concatenate("a", If(1/0<2, ["txt"]))
Error({Kind:ErrorKind.Div0})

>> Concatenate(Blank(), ["hello", Mid("great", -1), "world"])
Blank()

>> Concatenate(Blank(), Table({a:"one"},If(1<0,{a:"two"}),{a:"three"}))
Blank()

>> Concatenate(Blank(), Table({a:"one"},If(1/0<2,{a:"two"}),{a:"three"}))
Blank()

// Table + Scalar (Reverse Arguments)

>> Concatenate(LastN(Table({b:"1"},{b:"2"}), 0), "a")
Table()

>> Concatenate(If(1<0, ["txt"]), "a")
Blank()

>> Concatenate(If(1/0<2, ["txt"]), "a")
Error({Kind:ErrorKind.Div0})

>> Concatenate(["hello", Mid("great", -1), "world"], Blank())
Blank()

>> Concatenate(Table({a:"one"},If(1<0,{a:"two"}),{a:"three"}), Blank())
Blank()

>> Concatenate(Table({a:"one"},If(1/0<2,{a:"two"}),{a:"three"}), Blank())
Blank()

// Table + Table

>> Concatenate(["one", "two"], If(1<0, ["txt"]))
Blank()

>> Concatenate(["one", "two"], If(1/0<2, ["txt"]))
Error({Kind:ErrorKind.Div0})
