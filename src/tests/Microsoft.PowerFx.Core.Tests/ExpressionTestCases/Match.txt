#SETUP: RegEx

>> Match("Hello", "\w").FullMatch
"H"

>> Match("Hello", "\w")
{FullMatch:"H",StartMatch:1,SubMatches:Table()}

>> Match("Hello", "(?<SubMatches>\w)")
{FullMatch:"H",StartMatch:1,SubMatches:"H"}

>> Match("Hello", "\w").StartMatch
1

>> Match("Hello", "llo").FullMatch
"llo"

>> Match("Hello", "llo", MatchOptions.Contains).FullMatch
"llo"

>> Match("Hello", "llo", MatchOptions.Complete).FullMatch
Blank()

>> Match("Hello", "llo", MatchOptions.Complete).StartMatch
Blank()

>> Match("Hello", "llo", MatchOptions.Complete).SubMatches
Blank()

>> Match("Bob Jones <bob.jones@contoso.com>", "<(?<email>" & Match.Email & ")>").email
"bob.jones@contoso.com"

>> Match("Bob Jones <invalidEmailAddress>", "<(?<email>" & Match.Email & ")>").email
Blank()

>> Match("PT2H1M39S", "PT(?:(?<hours>\d+)H)?(?:(?<minutes>\d+)M)?(?:(?<seconds>\d+)S)?").hours
"2"

>> Match( "Bob Jones <bob.jones@contoso.com>", "<(?<email>" & Match.Email & ")>").FullMatch
"<bob.jones@contoso.com>"

>> Match( "Bob Jones <bob.jones@contoso.com>", "<(?<email>" & Match.Email & ")>").StartMatch
11

>> Concat(ForAll(Match( "Bob Jones <bob.jones@contoso.com>", "<(?<email>" & Match.Email & ")>").SubMatches, With({x:Value}, x)), Value, ", ")
"bob.jones@contoso.com"

>> Match("Hello", "(?<p1>\w)l(?<p2>\w)").FullMatch
"ell"

>> Match("Hello", "(?<p1>\w)l(?<p2>\w)").StartMatch
2

>> Match("Hello", "(?<p1>\w)l(?<p2>\w)").p1
"e"

>> Match("Hello", "(?<p1>\w)l(?<p2>\w)").p2
"l"

>> Index(Match("Hello", "(?<p1>\w)l(?<p2>\w)").SubMatches, 1).Value
"e"

>> Index(Match("Hello", "(?<p1>\w)l(?<p2>\w)").SubMatches, 2).Value
"l"

>> Concat(ForAll(Match("Hello", "(?<p1>\w)l(?<p2>\w)").SubMatches, With({x:Value}, x)), Value, ", ")
"e, l"

>> With(Match("PT2H1M39S", "PT(?:(?<hours>\d+)H)?(?:(?<minutes>\d+)M)?(?:(?<seconds>\d+)S)?"), Time(Value(hours), Value(minutes), Value(seconds)))
Time(2,1,39,0)

>> Match("Hello", "(?<p1>\w)l(?<p2>\w)").SubMatches
Table({Value:"e"},{Value:"l"})

>> Match("Joe 164" & Char(10) & "Sam 208" & Char(10), "(\w+)\s(\d+)", MatchOptions.Complete)
Blank()

>> Match("Joe 164" & Char(10) & "Sam 208" & Char(10), "(\w+)\s(\d+)", MatchOptions.Complete & MatchOptions.Multiline)
{FullMatch:"Joe 164",StartMatch:1,SubMatches:Table({Value:"Joe"},{Value:"164"})}

>> Match("JohnDoe@microsoft.com", Match.Email)
{FullMatch:"JohnDoe@microsoft.com",StartMatch:1,SubMatches:Table()}

>> Match(Blank(), ".")
Blank()

>> Match(Blank(), Blank())
Errors: Error 15-22: Regular expressions must be constant values.|Error 0-5: The function 'Match' has some invalid arguments.

>> Match("28", 28)
Errors: Error 12-14: Regular expressions must be constant values.|Error 0-5: The function 'Match' has some invalid arguments.

>> Match(1/0, "Hi")
Error({Kind:ErrorKind.Div0})

>> Match("Hello", Right("llo", 3)).FullMatch
Errors: Error 15-30: Regular expressions must be constant values.|Error 0-5: The function 'Match' has some invalid arguments.|Error 31-41: Name isn't valid. 'FullMatch' isn't recognized.

>> Match("(555) 123-4567", "^[\+]?[(]?[0-9]{3}[)]?[-\s\.]?[0-9]{3}[-\s\.]?[0-9]{4,6}$")
{FullMatch:"(555) 123-4567",StartMatch:1,SubMatches:Table()}

>> Match("Hello", "Hello", MatchOptions.IgnoreCase)
{FullMatch:"Hello",StartMatch:1,SubMatches:Table()}

>> Match("Hi", "Hi", MatchOptions.Multiline)
{FullMatch:"Hi",StartMatch:1,SubMatches:Table()}

