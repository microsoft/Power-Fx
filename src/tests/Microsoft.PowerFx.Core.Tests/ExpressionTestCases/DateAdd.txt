// Leap year 
>> DateAdd(Date(2012,2,28), 1)
Date(2012,2,29)

>> DateAdd(Date(2013,2,28), 1)
Date(2013,3,1)

>> Day(DateAdd(Date(2012,2,28), 1))
29

>> Month(DateAdd(Date(2013,2,28), 1))
3

// DateTime comparisons
>> DateAdd(Date(2011,1,15), 3) < DateAdd(Date(2011,1,30), 3)
true

>> DateAdd(Date(2011,1,15), 3) < DateAdd(Date(2011,1,15), 3)
false

>> DateAdd(Date(2011,1,15), 3) <= DateAdd(Date(2011,1,30), 3)
true

>> DateAdd(Date(2011,1,15), 3) <= DateAdd(Date(2011,1,15), 3)
true

>> DateAdd(Date(2011,1,30), 3) < DateAdd(Date(2011,1,15), 3)
false

>> DateAdd(Date(2011,1,30), 3) <= DateAdd(Date(2011,1,15), 3)
false

>> DateAdd(Date(2011,1,15), 3) > DateAdd(Date(2011,1,30), 3)
false

>> DateAdd(Date(2011,1,15), 3) > DateAdd(Date(2011,1,15), 3)
false

>> DateAdd(Date(2011,1,15), 3) >= DateAdd(Date(2011,1,30), 3)
false

>> DateAdd(Date(2011,1,15), 3) >= DateAdd(Date(2011,1,15), 3)
true

>> DateAdd(Date(2011,1,30), 3) > DateAdd(Date(2011,1,15), 3)
true

>> DateAdd(Date(2011,1,30), 3) >= DateAdd(Date(2011,1,15), 3)
true

// Blank DateTime comparisons
>> DateAdd(If(1<0,DateTime(1,1,1,1,1,1)), 3) < DateAdd(Date(2011,1,30), 3)
true

>> DateAdd(If(1<0,DateTime(1,1,1,1,1,1)), 3) <= DateAdd(Date(2011,1,30), 3)
true

>> DateAdd(If(1<0,DateTime(1,1,1,1,1,1)), 3) > DateAdd(Date(2011,1,30), 3)
false

>> DateAdd(If(1<0,DateTime(1,1,1,1,1,1)), 3) >= DateAdd(Date(2011,1,30), 3)
false

// Error DateTime comparisons
>> DateAdd(Date(1/0, 2, 3), 3) < DateAdd(Date(2011,1,30), 3)
Error({Kind:ErrorKind.Div0})

>> DateAdd(Date(1/0, 2, 3), 3) <= DateAdd(Date(2011,1,30), 3)
Error({Kind:ErrorKind.Div0})

>> DateAdd(Date(1/0, 2, 3), 3) > DateAdd(Date(2011,1,30), 3)
Error({Kind:ErrorKind.Div0})

>> DateAdd(Date(1/0, 2, 3), 3) >= DateAdd(Date(2011,1,30), 3)
Error({Kind:ErrorKind.Div0})

// date add and part
>> Day(DateAdd(Date(2001,1,1), 3))
4

>> Day(DateAdd(Date(2001,1,1), 3, Blank()))
4

>> Day(DateAdd(Date(2001,1,1), Blank()))
1

>> DateAdd(Date(-1, 2, 3), 3)
Error({Kind:ErrorKind.InvalidArgument})

>> DateAdd(Date(1, 2, 3), 3)
Date(1,2,6)

>> Day(DateAdd(Date(2001,1,1), 4, TimeUnit.Days))
5

>> DateAdd(Date(2011,1,15), 100000000, "milliseconds")
Date(2011,1,16)

>> DateAdd(Date(2011,1,15), 100000000, "milliseconds") + Time(0,0,0)
DateTime(2011,1,16,3,46,40,0)

>> DateAdd(Date(2011,1,15), 100000000, TimeUnit.Milliseconds)
Date(2011,1,16)

>> DateAdd(Date(2011,1,15), 100000000, TimeUnit.Milliseconds) + Time(0,0,0)
DateTime(2011,1,16,3,46,40,0)

>> Month(DateAdd(Date(2001,1,1), 12, TimeUnit.Months))
1

>> Month(DateAdd(Date(2001,1,1), 3, TimeUnit.Quarters))
10

>> Month(DateAdd(Date(2001,1,1), 3, "Quarters"))
10

>> Month(DateAdd(Date(2001,1,1), 3, "quarters"))
10

>> Month(DateAdd(Date(2001,1,1), 3, "quaRTers"))
10

>> Year(DateAdd(Date(2001,1,1), 1, TimeUnit.Years))
2002


// ******************************** MILLISECONDS UNIT PARAMETER ********************************

>> DateAdd(DateTime(2000,1,1,0,0,0),-0,TimeUnit.Milliseconds)
DateTime(2000,1,1,0,0,0,0)

>> DateAdd(DateTime(2000,1,1,0,0,0),-1,TimeUnit.Milliseconds)
DateTime(1999,12,31,23,59,59,999)

>> DateAdd(DateTime(2000,1,1,0,0,0),-1.9,TimeUnit.Milliseconds)
DateTime(1999,12,31,23,59,59,998)

>> DateAdd(DateTime(2000,1,1,0,0,0),0,TimeUnit.Milliseconds)
DateTime(2000,1,1,0,0,0,0)

// Millisecond should be properly added
>> DateAdd(DateTime(2000,1,1,0,0,0),1234,TimeUnit.Milliseconds)
DateTime(2000,1,1,0,0,1,234)

>> DateAdd(DateTime(2000,1,1,0,0,0),1000.9,TimeUnit.Milliseconds)
DateTime(2000,1,1,0,0,1,1)


// ******************************** SECONDS UNIT PARAMETER ********************************

>> DateAdd(DateTime(2000,1,1,0,0,0),-0,TimeUnit.Seconds)
DateTime(2000,1,1,0,0,0,0)

// Second should be properly subtracted
>> DateAdd(DateTime(2000,1,1,0,0,0),-1,TimeUnit.Seconds)
DateTime(1999,12,31,23,59,59,0)

>> DateAdd(DateTime(2000,1,1,0,0,0),-1.9,TimeUnit.Seconds)
DateTime(1999,12,31,23,59,58,100)

>> DateAdd(DateTime(2000,1,1,0,0,0),0,TimeUnit.Seconds)
DateTime(2000,1,1,0,0,0,0)

>> DateAdd(DateTime(2000,1,1,0,0,0),1,TimeUnit.Seconds)
DateTime(2000,1,1,0,0,1,0)

>> DateAdd(DateTime(2000,1,1,0,0,0),1.9,TimeUnit.Seconds)
DateTime(2000,1,1,0,0,1,900)

// ******************************** MINUTES UNIT PARAMETER ********************************

>> DateAdd(DateTime(2000,1,1,0,0,0),-0,TimeUnit.Minutes)
DateTime(2000,1,1,0,0,0,0)

>> DateAdd(DateTime(2000,1,1,0,0,0),-1,TimeUnit.Minutes)
DateTime(1999,12,31,23,59,0,0)

>> DateAdd(DateTime(2000,1,1,0,0,0),-1.9,TimeUnit.Minutes)
DateTime(1999,12,31,23,58,6,0)

>> DateAdd(DateTime(2000,1,1,0,0,0),0,TimeUnit.Minutes)
DateTime(2000,1,1,0,0,0,0)

>> DateAdd(DateTime(2000,1,1,0,0,0),1,TimeUnit.Minutes)
DateTime(2000,1,1,0,1,0,0)

>> DateAdd(DateTime(2000,1,1,0,0,0),1.9,TimeUnit.Minutes)
DateTime(2000,1,1,0,1,54,0)


// ******************************** HOURS UNIT PARAMETER ********************************

>> DateAdd(DateTime(2000,1,1,0,0,0),-0,TimeUnit.Hours)
DateTime(2000,1,1,0,0,0,0)

>> DateAdd(DateTime(2000,1,1,0,0,0),-1,TimeUnit.Hours)
DateTime(1999,12,31,23,0,0,0)

>> DateAdd(DateTime(2000,1,1,0,0,0),-1.9,TimeUnit.Hours)
DateTime(1999,12,31,22,6,0,0)

>> DateAdd(DateTime(2000,1,1,0,0,0),0,TimeUnit.Hours)
DateTime(2000,1,1,0,0,0,0)

>> DateAdd(DateTime(2000,1,1,0,0,0),1,TimeUnit.Hours)
DateTime(2000,1,1,1,0,0,0)

>> DateAdd(DateTime(2000,1,1,0,0,0),1.9,TimeUnit.Hours)
DateTime(2000,1,1,1,54,0,0)


// ******************************** DAYS UNIT PARAMETER ********************************

>> DateAdd(DateTime(2000,1,1,0,0,0),-0,TimeUnit.Days)
DateTime(2000,1,1,0,0,0,0)

>> DateAdd(DateTime(2000,1,1,0,0,0),-1,TimeUnit.Days)
DateTime(1999,12,31,0,0,0,0)

>> DateAdd(DateTime(2000,1,1,0,0,0),-1.9,TimeUnit.Days)
DateTime(1999,12,30,2,24,0,0)

>> DateAdd(DateTime(2000,1,1,0,0,0),0,TimeUnit.Days)
DateTime(2000,1,1,0,0,0,0)

>> DateAdd(DateTime(2000,1,1,0,0,0),1,TimeUnit.Days)
DateTime(2000,1,2,0,0,0,0)

>> DateAdd(DateTime(2000,1,1,0,0,0),1.9,TimeUnit.Days)
DateTime(2000,1,2,21,36,0,0)

// ******************************** MONTHS UNIT PARAMETER ********************************

>> DateAdd(DateTime(2000,1,1,0,0,0),-0,TimeUnit.Months)
DateTime(2000,1,1,0,0,0,0)

>> DateAdd(DateTime(2000,1,1,0,0,0),-1,TimeUnit.Months)
DateTime(1999,12,1,0,0,0,0)

// Fractional parameter is truncated
>> DateAdd(DateTime(2000,1,1,0,0,0),-1.9,TimeUnit.Months)
DateTime(1999,12,1,0,0,0,0)

>> DateAdd(DateTime(2004,2,29,0,0,0),-12,TimeUnit.Months)
DateTime(2003,2,28,0,0,0,0)

>> DateAdd(DateTime(2000,1,1,0,0,0),0,TimeUnit.Months)
DateTime(2000,1,1,0,0,0,0)

>> DateAdd(DateTime(1900,1,31,0,0,0),1,TimeUnit.Months)
DateTime(1900,2,28,0,0,0,0)

// Fractional parameter is truncated
>> DateAdd(DateTime(1900,1,31,0,0,0),1.9,TimeUnit.Months)
DateTime(1900,2,28,0,0,0,0)

>> DateAdd(DateTime(2021,7,1,0,0,0),6,TimeUnit.Months)
DateTime(2022,1,1,0,0,0,0)


// ******************************** YEARS UNIT PARAMETER ********************************

>> DateAdd(DateTime(2000,1,1,0,0,0),-0,TimeUnit.Years)
DateTime(2000,1,1,0,0,0,0)

>> DateAdd(DateTime(2000,1,1,0,0,0),-1,TimeUnit.Years)
DateTime(1999,1,1,0,0,0,0)

// Fractional parameter is truncated
>> DateAdd(DateTime(2000,1,1,0,0,0),-1.9,TimeUnit.Years)
DateTime(1999,1,1,0,0,0,0)

>> DateAdd(DateTime(2004,2,29,0,0,0),-11,TimeUnit.Years)
DateTime(1993,2,28,0,0,0,0)

>> DateAdd(DateTime(2000,1,1,0,0,0),0,TimeUnit.Years)
DateTime(2000,1,1,0,0,0,0)

>> DateAdd(DateTime(1900,1,31,0,0,0),1,TimeUnit.Years)
DateTime(1901,1,31,0,0,0,0)

// Fractional parameter is truncated
>> DateAdd(DateTime(1900,1,31,0,0,0),1.9,TimeUnit.Years)
DateTime(1901,1,31,0,0,0,0)


// ******************************** QUARTERS UNIT PARAMETER ********************************

>> DateAdd(DateTime(2000,1,1,0,0,0),-0,TimeUnit.Quarters)
DateTime(2000,1,1,0,0,0,0)

>> DateAdd(DateTime(2000,1,1,0,0,0),-1,TimeUnit.Quarters)
DateTime(1999,10,1,0,0,0,0)

// Fractional parameter is truncated
>> DateAdd(DateTime(2000,1,1,0,0,0),-1.9,TimeUnit.Quarters)
DateTime(1999,10,1,0,0,0,0)

>> DateAdd(DateTime(2004,1,31,0,0,0),-11,TimeUnit.Quarters)
DateTime(2001,4,30,0,0,0,0)

>> DateAdd(DateTime(2000,1,1,0,0,0),0,TimeUnit.Quarters)
DateTime(2000,1,1,0,0,0,0)

>> DateAdd(DateTime(1900,1,31,0,0,0),1,TimeUnit.Quarters)
DateTime(1900,4,30,0,0,0,0)

// Fractional parameter is truncated
>> DateAdd(DateTime(1900,1,31,0,0,0),1.9,TimeUnit.Quarters)
DateTime(1900,4,30,0,0,0,0)

>> DateAdd(DateTime(1900,1,31,0,0,0),3,TimeUnit.Quarters)
DateTime(1900,10,31,0,0,0,0)

// ************** DEFAULT UNIT PARAMETER (Default Unit parameter is "TimeUnit.Days",when no Unit parameter is passed) **************

>> DateAdd(DateTime(2000,1,1,0,0,0),-0)
DateTime(2000,1,1,0,0,0,0)

>> DateAdd(DateTime(2000,1,1,0,0,0),-1)
DateTime(1999,12,31,0,0,0,0)

>> DateAdd(DateTime(2000,1,1,0,0,0),-1.9)
DateTime(1999,12,30,2,24,0,0)

>> DateAdd(DateTime(2000,1,1,0,0,0),0)
DateTime(2000,1,1,0,0,0,0)

>> DateAdd(DateTime(2000,1,1,0,0,0),1)
DateTime(2000,1,2,0,0,0,0)

>> DateAdd(DateTime(2000,1,1,0,0,0),1.9)
DateTime(2000,1,2,21,36,0,0)

// ******************************** NULL AND ERROR PARAMETERS ********************************

//Blank DateTime parameter
>> DateAdd(DateTimeValue(Blank()), 1, TimeUnit.Days)
DateTime(1899,12,31,0,0,0,0)

>> IsBlank(DateAdd(DateTimeValue(Blank()),1, TimeUnit.Days))
false

>> IsError(DateAdd(DateTimeValue(Blank()),1, TimeUnit.Days))
false

//Blank Addition count parameter
>> DateAdd(Date(2000,1,1), Blank(), TimeUnit.Days)
Date(2000,1,1)

//Empty string passed as Addition count parameter
>> DateAdd(Date(2000,1,1),"", TimeUnit.Days)
Date(2000,1,1)

//Blank Units parameter
>> DateAdd(Date(2000,1,1),1, Blank())
Date(2000,1,2)

//Empty string passed as Units parameter
>> DateAdd(Date(2000,1,1),1, "")
Error({Kind:ErrorKind.InvalidArgument})

// Errors passed as parameters
>> DateAdd(If(Sqrt(-1)<0,Date(2000,1,1)),1,TimeUnit.Days)
Error({Kind:ErrorKind.Numeric})

>> DateAdd(Date(2000,1,1),1/0,TimeUnit.Days)
Error({Kind:ErrorKind.Div0})

>> DateAdd(Date(2000,1,1),1,Text(1/0))
Error({Kind:ErrorKind.Div0})

// ****************************** TIME ARGUMENTS *****************************

// Time
>> DateAdd(Time(12,34,56), 0.25)
Time(18,34,56,0)

// Time
>> Text(DateAdd(Time(12,34,56,789), 2), "yyyy-mm-dd hh:mm:ss.000")
"1900-01-01 12:34:56.789"

// ******************************** COERCIONS ********************************

// Number to date
>> DateAdd(1, 1)
DateTime(1900,1,1,0,0,0,0)

// String to date
>> DateAdd("2000-01-01", 1)
DateTime(2000,1,2,0,0,0,0)

// Boolean to date
>> DateAdd(false, 1)
Errors: Error 8-13: Invalid argument type (Boolean). Expecting a DateTime value instead.|Error 0-17: The function 'DateAdd' has some invalid arguments.

// Date to number
>> DateAdd(Date(1900,1,1), Date(2022,1,1))
Date(2022,1,3)

// String to number
>> DateAdd(Date(2022,1,1), "12")
Date(2022,1,13)
