#SETUP: RegEx

>> IsMatch("Hi", "H")
false

>> IsMatch("Hi", "Hi")
true

>> IsMatch("Hi", "Hi", MatchOptions.Complete)
true

>> IsMatch("Bye", "H")
false

>> IsMatch("Hi", "H", MatchOptions.Contains)
true

>> IsMatch("Hi", "H", MatchOptions.Contains & MatchOptions.Complete)
false

>> IsMatch("Hi", "H", MatchOptions.Contains & MatchOptions.BeginsWith)
true

>> IsMatch("Hi", "H.*")
true

>> IsMatch("Hi", "H.*i")
true

>> IsMatch("000", Match.Digit & Match.Digit & Match.Digit)
true

>> IsMatch("JohnDoe@microsoft.com", Match.Email)
true

>> IsMatch("JohnDoe@microsoftcom", Match.Email)
false

>> IsMatch("Joe 164" & Char(10) & "Sam 208" & Char(10), "(\w+)\s(\d+)", MatchOptions.Complete & MatchOptions.Multiline)
true

>> IsMatch("Joe 164" & Char(10) & "Sam 208" & Char(10), "(\w+)\s(\d+)", MatchOptions.Complete)
false

>> IsMatch(1/0, "Hi")
Error({Kind:ErrorKind.Div0})

>> IsMatch(Blank(), "Hi")
false

>> IsMatch("Foo", Blank())
Errors: Error 15-22: Regular expressions must be constant values.

>> IsMatch(28, "Bar")
false

>> IsMatch("", "")
true

>> IsMatch(Blank(), ".")
false

>> IsMatch(Blank(), Blank())
Errors: Error 17-24: Regular expressions must be constant values.

>> IsMatch("!@#$%^&*()-=_+<>,.:;\'{}[]\|?/~` A 1234567890", "\p{L}")
false

>> IsMatch("!@#$%^&*()-=_+<>,.:;\'{}[]\|?/~`  1234567890", "\p{L}")
false

// With Icelandic Eth
>> IsMatch("!@#$%^&*()-=_+<>,.:;\'{}[]\|?/~` Ð 1234567890", "\p{L}")
false

>> IsMatch("Foo", "J(")
Error({Kind:ErrorKind.BadRegex})

// Dangerous Regex, will timeout (should take >2h on a fast CPU)
>> IsMatch("ababababababababababababababababababababababababababababababababababa", "^((ab)*)+$")
Error({Kind:ErrorKind.Timeout})

>> IsMatch( "28", Concat( [2,8], Value ) )
Errors: Error 15-37: Regular expressions must be constant values.

>> IsMatch( "28", Concat( [2,8], If( false, Text(Now()), Value ) ) )
Errors: Error 15-63: Regular expressions must be constant values.

>> IsMatch("(555) 123-4567", "^[\+]?[(]?[0-9]{3}[)]?[-\s\.]?[0-9]{3}[-\s\.]?[0-9]{4,6}$")
true

>> IsMatch("(555)_123-4567", "^[\+]?[(]?[0-9]{3}[)]?[-\s\.]?[0-9]{3}[-\s\.]?[0-9]{4,6}$")
false

>> IsMatch("147 123-4567", "^[\+]?[(]?[0-9]{3}[)]?[-\s\.]?[0-9]{3}[-\s\.]?[0-9]{4,6}$")
true

>> IsMatch("(44) 123-4567", "^[\+]?[(]?[0-9]{3}[)]?[-\s\.]?[0-9]{3}[-\s\.]?[0-9]{4,6}$")
false

>> IsMatch("""Hello world""", Char(34) & "Hello",  MatchOptions.Contains)
true

>> IsMatch("Hello 123 world", $"Hello {Sqrt(1)}{Sqrt(4)}{Sqrt(9)} world")
true

>> IsMatch("Hello", "Hello", MatchOptions.IgnoreCase)
true

>> IsMatch("Hi", "Hi", MatchOptions.Multiline)
true

>> IsMatch("Hi", "H", MatchOptions.EndsWith )
false

>> IsMatch("Hi", "H", MatchOptions.BeginsWith)
true

>> IsMatch("Hi", "i", MatchOptions.EndsWith)
true

>> IsMatch("Hi", "I", MatchOptions.EndsWith)
false

>> IsMatch("Hi", "I", MatchOptions.EndsWith & MatchOptions.IgnoreCase)
true

>> IsMatch("!@#$%^&*()-=_+<>,.:;\'{}[]\|?/~` A 1234567890", "\p{L}", MatchOptions.Contains)
true

>> IsMatch("!@#$%^&*()-=_+<>,.:;\'{}[]\|?/~`  1234567890", "\p{L}", MatchOptions.Contains)
false

>> IsMatch("!@#$%^&*()-=_+<>,.:;\'{}[]\|?/~` Ð 1234567890", "\p{L}", MatchOptions.Contains)
true
