#SETUP: ConsistentOneColumnTableResult

>> Find("", "")
1

>> Find("", "", 1)
1

>> Find("", "", 2)
Error({Kind:ErrorKind.InvalidArgument})

>> Find("", "textToBeSearchedIn")
1

>> Find("", "textToBeSearchedIn", 1)
1

>> Find("", "textToBeSearchedIn", 4)
4

>> Find("textToFind", "")
Blank()

>> Find("textToFind", "", 2)
Error({Kind:ErrorKind.InvalidArgument})

>> Find(",", "LastName,FirstName")
9

>> Find(",", "LastName,FirstName", 2)
9

>> Find(",", "LastName,FirstName", 9)
9

>> Find(",", "LastName,FirstName", 9.5)
9

>> Find(",", "LastName,FirstName", 10)
Blank()

>> Find("#", "LastName,FirstName")
Blank()

>> Find("#", "LastName,FirstName", 3)
Blank()

>> Find("#", "LastName,FirstName", 100)
Error({Kind:ErrorKind.InvalidArgument})

>> Find(",", "LastName,First,Name")
9

>> Find(",", "LastName,First,Name", 2)
9

>> Find(",", "LastName,First,Name", 9)
9

>> Find(",", "LastName,First,Name", 10)
15

>> Find(",", "LastNameFirstName,")
18

>> Find(",", "LastNameFirstName,", 18)
18

>> Find(",", "LastNameFirstName,", 19)
Blank()

>> Find("MULTIPLECHARS", "LastNameMULTIPLECHARSFirstName")
9

>> Find("MULTIPLECHARS", "LastNameMULTIPLEFirstName")
Blank()

>> Find(",", ",,,,,,")
1

>> Find(",", ",,,,,,", 2)
2

>> Find(Blank(), Blank())
1

>> Find(Blank(), Blank(), 2)
Error({Kind:ErrorKind.InvalidArgument})

>> Find(Blank(), "textToBeSearchedIn")
1

>> Find(Blank(), "textToBeSearchedIn", 2)
2

>> Find("textToFind", Blank())
Blank()

>> Find("textToFind", Blank(), 3)
Error({Kind:ErrorKind.InvalidArgument})

>> Find(",", "LastName,FirstName", -1)
Error({Kind:ErrorKind.InvalidArgument})

>> Find(",", "LastName,FirstName", 0)
Error({Kind:ErrorKind.InvalidArgument})

>> Find(",", "LastName,FirstName", Blank())
Error({Kind:ErrorKind.InvalidArgument})

>> Find("B", "LastNameisBlah")
11

>> Find("B", "LastNameisblah")
Blank()

>> Find("b", "LastNameisblah")
11

>> Find("b", "LastNameisBlah")
Blank()

>> Find("BB", "LastNameisBBlah")
11

>> Find("BB", "LastNameisBblah")
Blank()

>> Find("bb", "LastNameisbblah")
11

>> Find("bb", "LastNameisbBlah")
Blank()

>> Find("B", "LastNameisBlahFirstNameisBlah")
11

>> Find("B", "LastNameisBlahFirstNameisBlah", 2)
11

>> Find("B", "LastNameisBlahFirstNameisBlah", 11)
11

>> Find("B", "LastNameisBlahFirstNameisBlah", 12)
26

>> Find("B", "LastNameisBlahFirstNameisblah", 12)
Blank()

>> Find("B", "LastNameisBiller")
11

>> Find("B", "LastNameisbiller")
Blank()

>> Find("b", "LastNameisbiller")
11

>> Find("b", "LastNameisBiller")
Blank()

>> Find("BB", "LastNameisBBiller")
11

>> Find("BB", "LastNameisBbiller")
Blank()

>> Find("bb", "LastNameisbbiller")
11

>> Find("bb", "LastNameisbBiller")
Blank()

>> Find("B", "LastNameisBillerFirstNameisBethy")
11

>> Find("B", "LastNameisBillerFirstNameisBethy", 2)
11

>> Find("B", "LastNameisBillerFirstNameisBethy", 11)
11

>> Find("B", "LastNameisBillerFirstNameisBethy", 12)
28

>> Find("B", "LastNameisBillerFirstNameisbethy", 12)
Blank()

>> Find("", "", -1)
Error({Kind:ErrorKind.InvalidArgument})

>> Find("", "", 0)
Error({Kind:ErrorKind.InvalidArgument})

>> Find("", "textToBeSearchedIn", -1)
Error({Kind:ErrorKind.InvalidArgument})

>> Find("", "textToBeSearchedIn", 0)
Error({Kind:ErrorKind.InvalidArgument})

>> Find("", "textToBeSearchedIn", 2)
2

>> Find("", "textToBeSearchedIn", 100)
Error({Kind:ErrorKind.InvalidArgument})

>> Find("textToFind", "",-1)
Error({Kind:ErrorKind.InvalidArgument})

>> Find("textToFind", "",0)
Error({Kind:ErrorKind.InvalidArgument})

>> Find("textToFind", "",1)
Blank()

>> Find("textToFind", "",2)
Error({Kind:ErrorKind.InvalidArgument})

>> Find(Blank(), Blank(), -1)
Error({Kind:ErrorKind.InvalidArgument})

>> Find(Blank(), Blank(), 0)
Error({Kind:ErrorKind.InvalidArgument})

>> Find(Blank(), Blank(), 1)
1

// ************************* SCALAR PARAMETERS - EMPTY, NULL or ERROR *************************

>> Find(Blank(), "")
1

>> Find("", Blank())
1

>> Find(1/0, "", 1)
Error({Kind:ErrorKind.Div0})

>> Find(1, 1/0, 1)
Error({Kind:ErrorKind.Div0})

>> Find(1, 1, 1/0)
Error({Kind:ErrorKind.Div0})

>> Find(18, 18, ErrorKind.Sync)
1

>> Find(18, 18, ErrorKind.MissingRequired)
Blank()

// ************************* TABLE PARAMETERS *************************

// ======================== SCENARIO 9 ========================
// : findText: [{ find: null }, { find: '' }, { find: ',' }], withinText: 'textToBeSearchedIn,textToBeSearchedIn', startIndex: 1

>> Find(Table(
   {find: Blank()},
   {find: ""},
   {find: ","}),
   "textToBeSearchedIn,textToBeSearchedIn",
   1)
Table({Value:1},{Value:1},{Value:19})

// ======================== SCENARIO 10 ========================
// findText: [{ find: null }, { find: '' }, { find: ',' }, { find: ',' }], withinText: 'textToBeSearchedIn,textToBeSearchedIn', startIndex: [{ start: 1 }, { start: 2 }, { start: 3 }, { start: 20 }]
>> Find(
   Table(
   {find: Blank()},{find: ""},{find: ","},{find: ","}),
   "textToBeSearchedIn,textToBeSearchedIn",
   Table({start:1},{start:2},{start:3},{start:20}))
Table({Value:1},{Value:2},{Value:19},{Value:Blank()})

// ======================== SCENARIO 11 ========================   
// findText: ',', withinText: [{ within: 'textToBeSearchedIn,textToBeSearchedIn' }], startIndex: 1

>> Find(",", Table({within: "textToBeSearchedIn,textToBeSearchedIn"}),1)
Table({Value:19})

//  ======================== SCENARIO 12 ========================
// findText: ',', 
// withinText: [{ within: 'textToBeSearchedIn,textToBeSearchedIn' },{ within: 'textToBeSearchedIn,textToBeSearchedIn,' },{ within: 'textToBeSearchedIn,textToBeSearchedIn' },]
// startIndex: [{ start: 1 }, { start: 20 }, { start: 40 }]   

>> Find(",", 
   Table({within: "textToBeSearchedIn,textToBeSearchedIn"},{within: "textToBeSearchedIn,textToBeSearchedIn,"},{within: "textToBeSearchedIn,textToBeSearchedIn"}),
   [1,20,40])
Table({Value:19},{Value:38},{Value:Error({Kind:ErrorKind.InvalidArgument})})

//  ======================== SCENARIO 13 ========================
// findText: [{ find: null }, { find: '' }, { find: ',' }]
// withinText: [{ within: 'textToBeSearchedIn,textToBeSearchedIn' },{ within: 'textToBeSearchedIn,textToBeSearchedIn,' },{ within: 'textToBeSearchedIn,textToBeSearchedIn' }]
// startIndex: [{ start: 1 }, { start: 10 }, { start: 9 }]

>> Find(
   Table({find: Blank()},{find: ""},{find: ","}), 
   Table({within: "textToBeSearchedIn,textToBeSearchedIn"},{within: "textToBeSearchedIn,textToBeSearchedIn,"},{within: "textToBeSearchedIn,textToBeSearchedIn"}),
   [1,10,9])
Table({Value:1},{Value:10},{Value:19})

//  ======================== SCENARIO 14 ========================
// findText: ',', withinText: 'textToBeSearchedIn,textToBeSearchedIn', startIndex: [{ start: 1 }, { start: 2 }, { start: 19 }, { start: 20 }]

>> Find(
   ",", 
   "textToBeSearchedIn,textToBeSearchedIn",
   [1,2,19,20])
Table({Value:19},{Value:19},{Value:19},{Value:Blank()})

//  ======================== SCENARIO 17 ========================
//  findText: [{ find: null }, { find: '' }, { find: ',' }] , withinText: 'textToBeSearchedIn,textToBeSearchedIn'

>> Find(
   Table({find: Blank()},{find: ""},{find: ","}),  	
   "textToBeSearchedIn,textToBeSearchedIn" )
Table({Value:1},{Value:1},{Value:19})

//  ======================== SCENARIO 18 ========================
//  findText: ',' , withinText: [{ within: 'textToBeSearchedIn,textToBeSearchedIn' }],

>> Find(
   ",",  	
   Table({within:"textToBeSearchedIn,textToBeSearchedIn"})
   )
Table({Value:19})

//  ======================== SCENARIO 19 ========================
//  findText: [{ find: null }, { find: '' }, { find: ',' }], 
//  withinText: [{ within: 'textToBeSearchedIn,textToBeSearchedIn' },{ within: 'textToBeSearchedIn,textToBeSearchedIn,' },{ within: 'textToBeSearchedIn,textToBeSearchedIn' }]

>> Find(
   Table({find: Blank()},{find: ""},{find: ","}), 
   Table({within: "textToBeSearchedIn,textToBeSearchedIn"},{within: "textToBeSearchedIn,textToBeSearchedIn,"},{within: "textToBeSearchedIn,textToBeSearchedIn"})
   )
Table({Value:1},{Value:1},{Value:19})

//  ======================== SCENARIO 26 ========================
//  findText: [], withinText: '', startIndex: 1,

>> Find(Filter(["string"], Len(Value) > 10),"",1)
Table()

//  ======================== SCENARIO 27 ========================
// findText: '', withinText: [], startIndex: 1,

>> Find("", Filter(["string"], Len(Value) > 10),1)
Table()

//  ======================== SCENARIO 28 ========================
//  findText: 'textToFind', withinText: [], startIndex: 2

>> Find("textToFind", Filter(["string"], Len(Value) > 10),2)
Table()

//  ======================== SCENARIO 29 ========================
//  findText: [],withinText: []

>> Find(Filter(["string"], Len(Value) > 10), Filter(["string"], Len(Value) > 10))
Table()

//  ======================== SCENARIO 30 ========================
//  findText: [],withinText: [], startIndex: []

>> Find(Filter(["string"], Len(Value) > 10), Filter(["string"], Len(Value) > 10), Filter([1, 2, 3], Value > 100))
Table()

//  ======================== SCENARIO 41 ========================
//  findText: [{ find: 'a' }, { find: 'b' }, { find: 'c' }], withinText: anError 
	
>> Find(
   Table({find:"a"},{find:"b"},{find:"c"}),
   1/0
   )
Table({Value:Error({Kind:ErrorKind.Div0})},{Value:Error({Kind:ErrorKind.Div0})},{Value:Error({Kind:ErrorKind.Div0})})

>> Find("B", "LastNameisBillerFirstNameisBethy", 1e28)
Error({Kind:ErrorKind.InvalidArgument})

>> Find("B", "LastNameisBillerFirstNameisBethy", -1e28)
Error({Kind:ErrorKind.InvalidArgument})
