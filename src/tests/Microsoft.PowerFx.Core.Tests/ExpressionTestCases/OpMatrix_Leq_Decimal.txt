#SETUP: disable:NumberIsFloat

// LESS THAN OR EQUAL

// In these tests, 1E100 or some other very large/small number is used to test floating point results which decimal can not represent, 
// and a highly precise number is used for decimal, such as 2.00000000000000000000000000002 that would be rounded in floating point.
// For example, if a decimal test results with 25+ signficant digits results in 2, then an inappropriate conversion to floating point was made.

// Basic Float and Decimal without constructors

>> 1 <= 1
true

>> 1 <= 2
true

>> 1 <= 0
false

>> 1.00000000000000000000000001 <= 1.00000000000000000000000001
true

>> 1.00000000000000000000000001 <= 1.00000000000000000000000002
true

>> 1.00000000000000000000000001 <= 1.00000000000000000000000000
false

// overflow error on decimal
>> 1E100 = 1E100
Errors: Error 0-5: Numeric value is too large.|Error 8-13: Numeric value is too large.|Error 6-7: Incompatible types for comparison. These types can't be compared: Error, Error.

>> 1E100 = 1.1E100
Errors: Error 0-5: Numeric value is too large.|Error 8-15: Numeric value is too large.|Error 6-7: Incompatible types for comparison. These types can't be compared: Error, Error.

>> 1E100 = 9.9E99
Errors: Error 0-5: Numeric value is too large.|Error 8-14: Numeric value is too large.|Error 6-7: Incompatible types for comparison. These types can't be compared: Error, Error.

// underflow to zero on decimal
>> 1E-100 <= 1E-100
true

>> 1E-100 <= 1.1E-100
true

>> 1E-100 = 9.9E-101
true

// Float

>> Float(16) <= Float(14)
false

>> Float(16) <= Float(16)
true

>> Float(16) <= Float("1e100")
true

>> Float(16) <= Float(18)
true

>> Float(16) <= "16"
Errors: Error 13-17: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> Float(16) <= "16.000000000000000000002"
Errors: Error 13-39: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> Float(16) <= "14"
Errors: Error 13-17: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> Float(16) <= "18"
Errors: Error 13-17: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> Float(16) <= "1e20"
Errors: Error 13-19: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> Float(1e20) <= "1e20"
Errors: Error 15-21: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> Float(1) <= true
Errors: Error 12-16: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> Float(1) <= false
Errors: Error 12-17: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> Float(0) <= true
Errors: Error 12-16: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> Float(0) <= false
Errors: Error 12-17: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> Float(2) <= true
Errors: Error 12-16: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> Float(2) <= false
Errors: Error 12-17: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> Float(0) <= Blank()
true

>> Float(1) <= Blank()
false

>> Float(2) <= Blank()
false

>> If(1<0,Float(1)) <= Blank()
true

>> Float(2) <= Date(1900,1,1)
true

>> Value(Date(2000,1,1))
36526

>> Float(36526) <= Date(2000,1,1)
true

>> Float(36526) <= Date(2001,12,12)
true

>> Value(DateTime(2000,1,1,12,0,0))
36526.5

>> Float(36526.5) <= DateTime(2000,1,1,12,0,0)
true

>> Float(36526.5) <= DateTime(2020,12,20,0,0,0)
true

>> Value(Time(12,0,0))
0.5

>> Float(0.5) <= Time(12,0,0)
true

>> Float(0.5) <= Time(9,0,0)
false

// comparison done in floating point, decimal rounded
>> Float(16) <= Decimal("16.000000000000000000002")
true

>> Float(16) <= Decimal("16")
true

>> Float("1e100") <= Decimal("2.00000000000000000000002")
false

>> Float(16) <= ParseJSON("16")
true

// comparison done in floating point, decimal rounded
>> Float(16) <= ParseJSON("16.0000000000000000000002")
true

// comparison done in floating point, decimal rounded
>> Float("16.0000000000000000000002") <= ParseJSON("16.0000000000000000000002")
true

>> Float(16) <= ParseJSON("1e100")
true

>> Float("1e100") <= ParseJSON("2")
false

>> Float("1e100") <= ParseJSON("1e100")
true

// Text - Text can only be compared with other text

>> "16" <= Float(16)
Errors: Error 0-4: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> "16" <= Float(18)
Errors: Error 0-4: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> "16" <= Float(14)
Errors: Error 0-4: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> "1e100" <= Float(2)
Errors: Error 0-7: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> "" <= Float(0)
Errors: Error 0-2: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> "16" <= "16"
Errors: Error 0-4: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.|Error 8-12: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> "16" <= "18"
Errors: Error 0-4: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.|Error 8-12: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> "16" <= "14"
Errors: Error 0-4: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.|Error 8-12: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> "16" <= "16.00000000000000000000000002"
Errors: Error 0-4: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.|Error 8-39: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> "1e100" <= "2"
Errors: Error 0-7: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.|Error 11-14: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> "1" <= true
Errors: Error 0-3: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.|Error 7-11: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> "1e100" <= true
Errors: Error 0-7: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.|Error 11-15: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> "16" <= Blank()
Errors: Error 0-4: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> "1" <= Blank()
Errors: Error 0-3: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> "0" <= Blank()
Errors: Error 0-3: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> "" <= Blank()
Errors: Error 0-2: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> "1e100" <= Blank()
Errors: Error 0-7: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> "36526" <= Date(2000,1,1)
Errors: Error 0-7: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> "36526.5" <= DateTime(2000,1,1,12,0,0)
Errors: Error 0-9: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> "16" <= Time(12,0,0)
Errors: Error 0-4: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> "2" <= Decimal("2.000000000000000000000002")
Errors: Error 0-3: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> "1e100" <= Decimal("2.000000000000000000000002")
Errors: Error 0-7: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> "16" <= ParseJSON("16")
Errors: Error 0-4: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> "16" <= ParseJSON("14")
Errors: Error 0-4: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> "16" <= ParseJSON("18")
Errors: Error 0-4: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> "16" <= ParseJSON("""16""")
Errors: Error 0-4: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> "16" <= ParseJSON("""14""")
Errors: Error 0-4: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> "16" <= ParseJSON("""18""")
Errors: Error 0-4: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> "1e100" <= ParseJSON("1e100")
Errors: Error 0-7: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> "true" <= ParseJSON("true")
Errors: Error 0-6: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> "true" <= ParseJSON("false")
Errors: Error 0-6: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> "false" <= ParseJSON("false")
Errors: Error 0-7: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> "false" <= ParseJSON("true")
Errors: Error 0-7: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> "1e100" <= ParseJSON("2")
Errors: Error 0-7: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

// Boolean

>> true <= Float(2)
Errors: Error 0-4: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> true <= Float(1)
Errors: Error 0-4: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> true <= Float(0)
Errors: Error 0-4: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> false <= Float(2)
Errors: Error 0-5: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> false <= Float(1)
Errors: Error 0-5: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> false <= Float(0)
Errors: Error 0-5: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> true <= Float("1e100")
Errors: Error 0-4: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> true <= "1"
Errors: Error 0-4: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> false <= "0"
Errors: Error 0-5: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> false <= "1"
Errors: Error 0-5: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> true <= "1E+100"
Errors: Error 0-4: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

// returns false in Excel
>> true <= "true"
Errors: Error 0-4: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> false <= "false"
Errors: Error 0-5: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> true <= true
Errors: Error 0-4: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> true <= false
Errors: Error 0-4: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> true <= Blank()
Errors: Error 0-4: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> false <= Blank()
Errors: Error 0-5: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> true <= Date(1927,5,18)
Errors: Error 0-4: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> true <= DateTime(1927,5,18,0,0,0)
Errors: Error 0-4: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> true <= Time(12,0,0)
Errors: Error 0-4: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> false <= Date(1927,5,18)
Errors: Error 0-5: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> false <= DateTime(1927,5,18,0,0,0)
Errors: Error 0-5: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> false <= Time(12,0,0)
Errors: Error 0-5: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> true <= Decimal("1.000000000000000000000002")
Errors: Error 0-4: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> true <= Decimal(1)
Errors: Error 0-4: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> true <= Decimal(0)
Errors: Error 0-4: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> false <= Decimal("1.000000000000000000000002")
Errors: Error 0-5: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> false <= Decimal(1)
Errors: Error 0-5: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> false <= Decimal(0)
Errors: Error 0-5: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> true <= ParseJSON("2")
Errors: Error 0-4: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> true <= ParseJSON("1")
Errors: Error 0-4: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> true <= ParseJSON("0")
Errors: Error 0-4: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> true <= ParseJSON("true")
Errors: Error 0-4: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> true <= ParseJSON("false")
Errors: Error 0-4: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> false <= ParseJSON("2")
Errors: Error 0-5: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> false <= ParseJSON("1")
Errors: Error 0-5: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> false <= ParseJSON("0")
Errors: Error 0-5: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> false <= ParseJSON("true")
Errors: Error 0-5: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> false <= ParseJSON("false")
Errors: Error 0-5: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> true <= ParseJSON("1e100")
Errors: Error 0-4: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> false <= ParseJSON("null")
Errors: Error 0-5: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

// Blank

>> Blank() <= Float(2)
true

>> Blank() <= Float("1e100")
true

>> Blank() <= "2"
Errors: Error 11-14: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> Blank() <= Float(0)
true

>> Blank() <= "1e100"
Errors: Error 11-18: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> Blank() <= true
Errors: Error 11-15: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> Blank() <= Blank()
true

>> Blank() <= Date(2000,1,1)
true

>> Blank() <= DateTime(2000,1,1,12,0,0)
true

>> Blank() <= Time(12,0,0)
true

>> Blank() <= Decimal("2.000000000000000000000002")
true

>> Blank() <= Decimal("0")
true

>> Blank() <= ParseJSON("2")
true

>> Blank() <= ParseJSON("1e100")
Error({Kind:ErrorKind.InvalidArgument})

>> Blank() <= ParseJSON("null")
true

>> Blank() <= ParseJSON("0")
true

// Date

>> Date(2000,1,1) <= Float(2)
false

>> Date(1900,1,1) <= Float(2)
true

>> Date(1900,1,0) <= Float(2)
true

>> Date(1900,1,2) <= Float(2)
false

>> Date(1900,1,1) <= "2"
Errors: Error 18-21: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> Date(1900,1,0) <= true
Errors: Error 18-22: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> Date(2000,1,1) <= Blank()
false

>> Date(1954,10,3) <= Date(1927,5,18)
false

>> Date(1927,5,18) <= Date(1954,10,3)
true

>> Date(1954,10,3) <= Date(1954,10,3)
true

>> Date(1954,10,3) <= Date(1900,1,1)
false

>> Date(1954,10,3) <= DateTime(1954,10,3,0,0,0)
true

>> Date(1954,10,3) <= DateTime(1954,10,3,1,0,0)
true

>> Date(1954,10,3) <= Now()
true

>> Date(1954,10,3) <= Today()
true

>> Date(2000,1,1) <= Time(12,0,0)
false

>> Date(1900,1,1) <= Decimal("2.000000000000000000000002")
true

>> Date(1900,1,1) <= Decimal("2.000000000000000000000000")
true

>> Date(1900,1,1) <= Decimal("1.999999999999999999999999")
false

>> Date(1900,1,1) <= Float("1.999999999999999999999999")
true

>> Date(1900,1,1) <= ParseJSON("2")
Error({Kind:ErrorKind.InvalidArgument})

>> Date(2000,1,1) <= ParseJSON("1e100")
Error({Kind:ErrorKind.InvalidArgument})

>> Date(2000,1,1) <= ParseJSON("""2000-01-01""")
true

>> Date(2000,1,1) <= ParseJSON("""2000-01-02""")
true

>> Date(2000,1,1) <= ParseJSON("""1999-12-31""")
false

// DateTime

>> DateTime(1900,1,1,12,0,0) <= Float(2.5)
true

>> DateTime(1900,1,1,12,0,0) <= Float(2)
false

>> DateTime(1900,1,1,12,0,1) <= Float(2.5)
false

>> DateTime(1900,1,1,12,0,0) <= "2.5"
Errors: Error 29-34: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> DateTime(2000,1,1,12,0,0) <= true
Errors: Error 29-33: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> DateTime(2000,1,0,0,0,0) <= true
Errors: Error 28-32: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> DateTime(2000,1,1,12,0,0) <= Blank()
false

>> DateTime(1927,5,18,0,0,0) <= Date(1927,5,18)
true

>> DateTime(1927,5,18,0,0,1) <= Date(1927,5,18)
false

>> DateTime(1927,5,17,23,0,1) <= Date(1927,5,18)
true

>> DateTime(1900,1,1,0,0,0) <= Date(1900,1,1)
true

>> DateTime(1900,1,1,12,0,0) <= Date(1900,1,1)
false

>> DateTime(1927,5,18,1,2,3) <= DateTime(1927,5,18,1,2,3)
true

>> DateTime(1900,1,1,12,0,0) <= Time(12,0,0)
false

>> DateTime(1900,1,1,12,0,0) <= Decimal("2.5000000000000000000002")
true

>> DateTime(1900,1,1,12,0,0) <= Decimal("2.5")
true

>> DateTime(2000,1,1,12,0,0) <= ParseJSON("2")
Error({Kind:ErrorKind.InvalidArgument})

>> DateTime(2000,1,1,12,0,0) <= ParseJSON("2.5")
Error({Kind:ErrorKind.InvalidArgument})

>> DateTime(2000,1,1,12,0,0) <= ParseJSON("1e100")
Error({Kind:ErrorKind.InvalidArgument})

>> DateTime(2000,1,1,12,0,0) <= ParseJSON("""2000-01-01T12:00:00""")
true

>> DateTime(2000,1,1,12,0,1) <= ParseJSON("""2000-01-01T12:00:01""")
true

>> DateTime(2000,1,1,12,0,0) <= ParseJSON("""2000-01-01T12:00:01""")
true

>> DateTime(2000,1,1,12,0,2) <= ParseJSON("""2000-01-01T12:00:01""")
false

// Time

>> Time(9,0,0) <= Float(0.375)
true

>> Time(9,0,0) <= "0.375"
Errors: Error 15-22: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> Time(9,0,0) <= true
Errors: Error 15-19: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> Time(24,0,0) <= false
Errors: Error 16-21: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> Time(24,0,0) <= 0
false

>> Time(24,0,0) <= 1
true

>> Time(9,0,0) <= Blank()
false

>> If(1<0,Time(9,0,0)) <= Blank()
true

>> Time(9,0,0) <= Time(9,0,0)
true

>> Time(9,0,1) <= Time(9,0,0)
false

>> Time(9,0,0) <= Time(9,0,1)
true

>> Time(9,0,0) <= Date(1900,1,2)
true

>> Time(1,0,0) <= DateTime(1899,12,30,1,0,0)
true

>> Time(3,0,0) <= Decimal("0.125")
true

>> Time(3,0,0) <= Decimal("0.125000000000000000000001")
true

>> Time(3,0,0) <= Decimal("0.124999999999999999999999")
false

>> Time(3,0,0) <= ParseJSON("2")
Error({Kind:ErrorKind.InvalidArgument})

>> Time(3,0,0) <= ParseJSON("0.125")
Error({Kind:ErrorKind.InvalidArgument})

>> Time(3,0,0) <= ParseJSON("1e100")
Error({Kind:ErrorKind.InvalidArgument})

>> Time(3,0,0) <= ParseJSON("""03:00:00""")
true

>> Time(3,0,0) <= ParseJSON("""03:00:01""")
true

>> Time(3,0,2) <= ParseJSON("""03:00:01""")
false

// Decimal

// comparisons done on float
>> Decimal("2.000000000000000000000001") <= Float(2)
true

>> Decimal("2.000000000000000000000000") <= Float(2)
true

>> Decimal("1.999999999999999999999999") <= Float(2)
true

>> Decimal("1.9") <= Float(2)
true

>> Decimal("2.0") <= Float(2)
true

>> Decimal("2.1") <= Float(2)
false

>> Decimal("16.000000000000000000000001") <= "16"
Errors: Error 42-46: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> Decimal("1.000000000000000000000001") <= true
Errors: Error 41-45: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> Decimal("0.000000000000000000000001") <= Blank()
false

>> Decimal(0) <= Blank()
true

>> If(1<0,Decimal(1)) <= Blank()
true

>> Decimal("16.0000000000000000000001") <= Date(1900,1,15)
false

>> Decimal("16") <= Date(1900,1,15)
true

>> Decimal("15.9999999999999999999999") <= Date(1900,1,15)
true

>> Decimal(2) <= Date(1900,1,1)
true

>> Decimal("2.0000000000000000000001") <= Date(1900,1,1)
false

>> Decimal(2) <= DateTime(1900,1,1,0,0,0)
true

>> Decimal("2.0000000000000000000001") <= DateTime(1900,1,1,12,0,0)
true

>> Decimal("2.5000000000000000000001") <= DateTime(1900,1,1,12,0,0)
false

>> Decimal("2.4999999999999999999999") <= DateTime(1900,1,1,12,0,0)
true

>> Decimal(2.5) <= DateTime(1900,1,1,12,0,0)
true

>> Decimal(2.5) <= DateTime(1900,1,1,11,0,0)
false

>> Decimal(".5") <= Time(12,0,0)
true

>> Decimal(".5") <= Time(11,59,59)
false

>> Decimal(".5000000000000000000001") <= Time(12,0,0)
false

>> Decimal("16.000000000000000000000002") <= Decimal("16.000000000000000000000001")
false

>> Decimal("16.000000000000000000000002") <= Decimal("16.000000000000000000000002")
true

>> Decimal("16.000000000000000000000002") <= Decimal("16.000000000000000000000003")
true

>> Decimal("16.000000000000000000000002") <= ParseJSON("1e100")
Error({Kind:ErrorKind.InvalidArgument})

>> Decimal("16.000000000000000000000002") <= ParseJSON("16.000000000000000000000002")
true

>> Decimal("16.000000000000000000000002") <= ParseJSON("16.000000000000000000000001")
false

>> Decimal("16.000000000000000000000002") <= ParseJSON("16.000000000000000000000003")
true

// Untyped

>> ParseJSON("16.00000000000000000000001") <= Float(2)
false

// comparisons with float are done in float
>> ParseJSON("16.00000000000000000000001") <= Float(16)
true

>> ParseJSON("1e100") <= Float(2)
false

>> ParseJSON("16.00000000000000000000001") <= "2"
Errors: Error 43-46: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> ParseJSON("16.00000000000000000000001") <= "16"
Errors: Error 43-47: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> ParseJSON("16.00000000000000000000001") <=  "16.00000000000000000000001"
Errors: Error 44-72: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> ParseJSON("16.00000000000000000000001") <=  16 + ".00000000000000000000001"
true

>> ParseJSON("16.00000000000000000000001") <=  16 + ".00000000000000000000000"
false

>> ParseJSON("16.00000000000000000000001") <=  16 + ".00000000000000000000002"
true

>> ParseJSON("16") <= "16"
Errors: Error 19-23: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> ParseJSON("1e100") <= "2"
Errors: Error 22-25: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> ParseJSON("16.000000000000000000000001") <= true
Errors: Error 44-48: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> ParseJSON("1.000000000000000000000001") <= true
Errors: Error 43-47: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> ParseJSON("0") <= true
Errors: Error 18-22: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> ParseJSON("0") <= false
Errors: Error 18-23: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> ParseJSON("1") <= true
Errors: Error 18-22: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> ParseJSON("1") <= false
Errors: Error 18-23: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> ParseJSON("true") <= true
Errors: Error 21-25: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> ParseJSON("false") <= false
Errors: Error 22-27: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> ParseJSON("false") <= true
Errors: Error 22-26: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> ParseJSON("true") <= false
Errors: Error 21-26: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> ParseJSON("1e100") <= true
Errors: Error 22-26: Invalid argument type. Expecting one of the following: Number, Decimal, Date, Time, DateTime, UntypedObject.

>> ParseJSON("16.000000000000000000000001") <= Blank()
false

>> ParseJSON("0") <= Blank()
true

>> ParseJSON("null") <= Blank()
true

>> ParseJSON("1e100") <= Blank()
Error({Kind:ErrorKind.InvalidArgument})

>> ParseJSON("2") <= Date(1900,1,1)
Error({Kind:ErrorKind.InvalidArgument})

>> ParseJSON("16.0000000000000000000001") <= Date(1900,1,15)
Error({Kind:ErrorKind.InvalidArgument})

>> ParseJSON("""1900-01-01""") <= Date(1900,1,1)
true

>> ParseJSON("""1900-01-02""") <= Date(1900,1,1)
false

>> ParseJSON("""1899-12-31""") <= Date(1900,1,1)
true

>> ParseJSON("""1990-07-01""") <= Date(1990,7,1)
true

>> ParseJSON("""1990-07-02""") <= Date(1990,7,1)
false

>> ParseJSON("""1990-06-30""") <= Date(1990,7,1)
true

// Value will be parsed as a date, so hour component will be ignored
>> ParseJSON("""1900-01-01T09:00:01""") <= Date(1900,1,1)
true

>> ParseJSON("16") <= Date(1900,1,15)
Error({Kind:ErrorKind.InvalidArgument})

>> ParseJSON("1e100") <= Date(1900,1,15)
Error({Kind:ErrorKind.InvalidArgument})

>> ParseJSON("null") <= Date(1900,1,15)
true

>> ParseJSON("16.500000000000000000001") <= DateTime(1900,1,15,12,0,0)
Error({Kind:ErrorKind.InvalidArgument})

>> ParseJSON("16.5") <= DateTime(1900,1,15,12,0,0)
Error({Kind:ErrorKind.InvalidArgument})

>> ParseJSON("""1900-01-01T12:00:00""") <= DateTime(1900,1,1,12,0,0)
true

>> ParseJSON("""1900-01-01T09:00:00""") <= DateTime(1900,1,1,12,0,0)
true

>> ParseJSON("""1900-01-01T15:00:00""") <= DateTime(1900,1,1,12,0,0)
false

>> ParseJSON("1e100") <= DateTime(1900,1,7,12,0,0)
Error({Kind:ErrorKind.InvalidArgument})

>> ParseJSON("16.000000000000000000001") <= Time(12,0,0)
Error({Kind:ErrorKind.InvalidArgument})

>> ParseJSON("1") <= Time(24,0,0)
Error({Kind:ErrorKind.InvalidArgument})

>> ParseJSON("""12:00:01""") <= Time(12,0,1)
true

>> ParseJSON("""12:00:02""") <= Time(12,0,1)
false

>> ParseJSON("0.250000000000000000000001") <= Time(6,0,0)
Error({Kind:ErrorKind.InvalidArgument})

>> ParseJSON("0.25") <= Time(6,0,0)
Error({Kind:ErrorKind.InvalidArgument})

>> ParseJSON("1e100") <= Time(12,0,0)
Error({Kind:ErrorKind.InvalidArgument})

>> ParseJSON("2.000000000000000000000000001") <= Decimal("2.000000000000000000000000001")
true

>> ParseJSON("1e100") <= Decimal("2.000000000000000000000000001")
Error({Kind:ErrorKind.InvalidArgument})

>> ParseJSON("2.000000000000000000000000001") <= ParseJSON("2.000000000000000000000000001")
Errors: Error 43-45: This operation isn't valid on these types: UntypedObject, UntypedObject.

>> ParseJSON("2.000000000000000000000002") <= ParseJSON("2")
Errors: Error 40-42: This operation isn't valid on these types: UntypedObject, UntypedObject.

>> ParseJSON("1e100") <= ParseJSON("2")
Errors: Error 19-21: This operation isn't valid on these types: UntypedObject, UntypedObject.

>> ParseJSON("16.000000000000000000000002") <= ParseJSON("1e100")
Errors: Error 41-43: This operation isn't valid on these types: UntypedObject, UntypedObject.

>> ParseJSON("1e100") <= ParseJSON("1e100")
Errors: Error 19-21: This operation isn't valid on these types: UntypedObject, UntypedObject.
