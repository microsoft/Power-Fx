
>> With(
     {myJson:ParseJSON("{""a"":1,""b"":true}")},ForAll(GetPropertyNames(myJson),{Name:ThisRecord.Value,StrValue:Text(GetPropertyValue(myJson, ThisRecord.Value))}))
Table({Name:"a",StrValue:"1"},{Name:"b",StrValue:"true"})

>> GetPropertyNames(ParseJSON("{""a"":1,""b"":true,""c"":null,""d"":[1,2,3],""e"":""hello""}"))
Table({Value:"a"},{Value:"b"},{Value:"c"},{Value:"d"},{Value:"e"})

>> CountRows(GetPropertyNames(ParseJSON("{""a"":1,""b"":true,""c"":null,""d"":[1,2,3],""e"":""hello""}")))
5

>> With({myJson:ParseJSON("{""a"":1,""b"":true,""c"":null,""e"":""hello""}")},Concat(GetPropertyNames(myJson),$"{ThisRecord.Value}:{GetPropertyValue(myJson, ThisRecord.Value)}", ","))
"a:1,b:true,c:,e:hello"

>> CountRows(GetPropertyValue(ParseJSON("{""a"":1,""b"":true,""c"":null,""d"":[1,2,3],""e"":""hello""}"),"d"))
3

>> GetPropertyNames(ParseJSON("{""a"":1,""b"":{}}").b)
Table()

>> With(
    {myJson:ParseJSON("{""a"":1,""b"":{""c1"":1,""c2"":2}}")},
    ForAll(
      GetPropertyNames(myJson.b),
      {Name:ThisRecord.Value,NumValue:Value(GetPropertyValue(myJson.b, ThisRecord.Value))}
    ))
Table({Name:"c1",NumValue:1},{Name:"c2",NumValue:2})

>> GetPropertyNames(ParseJSON("{}"))
Table()

>> GetPropertyNames(ParseJSON("null"))
Blank()

>> GetPropertyNames(ParseJSON("1"))
Error({Kind:ErrorKind.InvalidArgument})

>> GetPropertyNames(ParseJSON("[]"))
Error({Kind:ErrorKind.InvalidArgument})

>> GetPropertyNames(ParseJSON("false"))
Error({Kind:ErrorKind.InvalidArgument})

>> GetPropertyNames(ParseJSON("""hello"""))
Error({Kind:ErrorKind.InvalidArgument})

>> IsBlank(GetPropertyValue(ParseJSON("{}"), "a"))
true

>> IsBlank(GetPropertyValue(ParseJSON("null"), "b"))
true

>> GetPropertyValue(ParseJSON("1"), "Value")
Error({Kind:ErrorKind.InvalidArgument})

>> GetPropertyValue(ParseJSON("[]"), "Value")
Error({Kind:ErrorKind.InvalidArgument})

>> GetPropertyValue(ParseJSON("false"), "Value")
Error({Kind:ErrorKind.InvalidArgument})

>> GetPropertyValue(ParseJSON("""hello"""), "Value")
Error({Kind:ErrorKind.InvalidArgument})
