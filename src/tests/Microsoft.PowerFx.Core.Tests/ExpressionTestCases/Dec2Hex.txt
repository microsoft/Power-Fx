﻿// ******** INTEGER PARAMETERS WITHOUT PLACES ********

>> Dec2Hex(0)
"0"

>> Dec2Hex(Blank())
"0"

// Positive Integer Parameters
>> Dec2Hex(165)
"A5"

>> Dec2Hex(3213)
"C8D"

>> Dec2Hex(549755813887)
"7FFFFFFFFF"

// Negative Integer Parameters
>> Dec2Hex(-1)
"FFFFFFFFFF"

>> Dec2Hex(-165)
"FFFFFFFF5B"

>> Dec2Hex(-3213)
"FFFFFFF373"

>> Dec2Hex(-549755813888)
"8000000000"

// ******** DECIMAL PARAMETERS ********

>> Dec2Hex(3.74)
"3"

>> Dec2Hex(-3.74)
"FFFFFFFFFC"


// ******** INTEGER PARAMETERS WITH PLACES ********

>> Dec2Hex(45780)
"B2D4"

>> Dec2Hex(Blank(), 2)
"00"

>> Dec2Hex(45780, Blank())
Error({Kind:ErrorKind.Numeric})

>> Dec2Hex(45780, 0)
Error({Kind:ErrorKind.Numeric})

>> Dec2Hex(45780, 3)
Error({Kind:ErrorKind.Numeric})

>> Dec2Hex(45780, 4)
"B2D4"

>> Dec2Hex(45780, 5)
"0B2D4"

>> Dec2Hex(45780, 6)
"00B2D4"

>> Dec2Hex(45780, 10)
"000000B2D4"

>> Dec2Hex(45780, -6)
Error({Kind:ErrorKind.Numeric})

>> Dec2Hex(45780, 11)
Error({Kind:ErrorKind.Numeric})

// Places are ignored when number is negative
>> Dec2Hex(-45780)
"FFFFFF4D2C"

>> Dec2Hex(-45780, 4)
"FFFFFF4D2C"

>> Dec2Hex(-45780, 5)
"FFFFFF4D2C"

>> Dec2Hex(-45780, 6)
"FFFFFF4D2C"

>> Dec2Hex(-45780, 11)
Error({Kind:ErrorKind.Numeric})

>> Dec2Hex(-45780, Blank())
Error({Kind:ErrorKind.Numeric})

>> Dec2Hex(-45780, 0)
Error({Kind:ErrorKind.Numeric})

>> Dec2Hex(-45780, -1)
Error({Kind:ErrorKind.Numeric})

// ******** NULL and ERROR PARAMETERS ********
>> Dec2Hex(1/0)
Error({Kind:ErrorKind.Div0})

>> Dec2Hex(-549755813889)
Error({Kind:ErrorKind.Numeric})

>> Dec2Hex(549755813888)
Error({Kind:ErrorKind.Numeric})

>> Dec2Hex(If(1/0<2,["true"]))
Error({Kind:ErrorKind.Div0})

>> Dec2Hex(If(1<0,["true"]))
Blank()

>> Dec2Hex(Filter(["true","false"], Len(Value) > 10))
Table()

>> Dec2Hex(If(1/0<2,[1]))
Error({Kind:ErrorKind.Div0})

>> Dec2Hex(If(1<0,[1]))
Blank()

>> Dec2Hex(If(1<0,[1]), If(1<0,[2]))
Blank()

>> Dec2Hex(Filter([1,2,3], Value > 10))
Table()

>> Dec2Hex(If(1/0<2,[12, 56]), 1)
Error({Kind:ErrorKind.Div0})

>> Dec2Hex(1234, If(Sqrt(-1)<0,[1, 2, 3]))
Error({Kind:ErrorKind.Numeric})

>> Dec2Hex([12, 56], 1/0)
Table({Value:Error({Kind:ErrorKind.Div0})},{Value:Error({Kind:ErrorKind.Div0})})

>> Dec2Hex(Sqrt(-1), [1, 2, 3])
Table({Value:Error({Kind:ErrorKind.Numeric})},{Value:Error({Kind:ErrorKind.Numeric})},{Value:Error({Kind:ErrorKind.Numeric})})

>> Dec2Hex([123, 234], [3, 2, 3])
Table({Value:"07B"},{Value:"EA"},{Value:Error({Kind:ErrorKind.NotApplicable})})


// ******** STRING PARAMETERS ********

>> Dec2Hex("sampleText")
Error({Kind:ErrorKind.InvalidArgument})

>> Dec2Hex("4")
"4"

>> Dec2Hex("14", 4)
"000E"

>> Dec2Hex("15", "6")
"00000F"

>> Dec2Hex("-9")
"FFFFFFFFF7"

// ******** BOOLEAN PARAMETERS ********

>> Dec2Hex(true)
"1"

>> Dec2Hex(false)
"0"

>> Dec2Hex("true")
Error({Kind:ErrorKind.InvalidArgument})

>> Dec2Hex("false")
Error({Kind:ErrorKind.InvalidArgument})

// ******** FUNCTION VALUE AS PARAMETERS ********

>> Dec2Hex(Ln(2))
"0"

>> Dec2Hex(Power(2,2))
"4"

// ******** TABULAR VALUE AS PARAMETERS ********

>> Dec2Hex([10,255,-16])
Table({Value:"A"},{Value:"FF"},{Value:"FFFFFFFFF0"})

>> Dec2Hex([10,11,"12"], [2,5,10])
Table({Value:"0A"},{Value:"0000B"},{Value:"000000000C"})

>> Dec2Hex(["10","11","12"])
Table({Value:"A"},{Value:"B"},{Value:"C"})

>> Dec2Hex(["10","11","12"], [2,5,10])
Table({Value:"0A"},{Value:"0000B"},{Value:"000000000C"})

>> Dec2Hex([10,255,-16], 5)
Table({Value:"0000A"},{Value:"000FF"},{Value:"FFFFFFFFF0"})

>> Dec2Hex(10, [2,5,10])
Table({Value:"0A"},{Value:"0000A"},{Value:"000000000A"})

>> Dec2Hex(255, [Blank(),-1,0,1,2,3,4])
Table({Value:Error({Kind:ErrorKind.Numeric})},{Value:Error({Kind:ErrorKind.Numeric})},{Value:Error({Kind:ErrorKind.Numeric})},{Value:Error({Kind:ErrorKind.Numeric})},{Value:"FF"},{Value:"0FF"},{Value:"00FF"})

// ******** DIFFERENT INPUT TYPES AS PARAMETERS ********

>> Dec2Hex(Table({a:10},{a:255},{a:-16}))
Table({Value:"A"},{Value:"FF"},{Value:"FFFFFFFFF0"})

>> Dec2Hex(Table({a:10},{a:11},{a:12}), Table({b:2},{b:5},{b:10}))
Table({Value:"0A"},{Value:"0000B"},{Value:"000000000C"})

>> Dec2Hex(["10","255","-16"])
Table({Value:"A"},{Value:"FF"},{Value:"FFFFFFFFF0"})

>> Dec2Hex(Table({A: 12}), 3)
Table({Value:"00C"})

>> Dec2Hex(Table({A: 12, B:13}))
Errors: Error 8-28: Invalid argument type (Table). Expecting a Number value instead.

>> Dec2Hex(Table({a:[1]},{a:[2]}))
Errors: Error 8-30: Invalid argument type (Table). Expecting a Number value instead.

>> Dec2Hex(Table({a:{b:1}},{a:{b:2}}))
Errors: Error 8-34: Invalid argument type (Table). Expecting a Number value instead.
