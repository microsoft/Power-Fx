>> RGBA(1, 2, 3, 0.4)
RGBA(1,2,3,0.4)

>> RGBA(0, 0, 0, 0)
RGBA(0,0,0,0)

>> RGBA(255, 255, 255, 1.0)
RGBA(255,255,255,1)

>> RGBA(-1, 255, 255, 1.0)
Error({Kind:ErrorKind.InvalidArgument})

>> RGBA(1.5, 255, 255, 1.0)
RGBA(1,255,255,1)

>> RGBA(256, 255, 255, 1.0)
Error({Kind:ErrorKind.InvalidArgument})

>> RGBA(255, -1, 255, 1.0)
Error({Kind:ErrorKind.InvalidArgument})

>> RGBA(255, 1.5, 255, 1.0)
RGBA(255,1,255,1)

// Decimal values are truncated
>> RGBA(255.5, 1.5, 255.9, 1.0)
RGBA(255,1,255,1)

// First three arguments need to be between 0 and 255; last argument must be between 0 and 1
>> RGBA(255, 256, 255, 1.0)
Error({Kind:ErrorKind.InvalidArgument})

>> RGBA(255, 255, -1, 1.0)
Error({Kind:ErrorKind.InvalidArgument})

>> RGBA(255, 255, 1.5, 1.0)
RGBA(255,255,1,1)

>> RGBA(255, 255, 256, 1.0)
Error({Kind:ErrorKind.InvalidArgument})

>> RGBA(255, 255, 255, -0.01)
Error({Kind:ErrorKind.InvalidArgument})

>> RGBA(255, 255, 255, 1.01)
Error({Kind:ErrorKind.InvalidArgument})

>> RGBA(Blank(),Blank(),Blank(),1)
RGBA(0,0,0,1)

>> RGBA(255,255,255,Blank())
RGBA(255,255,255,0)

// This is due to rounding error and not due to language semantics. 
>> RGBA(255,255,255,0.003)
RGBA(255,255,255,0.004)

// This is due to rounding error and not due to language semantics. 
>> RGBA(255,255,255,0.0003)
RGBA(255,255,255,0)

>> RGBA(1e28, 255, 255, 1.0)
Error({Kind:ErrorKind.InvalidArgument})

>> RGBA(255, 1e28, 255, 1.0)
Error({Kind:ErrorKind.InvalidArgument})

>> RGBA(255, 255, 1e28, 1.0)
Error({Kind:ErrorKind.InvalidArgument})

>> RGBA(255, 255, 255, 1e28)
Error({Kind:ErrorKind.InvalidArgument})

>> RGBA(-1e28, 255, 255, 1.0)
Error({Kind:ErrorKind.InvalidArgument})

>> RGBA(255, -1e28, 255, 1.0)
Error({Kind:ErrorKind.InvalidArgument})

>> RGBA(255, 255, -1e28, 1.0)
Error({Kind:ErrorKind.InvalidArgument})

>> RGBA(255, 255, 255, -1e28)
Error({Kind:ErrorKind.InvalidArgument})
