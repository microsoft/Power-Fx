#SETUP: ConsistentOneColumnTableResult

// Round(Number_or_table, digits_or_table)

// Table and scalar

>> Round([1.2, 3.4, 5.6, 7.8], 0)
Table({Value:1},{Value:3},{Value:6},{Value:8})

>> Round(Table({a: 1.23}, {a: 4.56}, {a: 7.89}, {a: 10.12}), 1)
Table({Value:1.2},{Value:4.6},{Value:7.9},{Value:10.1})

>> Round(Table({b: -9.8765}, {b: -8.7654}, {b: -7.6543}, {b: -6.5432}, {b: -5.4321}), 2)
Table({Value:-9.88},{Value:-8.77},{Value:-7.65},{Value:-6.54},{Value:-5.43})

>> Round(Filter([1,2,3], Value > 10), 0) // Empty table
Table()

// Scalar and table
>> Round(1234.5678, [-2, 1, 0, 1, 2])
Table({Value:1200},{Value:1234.6},{Value:1235},{Value:1234.6},{Value:1234.57})

// Table and table
>> Round(Table({a: 123.456}, {a: 345.678}), Table({b: 1}, {b: 2}))
Table({Value:123.5},{Value:345.68})

// Blank values
>> Round( If(1<0,[1]), 1 )
Blank()

// Errors
>> Round( If(1/0<2, [1]), 1 )
Error({Kind:ErrorKind.Div0})

>> Round( [1.2, 2.3, 3.4], 1/0 )
Table({Value:Error({Kind:ErrorKind.Div0})},{Value:Error({Kind:ErrorKind.Div0})},{Value:Error({Kind:ErrorKind.Div0})})

>> Round(Table({b: 1.23}, {b: Sqrt(-1)}, {b: 7.89}), 1)
Table({Value:1.2},{Value:Error({Kind:ErrorKind.Numeric})},{Value:7.9})
