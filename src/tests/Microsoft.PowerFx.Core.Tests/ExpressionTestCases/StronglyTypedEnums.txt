#SETUP: StronglyTypedBuiltinEnums,PowerFxV1CompatibilityRules,AllEnumsSetup

>> ErrorKind.Div0 = Color.Red
Errors: Error 15-16: Incompatible types for comparison. These types can't be compared: Enum (ErrorKind), Enum (Color).

>> Color.Red
Color.Red

// Both string backed enums, but incompatble for comparison
>> TimeUnit.Days <> SortOrder.Ascending
Errors: Error 14-16: Incompatible types for comparison. These types can't be compared: Enum (TimeUnit), Enum (SortOrder).

// Valid to compare to strings
>> TimeUnit.Days <> "abc"
Errors: Error 14-16: Incompatible types for comparison. These types can't be compared: Enum (TimeUnit), Text.

// Coercion to Color
>> ColorFade(Color.Red, 0)
RGBA(255,0,0,1)

>> Color.Red < Color.Green
Errors: Error 10-11: Unable to compare values of type Enum (Color).

// Number backed enums support gt/lt/geq/leq, but enforce type checks
>> With({ErrorKnd: ErrorKind.Div0}, ErrorKnd < ErrorKind.Custom) 
true

>> ErrorKind.Numeric < 100
true

>> ErrorKind.Custom = 100
false

>> With({ErrorKnd: ErrorKind.Numeric}, ErrorKnd < StartOfWeek.Saturday) 
Errors: Error 45-46: Incompatible types for comparison. These types can't be compared: Enum (ErrorKind), Enum (StartOfWeek).

// Coercion to string uses backing values if the enum is string-backed
>> SortOrder.Ascending & SortOrder.Descending
"ascendingdescending"

// Non string-backed enums use the name when coerced to string
// This might not be great, but it matches the CDS Option Set behavior.
>> "Color: " & Color.Red
"Color: Red"

// Functions can enforce expecting an enum type
>> DateAdd(Date(2011,1,15), 100000000, "milliseconds")
Errors: Error 36-50: Invalid argument type (Text). Expecting a Enum (TimeUnit) value instead.|Error 0-7: The function 'DateAdd' has some invalid arguments.

>> DateAdd(Date(2011,1,15), 100000000, TimeUnit.Milliseconds)
Date(2011,1,16)


>> Text(TimeUnit.Months)
"months"

>> Upper(TimeUnit.Quarters)
"QUARTERS"

>> If(true, "A", TimeUnit.Seconds)
"A"

>> If(true, 1, TimeUnit.Seconds)
If(true, {test:1}, "Void value (result of the expression can't be used).")

>> Text(Date(1970, 1, 1), DateTimeFormat.LongDate) 
"Thursday, January 1, 1970"

>> Text(Date(1970, 1, 1), DateTimeFormat.LongDateTime) 
"Thursday, January 1, 1970 12:00:00 AM"

>> Text(Date(1970, 1, 1), DateTimeFormat.LongDateTime24)
"Thursday, January 1, 1970 0:00:00"
