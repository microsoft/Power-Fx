>> 1/0
Error({Kind:ErrorKind.Div0})

>> Sqrt(-1)
Error({Kind:ErrorKind.Numeric})

>> IsError(1/0)
true

>> IsError(1)
false

>> IsError(Error({Kind: ErrorKind.Validation}))
true

>> IsError(Error({Kind: 11}))
true

>> Error({Kind:ErrorKind.InvalidArgument})
Error({Kind:ErrorKind.InvalidArgument})

>> Error({Kind:ErrorKind.Validation})
Error({Kind:ErrorKind.Validation})

>> Error({Kind:Validation}) // We need to use the fully-qualified enum value
Errors: Error 12-22: Name isn't valid. 'Validation' isn't recognized.

>> Error({Kind:"Validation"}) // Error kind needs to be numeric!
Error({Kind:ErrorKind.InvalidArgument})

>> IfError(1/0, Error({Kind:FirstError.Kind}))
Error({Kind:ErrorKind.Div0})

>> IfError(1/0, 3)
3

>> IfError(1/0, FirstError.Kind)
13

>> IfError(Error({Kind:12}), FirstError.Kind)
12

>> IfError(0, 1, Sqrt(-2), 2)
2

>> IfError(0, 1, Error({Kind: ErrorKind.Unknown}), 2)
2

>> IfError(1, 2)
1

>> IfError(1, 2, 3)
3

>> IfError(1, 2, 3, 4)
3

>> IfError(Text(1/0), FirstError.Message)
"Invalid operation: division by zero."

>> IsBlank(1/0)
Error({Kind:ErrorKind.Div0})

>> Not(IsBlank(1/0))
Error({Kind:ErrorKind.Div0})

>> "Result: " & IfError(1/0, -1)
"Result: -1"

>> "Result: " & IfError(1, "error 1", 2, "error 2", "no error")
"Result: no error"

>> "Result: " & IfError({a:1, b:"hello"}, {a:2, b:"error"}).b
"Result: hello"

>> "Result: " & IfError(1, {a:1}, 2, {a:2}, {a:3}).a
"Result: 3"

>> "Result: " & IfError({a:{a1:true},b:"hello"}, {a:1,b:"error 1"}, {a:{a1:{a2:3}},b:"world"}, {a:1,b:"error 2"}, {a:1,b:"valid"}, {a:1,b:"error 3"}).a
"Result: 1"

>> Error("lorem ipsum")
Error({Kind:ErrorKind.Custom})

>> IfError(Error("lorem ipsum"), FirstError.Message)
"lorem ipsum"

>> Date(2000, Sqrt(-1), Error("lorem ipsum"))
Error(Table({Kind:ErrorKind.Numeric},{Kind:ErrorKind.Custom}))

>> Error( {Kind:"test" } )
Error({Kind:ErrorKind.InvalidArgument})

>> IsError(Error({Kind: 2 }))
true

>> IsError(Error({Kind: "2" }))
true

>> IfError( If( false, 1, Error({Kind: 2}) ), FirstError.Kind )
2

>> IfError( If( false, 1, Error({Kind: "2"}) ), FirstError.Kind )
2

>> IfError( If( false, 1, Error({Kind:true}) ), FirstError.Kind )
1

>> IfError( Value( Error({Kind:"1"&"2"}) ), FirstError.Kind )
12

>> IfError( If(false, 1, Error({Kind:Date(2023,3,15)})), FirstError.Kind )
45000

>> Wyz("foo")
Errors: Error 0-10: 'Wyz' is an unknown or unsupported function.

>> Error(Table({Kind:ErrorKind.Div0},{Kind:ErrorKind.Numeric}))
Error(Table({Kind:ErrorKind.Div0},{Kind:ErrorKind.Numeric}))

// No duplicated errors
>> 1.2.3
Errors: Error 3-5: Expected operator. We expect an operator such as +, *, or & at this point in the formula.|Error 5-5: Expected an operand. The formula or expression expects a valid operand. For example, you can add the operand '2' to the expression ' 1 +_' so that the result is '3'. Or, you can add the operand "there" to the expression '"Hi "& _ ' so that the result is 'Hi there'.

>> 1.2.3 + 1.2.3
Errors: Error 3-5: Expected operator. We expect an operator such as +, *, or & at this point in the formula.|Error 6-7: Unexpected characters. Characters are used in the formula in an unexpected way.|Error 8-11: Expected operator. We expect an operator such as +, *, or & at this point in the formula.

>> IfError(Error(Table({Kind:0},{Kind:1})),Concat(AllErrors,Kind,","))
"0,1"

>> IfError(Error(Table({Kind:"0"},{Kind:"1"})),Concat(AllErrors,Kind,","))
"0,1"

>> IfError(Error(Table({Kind:Float(0)},{Kind:Float(1)})),Concat(AllErrors,Kind,","))
"0,1"

>> Error (Table({Kind:"2"},{Kind:"4"}))
Error(Table({Kind:ErrorKind.MissingRequired},{Kind:ErrorKind.EditPermissions}))

>> Error (Table({Kind:true},{Kind:false}))
Error(Table({Kind:ErrorKind.Sync},{Kind:ErrorKind.None}))

>> Error ({Kind:true})
Error({Kind:ErrorKind.Sync})

>> Error ({Kind:"4"})
Error({Kind:ErrorKind.EditPermissions})

>> IfError(Error (Table({Kind:0,Message:"Custom error message NONE"}, {Kind:1,Message:"Custom error message SYNC"})), Concat(AllErrors,$"{Kind}:{Message}",", "))
"0:Custom error message NONE, 1:Custom error message SYNC"

>> IfError(Error(Table({Kind:0,Message:"Custom error message NONE"}, {Kind:1,Message:"Custom error message SYNC"})),Concat(AllErrors,Message,","))
"Custom error message NONE,Custom error message SYNC"

// Coercion from string, with message
>> IfError(Error([{Kind:"12"},{Kind:"13",Message:"With message"}]), Concat(AllErrors, $"{Kind}:{Message}", ", "))
"12:, 13:With message"

// Coercion from string, with coerced message
>> IfError(Error([{Kind:"12",Message:333},{Kind:"13",Message:444}]), Concat(AllErrors, $"{Kind}:{Message}", ", "))
"12:333, 13:444"