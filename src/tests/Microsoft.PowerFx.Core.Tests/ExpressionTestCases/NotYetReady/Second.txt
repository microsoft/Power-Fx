
>> Second(1/1/1970)
0

>> Second(5/14/1970)
0

>> Second(Time(0,0,0))
0

>> Second(Date(1976,1,4) + Time(12,30,15))
15

>> Second(Time(23,45,15))
15

>> Second(TimeValue("5:45:35"))
35

//Decimal values not accepted in Second part
>> Second(TimeValue("5:50:7.5"))
#Error(Kind=InvalidArgument)

//Decimal number is truncated to consider only the integer part
>> Second(Time(67,45,50.5))
50

>> Second(DateTimeValue("1/4/1976 12:30:15:00"))
15

>> Second(DateTimeValue("6/30/2006"))
0

>> Second(Date(2013,12,31))
0

>> Second(DateValue("10/11/2014"))
0


//Seconds Overflow Cases

>> Second(DateTimeValue("12/31/2006 11:59:60"))
#Error(Kind=InvalidArgument)

//Excel returns 5
>> Second(TimeValue("5:59:65"))
0

>> Second(DateTimeValue("12/32/2006 50:59:59"))
59

>> Second(Time(0,50,70))
10

//Seconds Underflow Cases

>> Second(DateTimeValue("1/0/2006 -1:00:00"))
#Error(Kind=InvalidArgument)

>> Second(Time(24,0,0))
0

>> Second(Time(1,0,-1))
59

>> Second(Time(1,0,-10))
50

// ******************************** NUMBER PARAMETERS ********************************

>> Second(0)
0

>> Second(1)
0

>> Second(-1)
59

>> Second(1.5)
0

>> Second(11)
0

// ******************************** STRING PARAMETERS ********************************

>> Second("ABC")
#Error(Kind=InvalidArgument)

>> Second(DateTimeValue("ABC"))
#Error(Kind=InvalidArgument)

//Number passed as string
>> Second("11")
0

>> Second("12")
0

>> Second("13")
#Error(Kind=InvalidArgument)

//Boolean passed as string
>> Second("true")
#Error(Kind=InvalidArgument)

//Boolean passed as string
>> Second("false")
#Error(Kind=InvalidArgument)

// ******************************** BOOLEAN PARAMETERS ********************************

>> Second(DateTimeValue(true))
#Error(Kind=InvalidArgument)

>> Second(DateTimeValue(false))
#Error(Kind=InvalidArgument)

>> Second(TimeValue(true))
#Error(Kind=InvalidArgument)

>> Second(TimeValue(false))
#Error(Kind=InvalidArgument)

>> Second(Time(true,true,true))
1

>> Second(Time(false,false,false))
0

// ******************************** ADDITION/SUBTRACTION VALUE AS PARAMETERS ********************************

>> Second(DateAdd(DateTimeValue("1/1/2000 8:00:00:00 AM"), 2,TimeUnit.Seconds))
2

>> Second(DateAdd(DateTimeValue("1/1/2000 12:00:00:00 AM"),60,TimeUnit.Seconds))
0

>> Second(DateAdd(DateTimeValue("1/1/2000 12:00:00:00 AM"),460,TimeUnit.Seconds))
40

>> Second(DateAdd(DateTimeValue("1/1/2000 12:00:00:00 AM"),65,Blank()))
0

>> Second(DateAdd(DateTimeValue("1/1/2000 12:00:00:00 AM"), Blank()))
0

>> Second(DateAdd(DateTimeValue("1/1/2000 12:00:00:00"), 4, TimeUnit.Seconds))
4

>> Second(DateTimeValue("1/1/2000 12:00:00:00") + 70)
0

>> Second(80 + DateTimeValue("1/1/2000 12:00:00:00"))
0

>> Second(TimeValue("12:00:00") - 90)
59

>> Second((TimeValue("12:00:00") + 60) + 70)
0

>> Second((60 + TimeValue("12:00:00") + 70))
0

>> Second((DateTimeValue("1/1/2000 12:00:00:00 AM") - 20) - 30)
0

// ******************************** NULL AND ERROR PARAMETERS ********************************

>> Second(DateTimeValue(Blank()))
0

>> Second(DateTimeValue(""))
0

>> Second(Blank())
0

>> Second("")
0

>> Second(Date(-1, 2, 3))
#Error(Kind=InvalidArgument)