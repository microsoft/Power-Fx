
// works with non-literals
>> Switch(If(true,1,2),7-8,true && false,!false)
true



// ************************************** NUMBER CASES **************************************

// Switch case with exact match and without any default result
>> Switch(1,0,3,1,5,2,7)
5

// Switch case with exact match and with default result
>> Switch(1,0,3,1,5,2,7,11)
5

// Switch case without any exact match and default result
>> Switch(1,2,3)
Blank()

>> Switch(-1,0,3,1,5,2,7)
Blank()

// Switch case without any exact match, but with default result
>> Switch(1,2,3,4)
4

>> Switch(-1,0,3,1,5,2,7,11)
11

// =========================Null, Empty String and Error cases =========================

// Switch case with Blank() condition, without any exact match and default result
>> Switch(Blank(),0,3,1,5,2,7)
Blank()

// Switch case with Blank() condition, without any exact match, but with default result
>> Switch(Blank(),0,3,1,5,2,7,11)
11

// Switch case with Blank() condition, with exact match and default result
>> Switch(Blank(),0,3,Blank(),5,2,7,11)
5

// Switch case with Blank() as one of the match
>> Switch(1,0,3,Blank(),5,2,7,11)
11

// Switch case with Blank() as the result of exact match
>> Switch(1,0,3,1,Blank(),2,7,11)
Blank()

// Switch case with Error as the condition, and without default result
>> Switch(1/0,0,3,1,5,2,7)
#Error(Kind=Div0)

// Switch case with Error as the condition, and with default result
>> Switch(1/0,0,3,1,5,2,7,11)
#Error(Kind=Div0)

// Switch case with Error as the condition and as exact match
>> Switch(1/0,1,0,1/0,3,2,5,2,7,11)
#Error(Kind=Div0)

// Switch case with Error as the condition and as one of the result
>> Switch(1/0,1,0,3,1/0,1,5,2,7)
#Error(Kind=Div0)

// Switch case with Error as the result of the exact match
>> Switch(1,0,3,1,1/0,2,7)
#Error(Kind=Div0)

// Switch case with Error as one of the match
>> Switch(1,1/0,3,1,5,2,7,11)
#Error(Kind=Div0)

// Conditions not reached are not evaluated
>> Switch(1,0,3,1,5,1/0,7,11)
5

// Branch not taken is not evaluated
>> Switch(1,0,1/0,1,5,2,7)
5

// Default result not reached and evaluated 
>> Switch(1,0,3,1,5,2,7,1/0)
5

// Default result reached and evaluated 
>> Switch(-1,0,3,1,5,2,7,1/0)
#Error(Kind=Div0)


// ************************************** STRING CASES **************************************

// Switch case with exact match and without any default result
>> Switch("one","zero","3","one","5","two","7")
"5"

// Switch case with exact match and with default result
>> Switch("one","zero","3","one","5","two","7","11")
"5"

// Switch case without any exact match and default result
>> Switch("five","zero","3","one","5","two","7")
Blank()

>> Switch("two","one","3","one","5")
Blank()

// Switch case without any exact match, but with default result
>> Switch("five","zero","3","one","5","two","7","11")
"11"

>> Switch("two","one","3","one","5","11")
"11"

// =========================Null, Empty String and Error cases =========================

// Switch case with Blank() condition, without any exact match and default result
>> Switch(Blank(),"zero","3","one","5","two","7")
Blank()

>> Switch(Blank(),0,"3",1,"5",2,"7")
Blank()

// Switch case with Blank() condition, without any exact match, but with default result
>> Switch(Blank(),"zero","3","one","5","two","7","11")
"11"

>> Switch(Blank(),0,"3",1,"5",2,"7","11")
"11"

// Switch case with Blank() condition, with and exact match and default result
>> Switch(Blank(),"zero","3",Blank(),"5","two","7","11")
"5"

>> Switch(Blank(),0,"3",Blank(),"5",2,"7","11")
"5"

// Switch case with Blank() as the result of exact match
>> Switch("one","zero","3","one",Blank(),"two","7","11")
Blank()

>> Switch(1,0,"3",1,Blank(),2,"7","11")
Blank()

>> Switch(1/0,"zero","one","two")",
#Error(Kind=Div0)

>> Switch("zero",1/0,"one","two")",
#Error(Kind=Div0)

>> Switch("zero","one",1/0,"two")",
"two"

>> Switch("zero","one","two",1/0)",
#Error(Kind=Div0)


// ************************************** DIFFERENT DATAYPE RESULTS

>> Switch(1,0,"3",1,"5",2,"7")
"5"

>> Switch(1,0,false,1,true,2,false)
true

>> Switch(1,0,Date(2000,1,4),1,DateValue("1/10/2000"),2,Date(2000,1,11))
Date(2000,1,10)

>> Switch(1,0,TimeValue("10:00:00"),1,TimeValue("6:00:00"),2,TimeValue("8:00:00"))
6:00 AM

>> Switch(1,0,DateTimeValue("4/1/2001 10:00:00"),1,DateTimeValue("5/1/2001 10:00:00"),2,DateTimeValue("6/1/2001 10:00:00"))
5/1/2001 10:00 AM

// ************************************** COERCION CASES **************************************

//Switch considers the datatype of first encountered result, as the target datatype

// ====================== FIRST RESULT NUMBER, SECOND RESULT OTHER DATAYPE ======================

//Number-Number
>> Switch("Case1","Case2",1,"Case1",2)
2

//Number-String
>> Switch("Case1","Case2",1,"Case1","Result2")
#Error(Kind=InvalidArgument)

//Number-Boolean
>> Switch("Case1","Case2",1,"Case1",true)
1

>> Switch("Case1","Case2",1,"Case1",false)
0

//Number-Date
>> Switch("Case1","Case2",1,"Case1",Date(2000,1,4))
946972800000

>> Switch("Case1","Case2",1,"Case1",DateValue("1/10/2000"))
947491200000

//Number-Time
>> Switch("Case1","Case2",1,"Case1",Time(6,30,40))
52240000

>> Switch("Case1","Case2",1,"Case1",TimeValue("6:00:00"))
50400000

//Number-DateTime
>> Switch("Case1","Case2",1,"Case1",DateTimeValue("4/1/2001 10:00:00"))
986144400000

// ====================== FIRST RESULT STRING, SECOND RESULT OTHER DATAYPE ======================

//String-Number
>> Switch("Case1","Case2","1","Case1",2)
"2"

//String-String
>> Switch("Case1","Case2","1","Case1","3")
"3"

//String-Boolean
>> Switch("Case1","Case2","1","Case1",true)
"true"

>> Switch("Case1","Case2","1","Case1",false)
"false"

//String-Date
>> Switch("Case1","Case2","Hello","Case1",Date(2000,1,4))
Date(2000,1,4)

>> Switch("Case1","Case2","1","Case1",DateValue("1/10/2000"))
Date(2000,1,10)

//String-Time
>> Switch("Case1","Case2","1","Case1",Time(6,30,40))
52240000

>> Switch("Case1","Case2","1","Case1",TimeValue("6:00:00"))
50400000

//String-DateTime
>> Switch("Case1","Case2","1","Case1",DateTimeValue("4/1/2001 10:00:00"))
986144400000

// ====================== FIRST RESULT BOOLEAN, SECOND RESULT OTHER DATAYPE ======================

//Boolean-Number
>> Switch("Case1","Case2",true,"Case1",0)
false

>> Switch("Case1","Case2",false,"Case1",-23.5)
true

//Boolean-String
>> Switch("Case1","Case2",false,"Case1","true")
true

>> Switch("Case1","Case2",true,"Case1","1")
false

>> Switch("Case1","Case2",true,"Case1","AB$%^")
false

//Boolean-Boolean
>> Switch("Case1","Case2",true,"Case1",false)
false

>> Switch("Case1","Case2",false,"Case1",true)
true

//Boolean-Date
>> Switch("Case1","Case2",true,"Case1",Date(2000,1,4))
false

>> Switch("Case1","Case2",false,"Case1",DateValue("1/10/2000"))
false

//Boolean-Time
>> Switch("Case1","Case2",true,"Case1",Time(6,30,40))
false

>> Switch("Case1","Case2",false,"Case1",TimeValue("6:00:00"))
false

//Boolean-DateTime
>> Switch("Case1","Case2",true,"Case1",DateTimeValue("4/1/2001 10:00:00"))
false

// ====================== FIRST RESULT DATE, SECOND RESULT OTHER DATAYPE ======================

//Date-Number
>> Switch("Case1","Case2",Date(2000,1,4),"Case1",0)
Date(1969,12,31)

>> Switch("Case1","Case2",Date(2000,1,4),"Case1",-23.5)
Date(1969,12,31)

>> Switch("Case1","Case2",Date(2000,1,4),"Case1",100)
Date(1969,12,31)

//Date-String
>> Switch("Case1","Case2",Date(2000,1,4),"Case1","1")
Date(2001,1,1)

>> Switch("Case1","Case2",Date(2000,1,4),"Case1","200")
Date(200,1,1)

>> Switch("Case1","Case2",Date(2000,1,4),"Case1","-12.5")
Date(2001,12,5)

>> Switch("Case1","Case2",Date(2000,1,4),"Case1","AB$%^")
#Error(Kind=InvalidArgument)

//Date-Boolean
>> Switch("Case1","Case2",Date(2000,1,4),"Case1",false)
#Error(Kind=InvalidArgument)

>> Switch("Case1","Case2",Date(2000,1,4),"Case1",true)
#Error(Kind=InvalidArgument)

//Date-Date
>> Switch("Case1","Case2",Date(2000,1,4),"Case1",Date(2000,1,5))
Date(2000,1,5)

>> Switch("Case1","Case2",Date(2000,1,4),"Case1",DateValue("1/10/2000"))
Date(2000,1,10)

//Date-Time
>> Switch("Case1","Case2",Date(2000,1,4),"Case1",Time(6,30,40))
1/1/1970 6:30 AM

>> Switch("Case1","Case2",Date(2000,1,4),"Case1",TimeValue("6:00:00"))
1/1/1970 6:00 AM

//Date-DateTime
>> Switch("Case1","Case2",Date(2000,1,4),"Case1",DateTimeValue("4/1/2001 10:00:00"))
4/1/2001 10:00 AM

// ====================== FIRST RESULT TIME, SECOND RESULT OTHER DATAYPE ======================

//Time-Number
>> Switch("Case1","Case2",Time(6,30,30),"Case1",0)
4:00 PM

>> Switch("Case1","Case2",Time(6,30,30),"Case1",-23.5)
3:59 PM

>> Switch("Case1","Case2",Time(6,30,30),"Case1",100)
4:00 PM

//Time-String
>> Switch("Case1","Case2",Time(6,30,30),"Case1","1")
12:00 AM

>> Switch("Case1","Case2",Time(6,30,30),"Case1","200")
12:00 AM

>> Switch("Case1","Case2",Time(6,30,30),"Case1","-12.5")
12:00 AM

>> Switch("Case1","Case2",Time(6,30,30),"Case1","AB$%^")
#Error(Kind=InvalidArgument)

//Time-Boolean
>> Switch("Case1","Case2",Time(6,30,30),"Case1",false)
#Error

>> Switch("Case1","Case2",Time(6,30,30),"Case1",true)
#Error

//Time-Date
>> Switch("Case1","Case2",Time(6,30,30),"Case1",Date(2000,1,5))
1/5/2000 12:00 AM

>> Switch("Case1","Case2",Time(6,30,30),"Case1",DateValue("1/10/2000"))
1/10/2000 12:00 AM

//Time-Time
>> Switch("Case1","Case2",Time(6,30,30),"Case1",Time(6,30,40))
6:30 AM

>> Switch("Case1","Case2",Time(6,30,30),"Case1",TimeValue("6:00:00"))
6:00 AM

//Time-DateTime
>> Switch("Case1","Case2",Time(6,30,30),"Case1",DateTimeValue("4/1/2001 10:00:00"))
4/1/2001 10:00 AM

// ====================== FIRST RESULT DATETIME, SECOND RESULT OTHER DATAYPE ======================

//DateTime-Number
>> Switch("Case1","Case2",DateTimeValue("4/1/2001 10:00:00"),"Case1",0)
12/31/1969 4:00 PM

>> Switch("Case1","Case2",DateTimeValue("4/1/2001 10:00:00"),"Case1",-23.5)
12/31/1969 3:59 PM

>> Switch("Case1","Case2",DateTimeValue("4/1/2001 10:00:00"),"Case1",100)
12/31/1969 4:00 PM

//DateTime-String
>> Switch("Case1","Case2",DateTimeValue("4/1/2001 10:00:00"),"Case1","1")
1/1/2001 12:00 AM

>> Switch("Case1","Case2",DateTimeValue("4/1/2001 10:00:00"),"Case1","200")
1/1/200 12:00 AM

>> Switch("Case1","Case2",DateTimeValue("4/1/2001 10:00:00"),"Case1","-12.5")
12/5/2001 12:00 AM

>> Switch("Case1","Case2",DateTimeValue("4/1/2001 10:00:00"),"Case1","AB$%^")
#Error(Kind=InvalidArgument)

//DateTime-Boolean
>> Switch("Case1","Case2",DateTimeValue("4/1/2001 10:00:00"),"Case1",false)
#Error

>> Switch("Case1","Case2",DateTimeValue("4/1/2001 10:00:00"),"Case1",true)
#Error

//DateTime-Date
>> Switch("Case1","Case2",DateTimeValue("4/1/2001 10:00:00"),"Case1",Date(2000,1,5))
1/5/2000 12:00 AM

>> Switch("Case1","Case2",DateTimeValue("4/1/2001 10:00:00"),"Case1",DateValue("1/10/2000"))
1/10/2000 12:00 AM

//DateTime-Time
>> Switch("Case1","Case2",DateTimeValue("4/1/2001 10:00:00"),"Case1",Time(6,30,40))
1/1/1970 6:30 AM

>> Switch("Case1","Case2",DateTimeValue("4/1/2001 10:00:00"),"Case1",TimeValue("6:00:00"))
1/1/1970 6:00 AM

//DateTime-DateTime
>> Switch("Case1","Case2",DateTimeValue("4/1/2001 10:00:00"),"Case1",DateTimeValue("4/1/2001 10:00:00"))
4/1/2001 10:00 AM