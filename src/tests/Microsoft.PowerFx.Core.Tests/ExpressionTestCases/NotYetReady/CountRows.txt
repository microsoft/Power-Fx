// ******** TABLE WITH NO BLANK RECORDS ********

>> CountRows([])
0

>> CountRows([0])
1

>> CountRows([1])
1

// NUMERIC RECORDS

>> CountRows([1, 2, 3, 4, 5])
5

>> CountRows(Table({a:1},{a:2},{a:3}))
3

// STRING RECORDS

>> CountRows(["1", "one", "two", "three", "four"])
5

>> CountRows(Table({a:"1"},{a:"two"},{a:"three"},{a:"four"},{a:"five"}))
5

// BOOLEAN RECORDS

>> CountRows([true, false])
2

>> CountRows(Table({a:true},{a:false}))
2

// DATE/TIME/DATETIMEVALUE RECORDS

>> CountRows([Date(2022,12,12), DateValue("10/01/2014")])
2

>> CountRows(Table({a:Date(2022,12,12)},{a:DateValue("10/01/2014")}))
2

>> CountRows([DateTimeValue("5/12/2022 6:30:30 PM"), DateTimeValue("May 19, 2022")])
2

>> CountRows(Table({a:DateTimeValue("5/12/2022 6:30:30 PM")},{a:DateTimeValue("May 19, 2022")}))
2

//  ALL DATATYPE RECORDS 

﻿>> CountRows([1, "2", "two", true, false, Date(2022,12,12),Time(6,30,30),DateTimeValue("5/12/2022 6:30:30 PM")])
8

// ******** TABLE WITH BLANK RECORDS ********

﻿>> CountRows([0,""])
2

>> CountRows([1,2,3,4,Blank()])
5

﻿>> CountRows([1, "2", true, false, Blank(), "", " ", Date(2022,12,12),Time(6,30,30),DateTimeValue("5/12/2022 6:30:30 PM")])
10

>> CountRows([1,"2", true, Blank(),Blank(),Blank()])
6

>> CountRows([1,Date(2022,12,12),"3",If(1<0,4),Blank()])
5

>> CountRows(Table({a:false},{a:Blank()},{a:true},{a:Blank()}))
4

>> CountRows(Table({a:"1"},{a:"2"},If(1<0,{a:"3"}),If(1>0,{a:"4"}),{a:"5"}))
5

>> CountRows(LastN([1,2,3,4], Blank()))
0

>> CountRows([LastN([1,2,3,4]), Blank()])
2

//One blank record
>> CountRows([Blank()])
1

//All blank records
﻿>> CountRows([Blank(),Blank(),Blank(),Blank(),Blank()])
5

﻿>> CountRows(["",""," ",Blank(),Blank()])
5

>> CountRows(Table({a:""},{a:" "},{a:Blank()}))
3

// ******** NULL and ERROR RECORDS ********

//Few error records
>> CountRows([1, "2", 1/0, true, false, Blank(), "", " ", Date(2022,12,12),Time(6,30,30),DateTimeValue("5/12/2022 6:30:30 PM")])
#Error(Kind=Div0)

>> CountRows(Table({a:1},{a:2},If(Sqrt(-1)<1,{a:3}),{a:4}))
#Error(Kind=Numeric)

//All error records
>> CountRows([1/0])
#Error(Kind=Div0)

>> CountRows(Table({a:1/0},{a:Sqrt(-1)}))
#Error(Kind=Div0)

>> CountRows(Sort(["-2","-1","0",1,2],1/Value))
#Error(Kind=Div0)

>> CountRows([Date(2022,12,12), Time(6,30,30), 1/0, DateTimeValue("5/12/2022 6:30:30 PM")])
#Error(Kind=Div0)

// ************************************** COERCION CASES **************************************

// Note: CountA function accepts different dataype only in the array notation. In the table notation, all the records should be of the same datatype. Thus coercion cases will be applicable only for the array notation expressions 

// ====================== FIRST RECORD NUMBER, SECOND RECORD OTHER DATAYPE ======================

//Number-Number
>> CountRows([1,2])
2

>> CountRows(Table({a:1},{a:2}))
2

//Number-String
>> CountRows([1,"2"])
2

>> CountRows([1,"two"])
#Error(Kind=InvalidArgument)

//Number-Boolean
>> CountRows([1,true])
2

>> CountRows([1,false])
2

//Number-Date
>> CountRows([1,Date(2022,12,12)])
2

>> CountRows([1,DateValue("May 12, 2022")])
2


//Number-Time
>> CountRows([1,Time(6,30,30)])
2

>> CountRows([1,TimeValue("12:15 PM")])
2

//Number-DateTimeValue
>> CountRows([1,DateTimeValue("5/12/2022 6:30:30 PM")])
2

// ====================== FIRST RECORD STRING, SECOND RESULT OTHER DATAYPE ======================

//String-Number
>> CountRows(["Hello",2])
2

//String-String
>> CountRows(["Hello","2"])
2

>> CountRows(Table({a:"Hello"},{a:"2"}))
2

>> CountRows(["Hello","two"])
#Error(Kind=InvalidArgument)

//String-Boolean
>> CountRows(["Hello",true])
2

>> CountRows(["Hello",false])
2

//String-Date
>> CountRows(["Hello",Date(2022,12,12)])
2

>> CountRows(["Hello",DateValue("May 12, 2022")])
2


//String-Time
>> CountRows(["Hello",Time(6,30,30)])
2

>> CountRows(["Hello",TimeValue("12:15 PM")])
2

//String-DateTimeValue
>> CountRows(["Hello",DateTimeValue("5/12/2022 6:30:30 PM")])
2

// ====================== FIRST RECORD BOOLEAN, SECOND RESULT OTHER DATAYPE ======================

//Boolean-Number
>> CountRows([true,2])
2

//Boolean-String
>> CountRows([true,"2"])
2

>> CountRows([true,"two"])
#Error(Kind=InvalidArgument)

//Boolean-Boolean
>> CountRows([true,false])
2

// ====================== FIRST RECORD DATE, SECOND RESULT OTHER DATAYPE ======================

//Date-Number
>> CountRows([Date(2022,12,12),2])
2

//Date-Date
>> CountRows([Date(2022,12,12),"2"])
2

>> CountRows([Date(2022,12,12),"two"])
#Error(Kind=InvalidArgument)

//Date-Boolean coercion not allowed

//Date-Date
>> CountRows([Date(2022,12,12),Date(2022,12,12)])
2

>> CountRows([Date(2022,12,12),DateValue("May 12, 2022")])
2

>> CountRows(Table({a:Date(2022,12,12)},{a:Date(2022,12,12)}))
2

//Date-Time
>> CountRows([Date(2022,12,12),Time(6,30,30)])
2

>> CountRows([Date(2022,12,12),TimeValue("12:15 PM")])
2

//Date-DateTimeValue
>> CountRows([Date(2022,12,12),DateTimeValue("5/12/2022 6:30:30 PM")])
2

// ====================== FIRST RECORD TIME, SECOND RESULT OTHER DATAYPE ======================

//Time-Number
>> CountRows([Time(6,30,30),2])
2

//Time-String
>> CountRows([Time(6,30,30),"2"])
2

>> CountRows([Time(6,30,30),"two"])
#Error(Kind=InvalidArgument)

//Time-Boolean coercion not allowed

//Time-Date
>> CountRows([Time(6,30,30),Date(2022,12,12)])
2

>> CountRows([Time(6,30,30),DateValue("May 12, 2022")])
2

//Time-Time
>> CountRows([Time(6,30,30),Time(6,30,30)])
2

>> CountRows([Time(6,30,30),TimeValue("12:15 PM")])
2

>> CountRows(Table({a:Time(6,30,30)},{a:Time(6,30,30)}))
2

//Time-DateTimeValue
>> CountRows([Time(6,30,30),DateTimeValue("5/12/2022 6:30:30 PM")])
2

// ====================== FIRST RECORD DATETIME, SECOND RESULT OTHER DATAYPE ======================

//Datetime-Number
>> CountRows([DateTimeValue("5/12/2022 6:30:30 PM"),2])
2

//Datetime-String
>> CountRows([DateTimeValue("5/12/2022 6:30:30 PM"),"2"])
2

>> CountRows([DateTimeValue("5/12/2022 6:30:30 PM"),"two"])
#Error(Kind=InvalidArgument)


//Datetime-Boolean coercion not allowed

//Datetime-Date
>> CountRows([DateTimeValue("5/12/2022 6:30:30 PM"),Date(2022,12,12)])
2

>> CountRows([DateTimeValue("5/12/2022 6:30:30 PM"),DateValue("May 12, 2022")])
2

//Datetime-Time
>> CountRows([DateTimeValue("5/12/2022 6:30:30 PM"),Time(6,30,30)])
2

>> CountRows([DateTimeValue("5/12/2022 6:30:30 PM"),TimeValue("12:15 PM")])
2

//Datetime-DateTimeValue
>> CountRows([DateTimeValue("5/12/2022 6:30:30 PM"),DateTimeValue("5/12/2022 6:30:30 PM")])
2

>> CountRows(Table({a:DateTimeValue("5/12/2022 6:30:30 PM")},{a:DateTimeValue("5/12/2022 6:30:30 PM")}))
2