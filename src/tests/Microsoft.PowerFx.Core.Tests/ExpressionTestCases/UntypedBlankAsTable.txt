
// Consider an untyped blank, such as the return type from Blank(), as an argument to a single column table enabled function.
//
// We favor treating these as a scalar blank, rather than a table blank.  Scalar is the simpler form and more likely
// what the maker wanted.  This treatment is also consistent with Canvas.
//
// A typed Blank, such as returned from a database or If(1<0,"foo") is fine, it specifically an untyped Blank that is odd.
//
// In general, a function that takes a blank table argument will return a blank table.

>> Concatenate("a",Blank(),"b")
"ab"

>> Concatenate(["a","b"],Blank())
Table({Value:"a"},{Value:"b"})

>> Concatenate(Blank(),["a","b"])
Table({Value:"a"},{Value:"b"})

>> Left(["abc","def"],2)
Table({Value:"ab"},{Value:"de"})

>> Left(["abc","def"],Blank())
Table({Value:""},{Value:""})

>> Left("abcd",[2,3])
Table({Value:"ab"},{Value:"abc"})

>> Left(Blank(),[2,3])
Table({Value:""},{Value:""})

>> Right(["abc","def"],2)
Table({Value:"bc"},{Value:"ef"})

>> Right(["abc","def"],Blank())
Table({Value:""},{Value:""})

>> Right("abc",[2,3])
Table({Value:"bc"},{Value:"abc"})

>> Right(Blank(),[2,3])
Table({Value:""},{Value:""})

>> Mid(["abc","def"],2)
Table({Value:"bc"},{Value:"ef"})

>> Mid(["abc","def"],Blank())
Table({Value:Error({Kind:ErrorKind.InvalidArgument})},{Value:Error({Kind:ErrorKind.InvalidArgument})})

>> Mid(["abc","def"],3,Blank())
Table({Value:""},{Value:""})

>> Mid(Blank(),[1,2])
Table({Value:""},{Value:""})

>> Mod([10,22],[3,4])
Table({Value:1},{Value:2})

>> Mod([1,2],Blank())
Table({Value:Error({Kind:ErrorKind.Div0})},{Value:Error({Kind:ErrorKind.Div0})})

>> Mod(Blank(),[3,4])
Table({Value:0},{Value:0})

>> Power(Blank(),3)
0

>> Power(Blank(),[3])
Table({Value:0})

>> Power(If(1<0,[1]),3)
Blank()

>> Log(Blank(),3)
Error({Kind:ErrorKind.Numeric})

>> Log(Blank(),[3])
Table({Value:Error({Kind:ErrorKind.Numeric})})

>> Log(If(1<0,[1]),3)
Blank()

>> Sum([4,5],Blank())
Blank()

>> Sum(If(1<0,[1,2,3]),4)
Blank()

>> Sum(If(1<0,[1,2,3]),Blank())
Blank()

// one argument, single column table functions, will treat Blank() as a scalar
>> Sin(Blank())
0

>> Len(Blank())
0

>> Abs(Blank())
0
