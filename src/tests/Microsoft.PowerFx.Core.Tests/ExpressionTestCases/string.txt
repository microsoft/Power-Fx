>> "foo"
"foo"

>> ""
""

>> Left("foo", 1)
"f"

>> Left(Text(100), If(true, 1, 0))
"1"

>> Left("foo", 100)
"foo"

>> Left("foo", 0)
""

>> Left("foo", -1)
#Error

>> Left("foo", 1/0)
#Error

>> Left(Blank(), 1)
""

>> Left("foo", Blank())
""

>> Right("bar", 1)
"r"

>> Right(Text(false), 3-2)
"e"

>> Right("bar", 77)
"bar"

>> Right("bar", 0)
""

>> Right("bar", -1)
#Error

>> Right("foo", 1/0)
#Error

>> Right(Blank(), 1)
""

>> Right("foo", Blank())
""

>> Mid("foobar", 2, 3)
"oob"

>> Mid("foobar", 3)
"obar"

// numerical parameters are truncated
>> Mid("abcdef", 3.1, 1.9)
"c"

>> Mid("foo" & "bar", If(false, 1, 2), 8/4)
"oo"

>> Mid("foo", 100)
""

>> Mid("bar", -1)
#Error

>> IsError(Mid("bar", -1))
true

>> Mid("bar", 2, -1)
#Error

>> IsError(Mid("bar", 2, -1))
true

>> Mid("foo", 0)
#Error

Mid(Text(1/0, "#.000"), 1)
#Error

>> IsError(Mid("foo", 0))
true

>> Mid("foo", 1, 0)
""

>> IsError(Mid("foo", 2, 0))
false

>> Len("foo")
3

>> Len("foo" & "bar")
6

>> Len(If(true, "foo", "bar!"))
3

>> Len(Blank())
0

Len(Text(1/0, "#.000"))
#Error

>> "f" in "foo"
true

>> "f" in "FOO"
true

>> "F" in "foo"
true

>> "yes" in "no"
false

>> "A" exactin "BAR"
true

>> "a" exactin "BAR"
false

>> "A" exactin "bar"
false

>> StartsWith("foo", "f")
true

>> StartsWith("FOO", "f")
/*InterpreterRunner*/ #Skip
true

>> StartsWith("FOO", "O")
false

>> StartsWith("foo", "")
true

>> StartsWith("foo", Blank())
false

>> StartsWith("foobar", Text(1/0))
/*SqlRunner*/ Compile Error
#Error

>> EndsWith("foobar", "bar")
true

>> EndsWith("foobar", "foo")
false

>> EndsWith("foobar", "")
true

>> EndsWith("foobar", Blank())
false

>> EndsWith("foobar", Text(1/0))
/*SqlRunner*/ Compile Error
#Error

>> TrimEnds("   Hello     World   ")
"Hello     World"

>> TrimEnds(Blank())
""

>> TrimEnds(Text(1/0))
#Error

>> Trim("   Hello     World   ")
"Hello World"

>> Trim(Blank())
""

>> Trim(Text(1/0))
#Error

>> Lower("E. E. Cummings")
"e. e. cummings"

>> Lower(Blank())
""

>> Lower(Text(1/0, "000"))
#Error

>> Upper("Important!")
"IMPORTANT!"

>> Upper(Blank())
""

>> Upper(Text(1/0, "000"))
#Error

>> Substitute("abcabcabc", "ab", "xx")
"xxcxxcxxc"

>> Substitute("abcabcabc", "ab", "xx", 2)
"abcxxcabc"

>> Substitute("abcabcabc", "ab", "xx", Len("ab") + 1)
"abcabcxxc"

>> Substitute("abcabcabc", "xx", "yy", 1)
"abcabcabc"

>> Substitute("abcabcabc", "ab", "xx", 4)
"abcabcabc"

>> Substitute("abcabcabc", "ab", "xx", 0)
#Error

>> Substitute("abcabcabc", "ab", "xx", 1/0)
#Error

>> Substitute("abcabcabc", "ab", "xx", 0)
#Error

>> Substitute("abcabcabc", "ab", "xx", Blank())
"xxcxxcxxc"

>> Substitute("abcabcabc", Blank(), "xx")
"abcabcabc"

>> Substitute("abcabcabc", Blank(), "xx", 2)
"abcabcabc"

>> Substitute("abcabcabc", "ab", Blank())
"ccc"

>> Substitute("abcabcabc", "ab", Blank(), 2)
"abccabc"

>> Substitute("abcabcabc", "", "xx")
"abcabcabc"

>> IsError(Substitute("abcabcabc", "ab", "xx", 0))
true

>> Substitute("abcabcabc", "ab", "xx", -2)
#Error

>> IsError(Substitute("abcabcabc", "ab", "xx", -2))
true

>> Replace("abcabcabc", 4, 2, "xx")
"abcxxcabc"

>> Replace("abcabcabc", 200, 240, "xx")
"abcabcabcxx"

>> Replace("abcabcabc", 200, 2, "xx")
"abcabcabcxx"

>> Replace("abcabcabc", 4, 240, "xx")
"abcxx"

>> Replace("abcabcabc", 0, 0, "xx")
#Error

>> IsError(Replace("abcabcabc", 0, 0, "xx"))
true

>> Replace("abcabcabc", 1, -2, "xx")
#Error

>> IsError(Replace("abcabcabc", 1, -2, "xx"))
true

>> Replace("abcabcabc", -1, -2, "xx")
#Error

>> IsError(Replace("abcabcabc", -1, -2, "xx"))
true

>> Concatenate("a", "b", Text(7))
"ab7"

>> Concatenate("a", "b", Blank())
"ab"

>> Concatenate(Text(1/0, "000"), "b", Text(7))
#Error

>> $"Hello {"World!"}"
/*SqlRunner*/ Compile Error
"Hello World!"

>> $"Hello {"World!"} 2"
/*SqlRunner*/ Compile Error
"Hello World! 2"

>> $"One {$"Two {"Three"}"} Four"
/*SqlRunner*/ Compile Error
"One Two Three Four"

>> $"This string {{{"has"}}} curly braces"
/*SqlRunner*/ Compile Error
"This string {has} curly braces"

>> $"This string {{ has }} curly braces"
/*SqlRunner*/ Compile Error
"This string { has } curly braces"

>> "This string {{ has }} curly braces"
"This string {{ has }} curly braces"

>> $""
/*SqlRunner*/ Compile Error
""

>> $"Hello"
/*SqlRunner*/ Compile Error
"Hello"

>> $"{123}"
/*SqlRunner*/ Compile Error
"123"

>> $"{123}{456}"
/*SqlRunner*/ Compile Error
"123456"

>> $"{"
/*SqlRunner*/ Compile Error
Errors: Error 3-4: Unexpected characters. Characters are used in the formula in an unexpected way.|Error 4-4: Unexpected characters. Characters are used in the formula in an unexpected way.

>> $"}"
/*SqlRunner*/ Compile Error
Errors: Error 2-2: Unexpected characters. Characters are used in the formula in an unexpected way.

>> $"{" & ""
/*SqlRunner*/ Compile Error
Errors: Error 3-9: Unexpected characters. Characters are used in the formula in an unexpected way.|Error 9-9: Unexpected characters. Characters are used in the formula in an unexpected way.

>> $"}" & ""
/*SqlRunner*/ Compile Error
Errors: Error 2-2: Unexpected characters. Characters are used in the formula in an unexpected way.

>> $"{
/*SqlRunner*/ Compile Error
Errors: Error 3-3: Unexpected characters. Characters are used in the formula in an unexpected way.

>> $"}
/*SqlRunner*/ Compile Error
Errors: Error 2-2: Unexpected characters. Characters are used in the formula in an unexpected way.|Error 3-3: Unexpected characters. Characters are used in the formula in an unexpected way.

>> $"{1}{2}{{3{{4{{5{{6{{7"
/*SqlRunner*/ Compile Error
"12{3{4{5{6{7"

>> $"{{"
/*SqlRunner*/ Compile Error
"{"

>> $"{{a}}"
/*SqlRunner*/ Compile Error
"{a}"

>> $"-{{a}}-"
/*SqlRunner*/ Compile Error
"-{a}-"

>> $"-{{a}}"
/*SqlRunner*/ Compile Error
"-{a}"

>> $"{{a}}-"
/*SqlRunner*/ Compile Error
"{a}-"

>> $"! {Date(1980,1,1)} !"
/*SqlRunner*/ Compile Error
"! 1/1/1980 !"

>> $""""
/*SqlRunner*/ Compile Error
"""

>> """"
"""

>> $"! {With({a:4,b:6},a*b)} !"
/*SqlRunner*/ Compile Error
"! 24 !"

>> $"! {With({array:[1,5,9]},Sum(Sequence(CountRows(array)) As Index,Power(Last(FirstN(array,Index.Value)).Value, Index.Value)))} !"
/*SqlRunner*/ Compile Error
"! 755 !"

>> $"! {$"{$"{true}"}"} !"
/*SqlRunner*/ Compile Error
"! true !"

>> $""
/*SqlRunner*/ Compile Error
""

>> $"! !"
/*SqlRunner*/ Compile Error
"! !"

>> $"! "" !"
/*SqlRunner*/ Compile Error
"! " !"

>> $"! {{1,2}} !"
/*SqlRunner*/ Compile Error
"! {1,2} !"

>> $"! {[1,2]} !"
/*SqlRunner*/ Compile Error
Errors: Error 5-10: Invalid argument type (Table). Expecting a Text value instead.|Error 0-14: Expressions which appear inside an interpolated string must evaluate to a Text value or to a compatible type.

>> $"! {Table({a:1})} !"
/*SqlRunner*/ Compile Error
Errors: Error 5-17: Invalid argument type (Table). Expecting a Text value instead.|Error 0-21: Expressions which appear inside an interpolated string must evaluate to a Text value or to a compatible type.

>> $"! {{a:1,b:2}} !"
/*SqlRunner*/ Compile Error
"! {a:1,b:2} !"

>> $"! { {a:1,b:2} } !"
/*SqlRunner*/ Compile Error
Errors: Error 6-15: Invalid argument type (Record). Expecting a Text value instead.|Error 0-20: Expressions which appear inside an interpolated string must evaluate to a Text value or to a compatible type.

>> $"Hello {"
Errors: Error 9-10: Unexpected characters. Characters are used in the formula in an unexpected way.|Error 10-10: Unexpected characters. Characters are used in the formula in an unexpected way.

>> $"Hello {}"
"Hello "