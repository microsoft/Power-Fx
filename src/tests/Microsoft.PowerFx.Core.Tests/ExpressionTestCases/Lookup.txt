// Basic LookUp
>> LookUp(Table({ Id: 1, Name: "Element 1" }, { Id:2, Name: "Element 2"}), Id = 2)
{Id:2,Name:"Element 2"}

// Not found
>> LookUp(Table({ Id: 1, Name: "Element 1" }, { Id:2, Name: "Element 2"}), Id = 3)
Blank()

// Basic LookUp with reduction
>> LookUp(Table({ Id: 1, Name: "Element 1" }, { Id:2, Name: "Element 2"}), Id = 2, Name)
"Element 2"

>> LookUp(Table({ Id: 1, Name: "Element 1" }, { Id:2, Name: "Element 2"}), Id = 3, Name)
Blank()

>> LookUp(Table({ Id: 1, Name: "Element 1" }, { Id:2, Name: "Element 2"}), Id = 2).Name
"Element 2"

>> LookUp(Table({ Id: 1, Name: "Element 1" }, { Id:2, Name: "Element 2"}), Id = 3).Name
Blank()

// Return first result only
>> LookUp(Table({ Id: 1, Name: "Element 1" }, { Id:2, Name: "Element 2a"}, { Id:2, Name: "Element 2b"}), Id = 2).Name
"Element 2a"

// 'As' with LookUp
>> LookUp([1,2,3] As X, X.Value > 2)
{Value:3}

>> LookUp([1,2,3] As X, X.Value > 2).Value
3

>> LookUp([1,2,3] As X, X.Value > 2, X.Value)
3

// 'ThisRecord is implicit'
>> LookUp([1,2,3], Value >= 2)
{Value:2}

>> LookUp([1,2,3], Value >= 2).Value
2

>> LookUp([1,2,3], Value >= 2, Value)
2

>> LookUp([1,2,3], ThisRecord.Value >= 2)
{Value:2}

>> LookUp([1,2,3], ThisRecord.Value >= 2, Value)
2

>> LookUp([1,2,3], ThisRecord.Value > 2).Value
3

// $$$ Corner cases like  negative indices, N > length, doubles instead of int, empty. 

>> LookUp([1,2,3], ThisRecord.Value > 3)
Blank()

>> LookUp([1,0,3,4], 1/ThisRecord.Value >= 0)
{Value:1}

>> LookUp([0,3,4], 1/ThisRecord.Value >= 0)
#Error

>> LookUp([1,2,3,4], Blank())
Blank()

>> LookUp(Blank(), Blank())
Blank()
