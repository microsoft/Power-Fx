#SETUP: ConsistentOneColumnTableResult

>> Split( "Hello, World", "," )
Table({Value:"Hello"},{Value:" World"})

>> Split("this is a test", " ")
Table({Value:"this"},{Value:"is"},{Value:"a"},{Value:"test"})

>> Split("test", "")
Table({Value:"t"},{Value:"e"},{Value:"s"},{Value:"t"})

>> Split("Hello world", If(1 < 0, ""))
Table({Value:"H"},{Value:"e"},{Value:"l"},{Value:"l"},{Value:"o"},{Value:" "},{Value:"w"},{Value:"o"},{Value:"r"},{Value:"l"},{Value:"d"})

>> Split( "Hello, World", "l" )
Table({Value:"He"},{Value:""},{Value:"o, Wor"},{Value:"d"})

>> Split( "Hello, World", "ll" )
Table({Value:"He"},{Value:"o, World"})

>> Split( "Hello, World", "%" )
Table({Value:"Hello, World"})

>> Split("", "")
Table()

>> Split(If(1 < 0, ""), "")
Table()

>> Split(Text(1/0), "")
Error({Kind:ErrorKind.Div0})

// Table comparison ParseJSON
>> Split("Hello World", "Hello World")
Table({Value:""},{Value:""})

>> Split(ParseJSON("""Hello World"""), "Hello World")
Table({Value:""},{Value:""})

>> Split("Hello World", ParseJSON("""Hello World"""))
Table({Value:""},{Value:""})
