#SETUP: EnableExpressionChaining,MutationFunctionsTestSetup

// Check MutationFunctionsTestSetup handler (PowerFxEvaluationTests.cs) for documentation.

>> Collect(t1, r2);Remove(t1, r1);t1
Table({Field1:2,Field2:"moon",Field3:DateTime(2022,2,1,0,0,0,0),Field4:false})

>> Collect(t1, r1);Collect(t1, r1);Collect(t1, r1);Collect(t1, r2);Remove(t1, r1, "All");t1
Table({Field1:2,Field2:"moon",Field3:DateTime(2022,2,1,0,0,0,0),Field4:false})

>> Collect(t1, r2);
  Collect(t1, {Field1:3,Field2:"earth",Field3:DateTime(2022,2,1,0,0,0,0),Field4:false});
  Collect(t1, {Field1:4,Field2:"earth",Field3:DateTime(2022,2,1,0,0,0,0),Field4:false});
  Remove(t1, {Field2:"earth"});
  t1
Table({Field1:2,Field2:"moon",Field3:DateTime(2022,2,1,0,0,0,0),Field4:false},{Field1:3,Field2:"earth",Field3:DateTime(2022,2,1,0,0,0,0),Field4:false},{Field1:4,Field2:"earth",Field3:DateTime(2022,2,1,0,0,0,0),Field4:false})

>> Collect(t1, r2);
  Collect(t1, {Field1:3,Field2:"earth",Field3:DateTime(2022,2,1,0,0,0,0),Field4:false});
  Collect(t1, {Field1:4,Field2:"earth",Field3:DateTime(2022,2,1,0,0,0,0),Field4:false});
  Remove(t1, {Field2:"earth"}, "All");
  t1
Table({Field1:2,Field2:"moon",Field3:DateTime(2022,2,1,0,0,0,0),Field4:false})

>> Collect(t1, r2);
  Collect(t1, {Field1:3,Field2:"earth",Field3:DateTime(2022,2,1,0,0,0,0),Field4:false});
  Collect(t1, {Field1:4,Field2:"earth",Field3:DateTime(2022,2,1,0,0,0,0),Field4:false});
  Remove(t1, {Field4:false});
  t1
Table({Field1:1,Field2:"earth",Field3:DateTime(2022,1,1,0,0,0,0),Field4:true},{Field1:3,Field2:"earth",Field3:DateTime(2022,2,1,0,0,0,0),Field4:false},{Field1:4,Field2:"earth",Field3:DateTime(2022,2,1,0,0,0,0),Field4:false})

>> Collect(t1, r2);
  Collect(t1, {Field1:3,Field2:"earth",Field3:DateTime(2022,2,1,0,0,0,0),Field4:false});
  Collect(t1, {Field1:4,Field2:"earth",Field3:DateTime(2022,2,1,0,0,0,0),Field4:false});
  Remove(t1, {Field4:false}, "All");
  t1
Table({Field1:1,Field2:"earth",Field3:DateTime(2022,1,1,0,0,0,0),Field4:true})

>> Collect(t1, r2);
  Collect(t1, {Field1:1/0,Field2:"earth",Field3:DateTime(2022,2,1,0,0,0,0),Field4:false});
  Collect(t1, {Field1:1/0,Field2:"earth",Field3:DateTime(2022,2,1,0,0,0,0),Field4:false});
  Remove(t1, {Field4:false}, "All");
  t1
Table({Field1:1,Field2:"earth",Field3:DateTime(2022,1,1,0,0,0,0),Field4:true})

>> Collect(t1, {Field1:1/0,Field2:"earth",Field3:DateTime(2022,2,1,0,0,0,0),Field4:false});
  Collect(t1, {Field1:1/0,Field2:"earth",Field3:DateTime(2022,2,1,0,0,0,0),Field4:false});
  Collect(t1, {Field1:1/0,Field2:"moon",Field3:DateTime(2030,2,1,0,0,0,0),Field4:true});
  Remove(t1, {Field2:"earth"}, "All");
  t1
Table({Field1:Microsoft.PowerFx.Types.ErrorValue,Field2:"moon",Field3:DateTime(2030,2,1,0,0,0,0),Field4:true})

>> Collect(t1, r2);
  Collect(t1, {Field1:3,Field2:"earth",Field3:DateTime(2022,2,1,0,0,0,0),Field4:false});
  Collect(t1, {Field1:4,Field2:"earth",Field3:DateTime(2022,2,1,0,0,0,0),Field4:false});
  Remove(t1, {DisplayNameField2:"earth"});
  t1
Table({Field1:2,Field2:"moon",Field3:DateTime(2022,2,1,0,0,0,0),Field4:false},{Field1:3,Field2:"earth",Field3:DateTime(2022,2,1,0,0,0,0),Field4:false},{Field1:4,Field2:"earth",Field3:DateTime(2022,2,1,0,0,0,0),Field4:false})

>> Collect(t1, r2);
  Collect(t1, {Field1:3,Field2:"earth",Field3:DateTime(2022,2,1,0,0,0,0),Field4:false});
  Collect(t1, {Field1:4,Field2:"earth",Field3:DateTime(2022,2,1,0,0,0,0),Field4:false});
  Remove(t1, {DisplayNameField2:"earth"}, "All");
  t1
Table({Field1:2,Field2:"moon",Field3:DateTime(2022,2,1,0,0,0,0),Field4:false})

>> Remove(t2, {Field1:1})
true

>> Remove(t2, {Field2:{Field2_1:321}})
true

>> Remove(t2, {Field2:{Field2_3:{Field2_3_1:3231}}})
true

>> Remove(t2, {Field1:5})
false

>> Remove(t2, {Field2:{Field2_1:555}})
false

>> Remove(t2, {Field2:{Field2_3:{Field2_3_1:5555}}})
false

>> Remove(t2, {Field1:1}, "All")
true

>> Remove(t2, {Field2:{Field2_1:321}}, "All")
true

>> Remove(t2, {Field2:{Field2_3:{Field2_3_1:3231}}}, "All")
true

>> Remove(t2, {Field2:{Field2_3:{Field2_3_2:"common"}}}, "All")
true

>> Remove(t2, {Field1:5}, "All")
false

>> Remove(t2, {Field2:{Field2_1:555}}, "All")
false

>> Remove(t2, {Field2:{Field2_3:{Field2_3_1:5555}}}, "All")
false

>> Remove(t2, {Field2:{Field2_3:{Field2_3_2:"notexists"}}}, "All")
false

>> Remove(t2, {Field1:1});t2
Table({Field1:2,Field2:{Field2_1:221,Field2_2:"2_2",Field2_3:{Field2_3_1:2231,Field2_3_2:"common"}},Field3:false},{Field1:3,Field2:{Field2_1:321,Field2_2:"2_2",Field2_3:{Field2_3_1:3231,Field2_3_2:"common"}},Field3:true})

>> Remove(t2, {Field2:{Field2_1:321}});t2
Table({Field1:1,Field2:{Field2_1:121,Field2_2:"2_2",Field2_3:{Field2_3_1:1231,Field2_3_2:"common"}},Field3:false},{Field1:2,Field2:{Field2_1:221,Field2_2:"2_2",Field2_3:{Field2_3_1:2231,Field2_3_2:"common"}},Field3:false})

>> Remove(t2, {Field2:{Field2_3:{Field2_3_1:3231}}});t2
Table({Field1:1,Field2:{Field2_1:121,Field2_2:"2_2",Field2_3:{Field2_3_1:1231,Field2_3_2:"common"}},Field3:false},{Field1:2,Field2:{Field2_1:221,Field2_2:"2_2",Field2_3:{Field2_3_1:2231,Field2_3_2:"common"}},Field3:false})

>> Remove(t2, {Field2:{Field2_3:{Field2_3_2:"common"}}}, "All");t2
Table()

// Wrong arguments
>> Remove(t1, r1,"Al");
Errors: Error 14-18: If provided, last argument must be 'All'. Is there a typo?|Error 0-19: The function 'Remove' has some invalid arguments.

>> Remove(t1, r1,"");
Errors: Error 14-16: If provided, last argument must be 'All'. Is there a typo?|Error 0-17: The function 'Remove' has some invalid arguments.

>> Remove(t1, r1, r1, r1, r1, r1, r1, "Al");
Errors: Error 35-39: If provided, last argument must be 'All'. Is there a typo?|Error 0-40: The function 'Remove' has some invalid arguments.

>> Remove(t1, "All");
Errors: Error 11-16: Invalid argument type (Text). Expecting a Record value instead.|Error 11-16: Cannot use a non-record value in this context.|Error 0-17: The function 'Remove' has some invalid arguments.

>> Collect(t1, r2);
  Collect(t1, {Field1:3,Field2:"earth",Field3:DateTime(2030,2,1,0,0,0,0),Field4:true});
  Collect(t1, {Field1:4,Field2:"earth",Field3:DateTime(2040,2,1,0,0,0,0),Field4:false});
  Remove(t1,LookUp(t1,DisplayNameField2="earth"));
  t1
Table({Field1:2,Field2:"moon",Field3:DateTime(2022,2,1,0,0,0,0),Field4:false},{Field1:3,Field2:"earth",Field3:DateTime(2030,2,1,0,0,0,0),Field4:true},{Field1:4,Field2:"earth",Field3:DateTime(2040,2,1,0,0,0,0),Field4:false})

>> Collect(t1, r2);
  Collect(t1, {Field1:3,Field2:"earth",Field3:DateTime(2030,2,1,0,0,0,0),Field4:true});
  Collect(t1, {Field1:4,Field2:"earth",Field3:DateTime(2040,2,1,0,0,0,0),Field4:false});
  Remove(t1,Last(Filter(t1, DisplayNameField2 = "earth")));
  t1
Table({Field1:1,Field2:"earth",Field3:DateTime(2022,1,1,0,0,0,0),Field4:true},{Field1:2,Field2:"moon",Field3:DateTime(2022,2,1,0,0,0,0),Field4:false},{Field1:3,Field2:"earth",Field3:DateTime(2030,2,1,0,0,0,0),Field4:true})

>> Collect(t1, r2);
  Collect(t1, {Field1:3,Field2:"earth",Field3:DateTime(2030,2,1,0,0,0,0),Field4:true});
  Collect(t1, {Field1:4,Field2:"earth",Field3:DateTime(2040,2,1,0,0,0,0),Field4:false});
  Remove(t1,First(Filter(t1, DisplayNameField2 = "earth")));
  t1
Table({Field1:2,Field2:"moon",Field3:DateTime(2022,2,1,0,0,0,0),Field4:false},{Field1:3,Field2:"earth",Field3:DateTime(2030,2,1,0,0,0,0),Field4:true},{Field1:4,Field2:"earth",Field3:DateTime(2040,2,1,0,0,0,0),Field4:false})
