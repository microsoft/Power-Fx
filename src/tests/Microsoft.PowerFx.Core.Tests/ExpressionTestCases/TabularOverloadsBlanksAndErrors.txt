// *********** Single-argument functions ***********

>> Abs(If(1/0<2,[1]))
#Error(Kind=Div0)

>> Abs(If(1<0,[1]))
Blank()

>> Abs(Filter([1,2,3], Value > 10))
[]

>> Boolean(If(1/0<2,["true"]))
#Error(Kind=Div0)

>> Boolean(If(1<0,["true"]))
Blank()

>> Boolean(Filter(["true","false"], Len(Value) > 10))
[]

>> Boolean(If(1/0<2,[1]))
#Error(Kind=Div0)

>> Boolean(If(1<0,[1]))
Blank()

>> Boolean(Filter([1,2,3], Value > 10))
[]

>> Char(If(1/0<2,[61]))
#Error(Kind=Div0)

>> Char(If(1<0,[61]))
Blank()

// Needs updating for consistent schema flag
>> Char(Filter([61,62,63], Value > 100))
Table()

>> Exp(If(1/0<2,[1]))
#Error(Kind=Div0)

>> Exp(If(1<0,[1]))
Blank()

>> Exp(Filter([1,2,3], Value > 10))
[]

>> Int(If(1/0<2,[1]))
#Error(Kind=Div0)

>> Int(If(1<0,[1]))
Blank()

>> Int(Filter([1,2,3], Value > 10))
[]

>> Len(If(1/0<2,["true"]))
#Error(Kind=Div0)

>> Len(If(1<0,["true"]))
Blank()

>> Len(Filter(["true","false"], Len(Value) > 10))
[]

>> Ln(If(1/0<2,[1]))
#Error(Kind=Div0)

>> Ln(If(1<0,[1]))
Blank()

>> Ln(Filter([1,2,3], Value > 10))
[]

>> Sqrt(If(1/0<2,[1]))
#Error(Kind=Div0)

>> Sqrt(If(1<0,[1]))
Blank()

>> Sqrt(Filter([1,2,3], Value > 10))
[]

// *********** 2+-argument functions, errors ***********

>> Concatenate(If(1/0<2,["hello", "hi"]), " world")
#Error(Kind=Div0)

>> Concatenate("hello ", If(Sqrt(-1)<0,["world", "day"]))
#Error(Kind=Numeric)

// Needs updating for consistent schema flag
>> Concatenate(["hello", "hi"], If(1/0<2," world"))
Table({Result:Microsoft.PowerFx.Types.ErrorValue},{Result:Microsoft.PowerFx.Types.ErrorValue})

// Needs updating for consistent schema flag
>> Concatenate(Char(0), ["hello", "great", "world"])
Table({Result:Microsoft.PowerFx.Types.ErrorValue},{Result:Microsoft.PowerFx.Types.ErrorValue},{Result:Microsoft.PowerFx.Types.ErrorValue})

// Needs updating for consistent schema flag
>> Concatenate(["hello", "hi"], " ", ["John", "Jane", "Jim", "Joan"])
Table({Result:"hello John"},{Result:"hi Jane"},Microsoft.PowerFx.Types.ErrorValue,Microsoft.PowerFx.Types.ErrorValue)

// Needs updating for consistent schema flag
>> Concat(Concatenate(["one", "two"], Text(1/0)), IfError(Result, $"Error(Kind={FirstError.Kind})"), ", ")
"Error(Kind=13), Error(Kind=13)"

// Needs updating for consistent schema flag
>> Concat(Concatenate(Char(0), ["hello", "great", "world"]), IfError(Result, $"Error(Kind={FirstError.Kind})"), ", ")
"Error(Kind=25), Error(Kind=25), Error(Kind=25)"

// Needs updating for consistent schema flag
>> Concat(Concatenate(["hello", "hi"], " ", ["John", "Jane", "Jim", "Joan"]), IfError(Result, $"Error(Kind={FirstError.Kind})"), ", ")
"hello John, hi Jane, Error(Kind=20), Error(Kind=20)"

>> Find(If(1/0<2,["hello", "hi"]), " world")
#Error(Kind=Div0)

>> Find("a", If(Sqrt(-1)<0,["world", "day"]))
#Error(Kind=Numeric)

// Needs updating for consistent schema flag
>> Find(["a", "b"], If(1/0<2,"abcdefg"))
Table({Result:Microsoft.PowerFx.Types.ErrorValue},{Result:Microsoft.PowerFx.Types.ErrorValue})

// Needs updating for consistent schema flag
>> Find(Char(0), ["hello", "great", "world"])
Table({Result:Microsoft.PowerFx.Types.ErrorValue},{Result:Microsoft.PowerFx.Types.ErrorValue},{Result:Microsoft.PowerFx.Types.ErrorValue})

// Needs updating for consistent schema flag
>> Find(["a", "b", "c"], "The quick brown fox jumped over the lazy dog", [1, 2, 3, 4, 5])
Table({Result:38},{Result:11},{Result:8},Microsoft.PowerFx.Types.ErrorValue,Microsoft.PowerFx.Types.ErrorValue)

// Needs updating for consistent schema flag
>> Concat(Find(["a", "b"], If(1/0<2,"abcdefg")), IfError(Text(Result), $"Error(Kind={FirstError.Kind})"), ", ")
"Error(Kind=13), Error(Kind=13)"

// Needs updating for consistent schema flag
>> Concat(Find(Char(0), ["hello", "great", "world"]), IfError(Text(Result), $"Error(Kind={FirstError.Kind})"), ", ")
"Error(Kind=25), Error(Kind=25), Error(Kind=25)"

// Needs updating for consistent schema flag
>> Concat(Find(["a", "b", "c"], "The quick brown fox jumped over the lazy dog", [1, 2, 3, 4, 5]), IfError(Text(Result), $"Error(Kind={FirstError.Kind})"), ", ")
"38, 11, 8, Error(Kind=20), Error(Kind=20)"

>> Round(If(1/0<2,[12.34, 56.78]), 1)
#Error(Kind=Div0)

>> Round(1234.5678, If(Sqrt(-1)<0,[1, 2, 3]))
#Error(Kind=Numeric)

>> Round([12.34, 56.78], 1/0)
[Microsoft.PowerFx.Types.ErrorValue,Microsoft.PowerFx.Types.ErrorValue]

// Needs updating for consistent schema flag
>> Round(Sqrt(-1), [1, 2, 3])
Table({Result:Microsoft.PowerFx.Types.ErrorValue},{Result:Microsoft.PowerFx.Types.ErrorValue},{Result:Microsoft.PowerFx.Types.ErrorValue})

>> Round([123.456, 234.567], [1, 2, 3])
Table({Value:123.5},{Value:234.57},Microsoft.PowerFx.Types.ErrorValue)

>> Concat(Round([12.34, 56.78], 1/0), IfError(Text(Value), $"Error(Kind={FirstError.Kind})"), ", ")
"Error(Kind=13), Error(Kind=13)"

// Needs updating for consistent schema flag
>> Concat(Round(Sqrt(-1), [1, 2, 3]), IfError(Text(Result), $"Error(Kind={FirstError.Kind})"), ", ")
"Error(Kind=24), Error(Kind=24), Error(Kind=24)"

>> Concat(Round([123.456, 234.567], [1, 2, 3]), IfError(Text(Value), $"Error(Kind={FirstError.Kind})"), ", ")
"38, 11, 8, Error(Kind=20), Error(Kind=20)"

// *********** 2+-argument functions, blanks ***********

>> Concatenate(If(1<0,["hello", "hi"]), " world")
Blank()

>> Concatenate("hello ", If(1<0,["world", "day"]))
Blank()

// Needs updating for consistent schema flag
>> Concatenate(["hello", "hi"], If(1<0," world"))
Table({Result:"hello"},{Result:"hi"})

// Needs updating for consistent schema flag
>> Concatenate(If(1<0,"hi"), ["hello", "great", "world"])
Table({Result:"hello"},{Result:"great"},{Result:"world"})

>> Find(If(1<0,["hello", "hi"]), " world")
Blank()

>> Find("a", If(1<0,["world", "day"]))
Blank()

// Needs updating for consistent schema flag
>> Find(["a", "b"], If(1<0,"abcdefg"))
Table({Result:Blank()},{Result:Blank()})

// Needs updating for consistent schema flag
>> Find(If(1<0,"a"), ["hello", "great", "world"])
Table({Result:1},{Result:1},{Result:1})

>> Round(If(1<0,[12.34, 56.78]), 1)
Blank()

>> Round(1234.5678, If(1<0,[1, 2, 3]))
Blank()

>> Round([12.34, 56.78], If(1<0,1))
[12,57]

// Needs updating for consistent schema flag
>> Round(If(1<0,2), [1, 2, 3])
Table({Result:0},{Result:0},{Result:0})
