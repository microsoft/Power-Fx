
// ************************************** AND BOOLEAN LOGIC CASES **************************************

//================================Function notation===================================

>> And(true)
true

>> And(false)
false

>> And(true,true)
true

>> And(true,false)
false

>> And(false,false)
false

>> And(true,true,true)
true

>> And(true,true,false)
false

>> And(true,true,true,false)
false

>> And(false,true,true,true,false)
false


// ============================Visual Basic operator notation==========================

>> true
true

>> false
false

>> true And true
true

>> true And false
false

>> false And false
false

>> true And true And true And false
false

>> false And true And true And true And false
false


// ============================Javascript operator notation============================

>> true && true
true

>> true && false
false

>> false && false
false

>> true && true && true && false 
false

>> false && true && true && true && true && false
false


// =========================Null, Empty String and Error cases =========================

//Test short-circuiting. Error condition in second argument not evaluated
>> And(false, 1/0=1)
false

>> And(false, true, 1/0=1)
false

>> And(true, true, false, 1/0=1)
false

>> And(true, true, true, 1/0=1)
#Error(Kind=Div0)

>> And(1/0 = 7, true)
#Error(Kind=Div0)

>> And(Blank(), true)
Blank()

>> And(Blank(), false)
Blank()

>> And(Blank(), Blank())
Blank()

>> And(true, true, true, true, Blank(), true)
Blank()

>> And("", true)
Blank()

>> And("", false)
Blank()

>> And("", "")
Blank()

>> And(true, true, true, true, "", true)
Blank()

// ====================== AND boolean logic between different datatyps ===================

// 1. First Argument - Number and Second Argument - Other Datatypes

>> And(1,1)
true

>> And(1,0)
false

>> And(23,-23.5)
true

>> And(0,"0")
false

>> And(1,"1")
#Error(Kind=InvalidArgument)

>> And(1,"ABC")
#Error(Kind=InvalidArgument)

>> And(-24.5,"true")
true

>> And(1,true)
true

>> And(1,false)
false

>> And(0,false)
false

// 2. First Argument - String and Second Argument - Other Datatypes

>> And("1",0)
#Error(Kind=InvalidArgument)

>> And("ABC",1)
#Error(Kind=InvalidArgument)

>> And("ABC","ABC")
#Error(Kind=InvalidArgument)

>> And("ABC","abc")
#Error(Kind=InvalidArgument)

>> And("ABC",true)
#Error(Kind=InvalidArgument)

>> And("ABC",false)
#Error(Kind=InvalidArgument)

>> And("true",true)
true

>> And("false",true)
false

>> And("true","true")
true


// 3. First Argument - Boolean and Second Argument - Other Datatypes

>> And(true,1)
true

>> And(true,-23.5)
true

>> And(true,0)
false

>> And(false,1)
false

>> And(true, "1") 
#Error(Kind=InvalidArgument)

>> And(true, "true")
true

>> And(true, "false")
false

>> And(true, true)
true

// ************************************** OR BOOLEAN LOGIC CASES **************************************

//================================Function notation===================================

>> Or(true)
true

>> Or(false)
false

>> Or(true,true)
true

>> Or(true,false)
true

>> Or(false,false)
false

>> Or(false,false,false)
false

>> Or(false,false, true)
true

>> Or(true,false,false,false)
true

>> Or(false,false,false,true)
true

>> Or(false,true,true,true,false)
true


// ============================Visual Basic operator notation==========================

>> true Or true
true

>> true Or false
true

>> false Or false
false

>> true Or false Or false Or false
true

>> false Or false Or false Or true
true

>> false Or true Or true Or true Or false
true

// ============================Javascript operator notation============================

>> true || true
true

>> true || false
true

>> false || false
false

>> true || false || false || false
true

>> false || false || false || true
true

>> false || true || true || true || false
true


// ============================Null, Empty String and Error cases =======================

//Test short-circuiting. Error condition in second argument not evaluated
>> Or(true, 1/0=1)
true

>> Or(true, 1/0=1, true, false)
true

>> Or(1/0 = 7, true)
#Error(Kind=Div0)

>> Or(false, 1/0=1)
#Error(Kind=Div0)

>> Or(1/0=7, true)
#Error(Kind=Div0)

>> Or(Blank(), true)
true

>> Or(Blank(), false)
false

>> Or(Blank(), Blank())
false

>> Or("", true)
true

>> Or("", false)
false

>> Or("", "")
false

// ====================== OR boolean logic between different datatyps ===================

// 1. First Argument - Number Or Second Argument - Other Datatypes

>> Or(1,1)
true

>> Or(23,-23.5)
true

>> Or(1,"1")
true

>> Or(0,"1")
#Error(Kind=InvalidArgument)

>> Or(1,"ABC")
true

>> Or(24,true)
true

>> Or(1,false)
true

// 2. First Argument - String Or Second Argument - Other Datatypes

>> Or("1",1)
#Error(Kind=InvalidArgument)

>> Or("ABC",11)
#Error(Kind=InvalidArgument)

>> Or("ABC","ABC")
#Error(Kind=InvalidArgument)

>> Or("ABC","abc")
#Error(Kind=InvalidArgument)

>> Or("ABC",true)
#Error(Kind=InvalidArgument)

>> Or("ABC",false)
#Error(Kind=InvalidArgument)

// 3. First Argument - Boolean Or Second Argument - Other Datatypes

>> Or(true,1)
true

>> Or(true,-23.5)
true

>> Or(true,0)
true

>> Or(false,1)
true

>> Or(true, "true")
true

// ************************************** NOT BOOLEAN LOGIC CASES **************************************

//================================Function notation===================================

>> Not(true)
false

>> Not(false)
true

>> Not(1)
false

>> Not(0)
true

>> Not("1")
#Error(Kind=InvalidArgument)

>> Not("0")
#Error(Kind=InvalidArgument)

>> Not("true")
false

>> Not("false")
true

// ============================Visual Basic operator notation==========================

>> Not true
false

>> Not false
true

// ============================Javascript operator notation============================
	
>> !true
false

>> !false
true

// ============================Null, Empty String and Error cases ========================

>> Not(1/0=1)
#Error(Kind=Div0)

>> Not(Blank())
true

>> Not("")
true
