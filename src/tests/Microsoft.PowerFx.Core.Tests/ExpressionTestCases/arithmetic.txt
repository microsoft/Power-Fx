// literals
>> 1
1

>> 1.0
1

>> 1.5
1.5

>> 2.0e-4
0.0002

// Test simple arithmetic
>> 1+2
3

>> 1 + (1/0)
Error({Kind:ErrorKind.Div0})

>> 1 - (1/0)
Error({Kind:ErrorKind.Div0})

>> 1 * (1/0)
Error({Kind:ErrorKind.Div0})

>> 1 / (1/0)
Error({Kind:ErrorKind.Div0})

>> 5-3
2

// Unary minus
>> -3
-3

>> -(1/0)
Error({Kind:ErrorKind.Div0})

>> 5 - -3
8

>> -(5+3)
-8

>> 2*3
6

>> 15/3
5

>> 1/2
0.5

>> 20%
0.2

>> 200%
2

>> (1/0)%
Error({Kind:ErrorKind.Div0})

>> 1 * 50%
0.5

// Precedence
>> 1+2*3
7

// Comparison operations 
>> 1=1
true

>> 1<>1
false

>> 6>5
true

>> 5>6
false

>> 5.0>5
false 


>> 5>=5
true

>> 5>=6
false

>> 5 < 7
true

>> -5 < 3
true

>> 5 < 5
false

>> 5 <= 7
true

>> 5 < 1/0
Error({Kind:ErrorKind.Div0})

>> 5 <= 1/0
Error({Kind:ErrorKind.Div0})

>> 5 > 1/0
Error({Kind:ErrorKind.Div0})

>> 5 >= 1/0
Error({Kind:ErrorKind.Div0})

>> 5 = 1/0
Error({Kind:ErrorKind.Div0})

>> 5 <> 1/0
Error({Kind:ErrorKind.Div0})

// Blank coercions
>> 1 < If(1<0,1)
false

>> 1 > If(1<0,1)
true

>> 1 <= If(1<0,1)
false

>> 1 >= If(1<0,1)
true

>> If(1<0,1) < 0
false

>> If(1<0,1) > 0
false

>> If(1<0,1) <= 0
true

>> If(1<0,1) >= 0
true

>> 1 < Blank()
false

>> 1 > Blank()
true

>> 1 <= Blank()
false

>> 1 >= Blank()
true

>> Blank() < 0
false

>> Blank() > 0
false

>> Blank() <= 0
true

>> Blank() >= 0
true
