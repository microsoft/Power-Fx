>> (Date(2011, 2, 3) + Time(1, 2, 3)) = DateTime(2011, 2, 3, 1, 2, 3)
true

>> DateTime(2011, 2, 3, 1, 2, 3)
DateTime(2011,2,3,1,2,3,0)

>> DateTime(2011, 2, 3, 1, 2, 3, 4)
DateTime(2011,2,3,1,2,3,4)

// Month overflow
>> DateTime(2021, 13, 14, 0, 0, 0)
DateTime(2022,1,14,0,0,0,0)

// Month underflow
>> DateTime(2021, 0, 15, 0, 0, 0)
DateTime(2020,12,15,0,0,0,0)

// Day overflow
>> DateTime(2022,2,29,12,34,56,789)
DateTime(2022,3,1,12,34,56,789)

// Day underflow
>> DateTime(2020,3,0,1,2,3,4)
DateTime(2020,2,29,1,2,3,4)

// Hour overflow
>> DateTime(1987, 12, 16, 24, 0, 0)
DateTime(1987,12,17,0,0,0,0)

// Hour underflow
>> DateTime(1988, 1, 2, -1, 0, 0)
DateTime(1988,1,1,23,0,0,0)

// Minute overflow
>> DateTime(2000, 3, 6, 12, 185, 0)
DateTime(2000,3,6,15,5,0,0)

// Minute underflow
>> DateTime(2001, 1, 2, 2, -1, 59, 999)
DateTime(2001,1,2,1,59,59,999)

// Second overflow
>> DateTime(2022, 3, 26, 0, 0, 4000)
DateTime(2022,3,26,1,6,40,0)

// Second underflow
>> DateTime(2022, 3, 26, 0, 0, -1)
DateTime(2022,3,25,23,59,59,0)

// Millisecond overflow
>> DateTime(2022, 3, 6, 0, 0, 0, 1000)
DateTime(2022,3,6,0,0,1,0)

// Millisecond underflow
>> DateTime(2022, 3, 15, 12, 34, 56, -1)
DateTime(2022,3,15,12,34,55,999)

// Millisecond overflow to year
>> DateTime(2021, 12, 31, 23, 59, 59, 1001)
DateTime(2022,1,1,0,0,0,1)

// Second underflow to year
>> DateTime(2021, 1, 1, 0, 0, -1)
DateTime(2020,12,31,23,59,59,0)

// Blanks are interpreted as zero
>> DateTime(2020, Blank(), 1, 0, 0, 0)
DateTime(2019,12,1,0,0,0,0)

// Blanks are interpreted as zero
>> DateTime(2020, 3, Blank(), 0, 0, 0)
DateTime(2020,2,29,0,0,0,0)

// Blanks are interpreted as zero
>> DateTime(2020, 3, 3, Blank(), 12, 34)
DateTime(2020,3,3,0,12,34,0)

// Blanks are interpreted as zero
>> DateTime(2020, 3, 3, 12, Blank(), 34)
DateTime(2020,3,3,12,0,34,0)

// Blanks are interpreted as zero
>> DateTime(2020, 3, 3, 12, 34, Blank())
DateTime(2020,3,3,12,34,0,0)

// Blanks are interpreted as zero
>> DateTime(2020, 3, 3, 12, 34, 56, Blank())
DateTime(2020,3,3,12,34,56,0)

// Strings can be coerced to numbers (Value), booleans can be coerced to numbers (true = 1, false = 0)
>> DateTime("2022", true, 3, 12, Blank(), false)
DateTime(2022,1,3,12,0,0,0)

// Errors are returned
>> DateTime(2020, Sqrt(-1), 23, 1, 2, 3)
#Error(Kind=Numeric)
